

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 13 00:14:35 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213                           
   214                           	psect	idataCOMMON
   215  017D                     __pidataCOMMON:
   216                           
   217                           ;initializer for _SALIDA
   218  017D  3403               	retlw	3
   219                           
   220                           	psect	idataBANK0
   221  0179                     __pidataBANK0:
   222                           
   223                           ;initializer for _DISPLAY
   224  0179  343F               	retlw	63
   225  017A  3406               	retlw	6
   226  017B  345B               	retlw	91
   227  017C  344F               	retlw	79
   228                           
   229                           	psect	nvCOMMON
   230  0075                     __pnvCOMMON:
   231  0075                     _J2:
   232  0075                     	ds	1
   233  0076                     _J1:
   234  0076                     	ds	1
   235                           
   236                           	psect	nvBANK0
   237  002F                     __pnvBANK0:
   238  002F                     _UNIDAD:
   239  002F                     	ds	1
   240  0009                     _PORTE	set	9
   241  0006                     _PORTB	set	6
   242  0008                     _PORTDbits	set	8
   243  0007                     _PORTCbits	set	7
   244  0009                     _PORTEbits	set	9
   245  0005                     _PORTA	set	5
   246  000B                     _INTCONbits	set	11
   247  0008                     _PORTD	set	8
   248  0007                     _PORTC	set	7
   249  0006                     _PORTBbits	set	6
   250  0058                     _RBIF	set	88
   251  0096                     _IOCBbits	set	150
   252  0095                     _WPUB	set	149
   253  0081                     _OPTION_REGbits	set	129
   254  008F                     _OSCCONbits	set	143
   255  0086                     _TRISBbits	set	134
   256  0089                     _TRISE	set	137
   257  0088                     _TRISD	set	136
   258  0087                     _TRISC	set	135
   259  0086                     _TRISB	set	134
   260  0085                     _TRISA	set	133
   261  0189                     _ANSELH	set	393
   262  0188                     _ANSEL	set	392
   263                           
   264                           	psect	cinit
   265  000F                     start_initialization:	
   266                           ; #config settings
   267                           
   268  000F                     __initialization:
   269                           
   270                           ; Initialize objects allocated to BANK0
   271  000F  120A  118A  2179  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   272  0014  00AB               	movwf	__pdataBANK0& (0+127)
   273  0015  120A  118A  217A  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   274  001A  00AC               	movwf	(__pdataBANK0+1)& (0+127)
   275  001B  120A  118A  217B  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   276  0020  00AD               	movwf	(__pdataBANK0+2)& (0+127)
   277  0021  120A  118A  217C  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   278  0026  00AE               	movwf	(__pdataBANK0+3)& (0+127)
   279                           
   280                           ; Initialize objects allocated to COMMON
   281  0027  120A  118A  217D  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   282  002C  00F9               	movwf	__pdataCOMMON& (0+127)
   283                           
   284                           ; Clear objects allocated to COMMON
   285  002D  01F7               	clrf	__pbssCOMMON& (0+127)
   286  002E  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   287  002F                     end_of_initialization:	
   288                           ;End of C runtime variable initialization code
   289                           
   290  002F                     __end_of__initialization:
   291  002F  0183               	clrf	3
   292  0030  120A  118A  28E6   	ljmp	_main	;jump to C main() function
   293                           
   294                           	psect	bssCOMMON
   295  0077                     __pbssCOMMON:
   296  0077                     _flag:
   297  0077                     	ds	2
   298                           
   299                           	psect	dataCOMMON
   300  0079                     __pdataCOMMON:
   301  0079                     _SALIDA:
   302  0079                     	ds	1
   303                           
   304                           	psect	dataBANK0
   305  002B                     __pdataBANK0:
   306  002B                     _DISPLAY:
   307  002B                     	ds	4
   308                           
   309                           	psect	cstackCOMMON
   310  0070                     __pcstackCOMMON:
   311  0070                     ?_setup:
   312  0070                     ?_division:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_isr:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ??_isr:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_main:	
   322                           ; 1 bytes @ 0x0
   323                           
   324                           
   325                           ; 1 bytes @ 0x0
   326  0070                     	ds	4
   327  0074                     ??_setup:
   328  0074                     ??___awmod:	
   329                           ; 1 bytes @ 0x4
   330                           
   331                           
   332                           ; 1 bytes @ 0x4
   333  0074                     	ds	1
   334                           
   335                           	psect	cstackBANK0
   336  0020                     __pcstackBANK0:
   337  0020                     ?___awmod:
   338  0020                     ___awmod@divisor:	
   339                           ; 2 bytes @ 0x0
   340                           
   341                           
   342                           ; 2 bytes @ 0x0
   343  0020                     	ds	2
   344  0022                     ___awmod@dividend:
   345                           
   346                           ; 2 bytes @ 0x2
   347  0022                     	ds	2
   348  0024                     ___awmod@counter:
   349                           
   350                           ; 1 bytes @ 0x4
   351  0024                     	ds	1
   352  0025                     ___awmod@sign:
   353                           
   354                           ; 1 bytes @ 0x5
   355  0025                     	ds	1
   356  0026                     ??_division:
   357                           
   358                           ; 1 bytes @ 0x6
   359  0026                     	ds	3
   360  0029                     ??_main:
   361                           
   362                           ; 1 bytes @ 0x9
   363  0029                     	ds	2
   364                           
   365                           	psect	maintext
   366  00E6                     __pmaintext:	
   367 ;;
   368 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   369 ;;
   370 ;; *************** function _main *****************
   371 ;; Defined at:
   372 ;;		line 95 in file "lab0.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : B00/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   386 ;;      Params:         0       0       0       0       0
   387 ;;      Locals:         0       0       0       0       0
   388 ;;      Temps:          0       2       0       0       0
   389 ;;      Totals:         0       2       0       0       0
   390 ;;Total ram usage:        2 bytes
   391 ;; Hardware stack levels required when called:    3
   392 ;; This function calls:
   393 ;;		_division
   394 ;;		_setup
   395 ;; This function is called by:
   396 ;;		Startup code after reset
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           
   401                           ;psect for function _main
   402  00E6                     _main:
   403  00E6                     l999:	
   404                           ;incstack = 0
   405                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   406                           
   407                           
   408                           ;lab0.c: 97:             break;
   409  00E6  120A  118A  2136  120A  118A  	fcall	_setup
   410  00EB                     l79:	
   411                           ;lab0.c: 98:         }
   412                           
   413                           
   414                           ;lab0.c: 99:     };lab0.c: 100: }
   415  00EB  120A  118A  2160  120A  118A  	fcall	_division
   416  00F0                     l1001:
   417                           
   418                           ;lab0.c: 101: 
   419  00F0  1283               	bcf	3,5	;RP0=0, select bank0
   420  00F1  1303               	bcf	3,6	;RP1=0, select bank0
   421  00F2  082F               	movf	_UNIDAD,w
   422  00F3  3E2B               	addlw	(low (_DISPLAY| 0))& (0+255)
   423  00F4  0084               	movwf	4
   424  00F5  1383               	bcf	3,7	;select IRP bank0
   425  00F6  0800               	movf	0,w
   426  00F7  0085               	movwf	5	;volatile
   427                           
   428                           ;lab0.c: 102: 
   429  00F8  2909               	goto	l1005
   430  00F9                     l81:	
   431                           ;lab0.c: 103: ;lab0.c: 104: void setup(void){
   432                           
   433                           
   434                           ;lab0.c: 105: 
   435  00F9  1409               	bsf	9,0	;volatile
   436                           
   437                           ;lab0.c: 106:     ANSEL = 0X00;
   438  00FA  1089               	bcf	9,1	;volatile
   439                           
   440                           ;lab0.c: 107:     ANSELH = 0X00;
   441  00FB  1109               	bcf	9,2	;volatile
   442                           
   443                           ;lab0.c: 108: 
   444  00FC  291F               	goto	l82
   445  00FD                     l83:	
   446                           ;lab0.c: 110:     TRISB = 0X00;
   447                           
   448                           
   449                           ;lab0.c: 111:     TRISC = 0X00;
   450  00FD  1409               	bsf	9,0	;volatile
   451                           
   452                           ;lab0.c: 112:     TRISD = 0X00;
   453  00FE  1089               	bcf	9,1	;volatile
   454                           
   455                           ;lab0.c: 113:     TRISE = 0X00;
   456  00FF  1109               	bcf	9,2	;volatile
   457                           
   458                           ;lab0.c: 114:     TRISBbits.TRISB0 = 1;
   459  0100  291F               	goto	l82
   460  0101                     l84:	
   461                           ;lab0.c: 116:     TRISBbits.TRISB2 = 1;
   462                           
   463                           
   464                           ;lab0.c: 117: 
   465  0101  1009               	bcf	9,0	;volatile
   466                           
   467                           ;lab0.c: 118:     PORTA = 0X00;
   468  0102  1489               	bsf	9,1	;volatile
   469                           
   470                           ;lab0.c: 119:     PORTB = 0X00;
   471  0103  1109               	bcf	9,2	;volatile
   472                           
   473                           ;lab0.c: 120:     PORTC = 0X00;
   474  0104  291F               	goto	l82
   475  0105                     l85:	
   476                           ;lab0.c: 122:     PORTE = 0X00;
   477                           
   478                           
   479                           ;lab0.c: 123: 
   480  0105  1009               	bcf	9,0	;volatile
   481                           
   482                           ;lab0.c: 124: 
   483  0106  1089               	bcf	9,1	;volatile
   484                           
   485                           ;lab0.c: 125:     OSCCONbits.IRCF2 = 0;
   486  0107  1509               	bsf	9,2	;volatile
   487                           
   488                           ;lab0.c: 126:     OSCCONbits.IRCF1 = 1;
   489  0108  291F               	goto	l82
   490  0109                     l1005:
   491  0109  0879               	movf	_SALIDA,w
   492  010A  00A9               	movwf	??_main
   493  010B  01AA               	clrf	??_main+1
   494                           
   495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   496                           ; Switch size 1, requested type "simple"
   497                           ; Number of cases is 1, Range of values is 0 to 0
   498                           ; switch strategies available:
   499                           ; Name         Instructions Cycles
   500                           ; simple_byte            4     3 (average)
   501                           ; direct_byte           11     8 (fixed)
   502                           ; jumptable            260     6 (fixed)
   503                           ;	Chosen strategy is simple_byte
   504  010C  082A               	movf	??_main+1,w
   505  010D  3A00               	xorlw	0	; case 0
   506  010E  1903               	skipnz
   507  010F  2911               	goto	l1049
   508  0110  291F               	goto	l82
   509  0111                     l1049:
   510                           
   511                           ; Switch size 1, requested type "simple"
   512                           ; Number of cases is 4, Range of values is 0 to 3
   513                           ; switch strategies available:
   514                           ; Name         Instructions Cycles
   515                           ; simple_byte           13     7 (average)
   516                           ; direct_byte           20     8 (fixed)
   517                           ; jumptable            260     6 (fixed)
   518                           ;	Chosen strategy is simple_byte
   519  0111  0829               	movf	??_main,w
   520  0112  3A00               	xorlw	0	; case 0
   521  0113  1903               	skipnz
   522  0114  2905               	goto	l85
   523  0115  3A01               	xorlw	1	; case 1
   524  0116  1903               	skipnz
   525  0117  2901               	goto	l84
   526  0118  3A03               	xorlw	3	; case 2
   527  0119  1903               	skipnz
   528  011A  28FD               	goto	l83
   529  011B  3A01               	xorlw	1	; case 3
   530  011C  1903               	skipnz
   531  011D  28F9               	goto	l81
   532  011E  291F               	goto	l82
   533  011F                     l82:
   534                           
   535                           ;lab0.c: 128:     OSCCONbits.SCS = 1;
   536  011F  1F87               	btfss	7,7	;volatile
   537  0120  2922               	goto	u371
   538  0121  2923               	goto	u370
   539  0122                     u371:
   540  0122  292E               	goto	l86
   541  0123                     u370:
   542  0123                     l1007:
   543                           
   544                           ;lab0.c: 129: ;lab0.c: 130: 
   545  0123  300D               	movlw	13
   546  0124  1283               	bcf	3,5	;RP0=0, select bank0
   547  0125  1303               	bcf	3,6	;RP1=0, select bank0
   548  0126  00AA               	movwf	??_main+1
   549  0127  30FB               	movlw	251
   550  0128  00A9               	movwf	??_main
   551  0129                     u397:
   552  0129  0BA9               	decfsz	??_main,f
   553  012A  2929               	goto	u397
   554  012B  0BAA               	decfsz	??_main+1,f
   555  012C  2929               	goto	u397
   556                           
   557                           ;lab0.c: 131:     OPTION_REGbits.T0CS = 0;
   558  012D  2933               	goto	l91
   559  012E                     l86:	
   560                           ;lab0.c: 133:     WPUB = 0b00000111;
   561                           
   562  012E  1F88               	btfss	8,7	;volatile
   563  012F  2931               	goto	u381
   564  0130  2932               	goto	u380
   565  0131                     u381:
   566  0131  28EB               	goto	l79
   567  0132                     u380:
   568  0132  2923               	goto	l1007
   569  0133                     l91:
   570  0133  120A  118A  280C   	ljmp	start
   571  0136                     __end_of_main:
   572                           
   573                           	psect	text1
   574  0136                     __ptext1:	
   575 ;; *************** function _setup *****************
   576 ;; Defined at:
   577 ;;		line 143 in file "lab0.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    1
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		_main
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           
   606                           ;psect for function _setup
   607  0136                     _setup:
   608  0136                     l869:	
   609                           ;incstack = 0
   610                           ; Regs used in _setup: [wreg+status,2]
   611                           
   612                           
   613                           ;lab0.c: 145:     J2 = 0b00000001;
   614  0136  1683               	bsf	3,5	;RP0=1, select bank3
   615  0137  1703               	bsf	3,6	;RP1=1, select bank3
   616  0138  0188               	clrf	8	;volatile
   617                           
   618                           ;lab0.c: 146: }
   619  0139  0189               	clrf	9	;volatile
   620                           
   621                           ;lab0.c: 148:     UNIDAD = SALIDA%10;
   622  013A  1683               	bsf	3,5	;RP0=1, select bank1
   623  013B  1303               	bcf	3,6	;RP1=0, select bank1
   624  013C  0185               	clrf	5	;volatile
   625                           
   626                           ;lab0.c: 149: }
   627  013D  0186               	clrf	6	;volatile
   628  013E  0187               	clrf	7	;volatile
   629  013F  0188               	clrf	8	;volatile
   630  0140  0189               	clrf	9	;volatile
   631  0141                     l871:
   632  0141  1406               	bsf	6,0	;volatile
   633  0142                     l873:
   634  0142  1486               	bsf	6,1	;volatile
   635  0143                     l875:
   636  0143  1506               	bsf	6,2	;volatile
   637  0144  1283               	bcf	3,5	;RP0=0, select bank0
   638  0145  1303               	bcf	3,6	;RP1=0, select bank0
   639  0146  0185               	clrf	5	;volatile
   640  0147  0186               	clrf	6	;volatile
   641  0148  0187               	clrf	7	;volatile
   642  0149  0188               	clrf	8	;volatile
   643  014A  0189               	clrf	9	;volatile
   644  014B                     l877:
   645  014B  1683               	bsf	3,5	;RP0=1, select bank1
   646  014C  1303               	bcf	3,6	;RP1=0, select bank1
   647  014D  130F               	bcf	15,6	;volatile
   648  014E                     l879:
   649  014E  168F               	bsf	15,5	;volatile
   650  014F                     l881:
   651  014F  120F               	bcf	15,4	;volatile
   652  0150                     l883:
   653  0150  140F               	bsf	15,0	;volatile
   654  0151                     l885:
   655  0151  1281               	bcf	1,5	;volatile
   656  0152                     l887:
   657  0152  1381               	bcf	1,7	;volatile
   658  0153                     l889:
   659  0153  3007               	movlw	7
   660  0154  0095               	movwf	21	;volatile
   661  0155                     l891:
   662  0155  1416               	bsf	22,0	;volatile
   663  0156                     l893:
   664  0156  1496               	bsf	22,1	;volatile
   665  0157                     l895:
   666  0157  1516               	bsf	22,2	;volatile
   667  0158                     l897:
   668  0158  178B               	bsf	11,7	;volatile
   669  0159                     l899:
   670  0159  140B               	bsf	11,0	;volatile
   671  015A                     l901:
   672  015A  158B               	bsf	11,3	;volatile
   673  015B                     l903:
   674  015B  01F6               	clrf	_J1
   675  015C  0AF6               	incf	_J1,f
   676  015D                     l905:
   677  015D  01F5               	clrf	_J2
   678  015E  0AF5               	incf	_J2,f
   679  015F                     l94:
   680  015F  0008               	return
   681  0160                     __end_of_setup:
   682                           
   683                           	psect	text2
   684  0160                     __ptext2:	
   685 ;; *************** function _division *****************
   686 ;; Defined at:
   687 ;;		line 186 in file "lab0.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      unsigned char 
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0, pclath, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   701 ;;      Params:         0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0
   703 ;;      Temps:          0       3       0       0       0
   704 ;;      Totals:         0       3       0       0       0
   705 ;;Total ram usage:        3 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    2
   708 ;; This function calls:
   709 ;;		___awmod
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _division
   717  0160                     _division:
   718  0160                     l997:	
   719                           ;incstack = 0
   720                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
   721                           
   722  0160  300A               	movlw	10
   723  0161  1283               	bcf	3,5	;RP0=0, select bank0
   724  0162  1303               	bcf	3,6	;RP1=0, select bank0
   725  0163  00A0               	movwf	___awmod@divisor
   726  0164  3000               	movlw	0
   727  0165  00A1               	movwf	___awmod@divisor+1
   728  0166  0879               	movf	_SALIDA,w
   729  0167  00A6               	movwf	??_division
   730  0168  01A7               	clrf	??_division+1
   731  0169  0826               	movf	??_division,w
   732  016A  00A2               	movwf	___awmod@dividend
   733  016B  0827               	movf	??_division+1,w
   734  016C  00A3               	movwf	___awmod@dividend+1
   735  016D  120A  118A  2033  120A  118A  	fcall	___awmod
   736  0172  1283               	bcf	3,5	;RP0=0, select bank0
   737  0173  1303               	bcf	3,6	;RP1=0, select bank0
   738  0174  0820               	movf	?___awmod,w
   739  0175  00A8               	movwf	??_division+2
   740  0176  0828               	movf	??_division+2,w
   741  0177  00AF               	movwf	_UNIDAD
   742  0178                     l97:
   743  0178  0008               	return
   744  0179                     __end_of_division:
   745                           
   746                           	psect	text3
   747  0033                     __ptext3:	
   748 ;; *************** function ___awmod *****************
   749 ;; Defined at:
   750 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;  divisor         2    0[BANK0 ] int 
   753 ;;  dividend        2    2[BANK0 ] int 
   754 ;; Auto vars:     Size  Location     Type
   755 ;;  sign            1    5[BANK0 ] unsigned char 
   756 ;;  counter         1    4[BANK0 ] unsigned char 
   757 ;; Return value:  Size  Location     Type
   758 ;;                  2    0[BANK0 ] int 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       4       0       0       0
   767 ;;      Locals:         0       2       0       0       0
   768 ;;      Temps:          1       0       0       0       0
   769 ;;      Totals:         1       6       0       0       0
   770 ;;Total ram usage:        7 bytes
   771 ;; Hardware stack levels used:    1
   772 ;; Hardware stack levels required when called:    1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_division
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function ___awmod
   782  0033                     ___awmod:
   783  0033                     l959:	
   784                           ;incstack = 0
   785                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   786                           
   787  0033  1283               	bcf	3,5	;RP0=0, select bank0
   788  0034  1303               	bcf	3,6	;RP1=0, select bank0
   789  0035  01A5               	clrf	___awmod@sign
   790  0036                     l961:
   791  0036  1FA3               	btfss	___awmod@dividend+1,7
   792  0037  2839               	goto	u281
   793  0038  283A               	goto	u280
   794  0039                     u281:
   795  0039  2841               	goto	l967
   796  003A                     u280:
   797  003A                     l963:
   798  003A  09A2               	comf	___awmod@dividend,f
   799  003B  09A3               	comf	___awmod@dividend+1,f
   800  003C  0AA2               	incf	___awmod@dividend,f
   801  003D  1903               	skipnz
   802  003E  0AA3               	incf	___awmod@dividend+1,f
   803  003F                     l965:
   804  003F  01A5               	clrf	___awmod@sign
   805  0040  0AA5               	incf	___awmod@sign,f
   806  0041                     l967:
   807  0041  1FA1               	btfss	___awmod@divisor+1,7
   808  0042  2844               	goto	u291
   809  0043  2845               	goto	u290
   810  0044                     u291:
   811  0044  284A               	goto	l971
   812  0045                     u290:
   813  0045                     l969:
   814  0045  09A0               	comf	___awmod@divisor,f
   815  0046  09A1               	comf	___awmod@divisor+1,f
   816  0047  0AA0               	incf	___awmod@divisor,f
   817  0048  1903               	skipnz
   818  0049  0AA1               	incf	___awmod@divisor+1,f
   819  004A                     l971:
   820  004A  0820               	movf	___awmod@divisor,w
   821  004B  0421               	iorwf	___awmod@divisor+1,w
   822  004C  1903               	btfsc	3,2
   823  004D  284F               	goto	u301
   824  004E  2850               	goto	u300
   825  004F                     u301:
   826  004F  287F               	goto	l989
   827  0050                     u300:
   828  0050                     l973:
   829  0050  01A4               	clrf	___awmod@counter
   830  0051  0AA4               	incf	___awmod@counter,f
   831  0052  285E               	goto	l979
   832  0053                     l975:
   833  0053  3001               	movlw	1
   834  0054                     u315:
   835  0054  1003               	clrc
   836  0055  0DA0               	rlf	___awmod@divisor,f
   837  0056  0DA1               	rlf	___awmod@divisor+1,f
   838  0057  3EFF               	addlw	-1
   839  0058  1D03               	skipz
   840  0059  2854               	goto	u315
   841  005A                     l977:
   842  005A  3001               	movlw	1
   843  005B  00F4               	movwf	??___awmod
   844  005C  0874               	movf	??___awmod,w
   845  005D  07A4               	addwf	___awmod@counter,f
   846  005E                     l979:
   847  005E  1FA1               	btfss	___awmod@divisor+1,7
   848  005F  2861               	goto	u321
   849  0060  2862               	goto	u320
   850  0061                     u321:
   851  0061  2853               	goto	l975
   852  0062                     u320:
   853  0062                     l981:
   854  0062  0821               	movf	___awmod@divisor+1,w
   855  0063  0223               	subwf	___awmod@dividend+1,w
   856  0064  1D03               	skipz
   857  0065  2868               	goto	u335
   858  0066  0820               	movf	___awmod@divisor,w
   859  0067  0222               	subwf	___awmod@dividend,w
   860  0068                     u335:
   861  0068  1C03               	skipc
   862  0069  286B               	goto	u331
   863  006A  286C               	goto	u330
   864  006B                     u331:
   865  006B  2872               	goto	l985
   866  006C                     u330:
   867  006C                     l983:
   868  006C  0820               	movf	___awmod@divisor,w
   869  006D  02A2               	subwf	___awmod@dividend,f
   870  006E  0821               	movf	___awmod@divisor+1,w
   871  006F  1C03               	skipc
   872  0070  03A3               	decf	___awmod@dividend+1,f
   873  0071  02A3               	subwf	___awmod@dividend+1,f
   874  0072                     l985:
   875  0072  3001               	movlw	1
   876  0073                     u345:
   877  0073  1003               	clrc
   878  0074  0CA1               	rrf	___awmod@divisor+1,f
   879  0075  0CA0               	rrf	___awmod@divisor,f
   880  0076  3EFF               	addlw	-1
   881  0077  1D03               	skipz
   882  0078  2873               	goto	u345
   883  0079                     l987:
   884  0079  3001               	movlw	1
   885  007A  02A4               	subwf	___awmod@counter,f
   886  007B  1D03               	btfss	3,2
   887  007C  287E               	goto	u351
   888  007D  287F               	goto	u350
   889  007E                     u351:
   890  007E  2862               	goto	l981
   891  007F                     u350:
   892  007F                     l989:
   893  007F  0825               	movf	___awmod@sign,w
   894  0080  1903               	btfsc	3,2
   895  0081  2883               	goto	u361
   896  0082  2884               	goto	u360
   897  0083                     u361:
   898  0083  2889               	goto	l993
   899  0084                     u360:
   900  0084                     l991:
   901  0084  09A2               	comf	___awmod@dividend,f
   902  0085  09A3               	comf	___awmod@dividend+1,f
   903  0086  0AA2               	incf	___awmod@dividend,f
   904  0087  1903               	skipnz
   905  0088  0AA3               	incf	___awmod@dividend+1,f
   906  0089                     l993:
   907  0089  0823               	movf	___awmod@dividend+1,w
   908  008A  00A1               	movwf	?___awmod+1
   909  008B  0822               	movf	___awmod@dividend,w
   910  008C  00A0               	movwf	?___awmod
   911  008D                     l349:
   912  008D  0008               	return
   913  008E                     __end_of___awmod:
   914                           
   915                           	psect	text4
   916  008E                     __ptext4:	
   917 ;; *************** function _isr *****************
   918 ;; Defined at:
   919 ;;		line 54 in file "lab0.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0
   935 ;;      Temps:          4       0       0       0       0
   936 ;;      Totals:         4       0       0       0       0
   937 ;;Total ram usage:        4 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		Interrupt level 1
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function _isr
   948  008E                     _isr:
   949  008E                     i1l767:
   950                           
   951                           ;lab0.c: 57: 
   952  008E  1C0B               	btfss	11,0	;volatile
   953  008F  2891               	goto	u10_21
   954  0090  2892               	goto	u10_20
   955  0091                     u10_21:
   956  0091  28DF               	goto	i1l74
   957  0092                     u10_20:
   958  0092                     i1l769:
   959                           
   960                           ;lab0.c: 58:     setup();;lab0.c: 59:     while (1)
   961  0092  1283               	bcf	3,5	;RP0=0, select bank0
   962  0093  1303               	bcf	3,6	;RP1=0, select bank0
   963  0094  1806               	btfsc	6,0	;volatile
   964  0095  2897               	goto	u11_21
   965  0096  2898               	goto	u11_20
   966  0097                     u11_21:
   967  0097  28C6               	goto	i1l781
   968  0098                     u11_20:
   969  0098                     i1l771:
   970                           
   971                           ;lab0.c: 60:     {;lab0.c: 61:         division();
   972  0098  3082               	movlw	130
   973  0099  00F1               	movwf	??_isr+1
   974  009A  30DD               	movlw	221
   975  009B  00F0               	movwf	??_isr
   976  009C                     u40_27:
   977  009C  0BF0               	decfsz	??_isr,f
   978  009D  289C               	goto	u40_27
   979  009E  0BF1               	decfsz	??_isr+1,f
   980  009F  289C               	goto	u40_27
   981  00A0  28A1               	nop2
   982  00A1                     i1l773:
   983                           
   984                           ;lab0.c: 62:         PORTA = (DISPLAY[UNIDAD]);
   985  00A1  0879               	movf	_SALIDA,w
   986  00A2  3EFF               	addlw	255
   987  00A3  00F0               	movwf	??_isr
   988  00A4  0870               	movf	??_isr,w
   989  00A5  00F9               	movwf	_SALIDA
   990  00A6                     i1l775:
   991                           
   992                           ;lab0.c: 63:         switch (SALIDA)
   993  00A6  3082               	movlw	130
   994  00A7  00F1               	movwf	??_isr+1
   995  00A8  30DD               	movlw	221
   996  00A9  00F0               	movwf	??_isr
   997  00AA                     u41_27:
   998  00AA  0BF0               	decfsz	??_isr,f
   999  00AB  28AA               	goto	u41_27
  1000  00AC  0BF1               	decfsz	??_isr+1,f
  1001  00AD  28AA               	goto	u41_27
  1002  00AE  28AF               	nop2
  1003                           
  1004                           ;lab0.c: 64:         {
  1005  00AF  0879               	movf	_SALIDA,w
  1006  00B0  3EFF               	addlw	255
  1007  00B1  00F0               	movwf	??_isr
  1008  00B2  0870               	movf	??_isr,w
  1009  00B3  00F9               	movwf	_SALIDA
  1010  00B4                     i1l777:
  1011                           
  1012                           ;lab0.c: 65:             case 3:
  1013  00B4  3082               	movlw	130
  1014  00B5  00F1               	movwf	??_isr+1
  1015  00B6  30DD               	movlw	221
  1016  00B7  00F0               	movwf	??_isr
  1017  00B8                     u42_27:
  1018  00B8  0BF0               	decfsz	??_isr,f
  1019  00B9  28B8               	goto	u42_27
  1020  00BA  0BF1               	decfsz	??_isr+1,f
  1021  00BB  28B8               	goto	u42_27
  1022  00BC  28BD               	nop2
  1023  00BD                     i1l779:
  1024                           
  1025                           ;lab0.c: 66:                 PORTEbits.RE0 = 1;
  1026  00BD  0879               	movf	_SALIDA,w
  1027  00BE  3EFF               	addlw	255
  1028  00BF  00F0               	movwf	??_isr
  1029  00C0  0870               	movf	??_isr,w
  1030  00C1  00F9               	movwf	_SALIDA
  1031                           
  1032                           ;lab0.c: 67:                 PORTEbits.RE1 = 0;
  1033  00C2  3001               	movlw	1
  1034  00C3  00F7               	movwf	_flag
  1035  00C4  3000               	movlw	0
  1036  00C5  00F8               	movwf	_flag+1
  1037  00C6                     i1l781:
  1038                           
  1039                           ;lab0.c: 70: 
  1040  00C6  0377               	decf	_flag,w
  1041  00C7  0478               	iorwf	_flag+1,w
  1042  00C8  1D03               	btfss	3,2
  1043  00C9  28CB               	goto	u12_21
  1044  00CA  28CC               	goto	u12_20
  1045  00CB                     u12_21:
  1046  00CB  28DE               	goto	i1l791
  1047  00CC                     u12_20:
  1048  00CC                     i1l783:
  1049                           
  1050                           ;lab0.c: 71:             case 2:;lab0.c: 73:                 PORTEbits.RE1 = 0;
  1051  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1052  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1053  00CE  1886               	btfsc	6,1	;volatile
  1054  00CF  28D1               	goto	u13_21
  1055  00D0  28D2               	goto	u13_20
  1056  00D1                     u13_21:
  1057  00D1  28D6               	goto	i1l787
  1058  00D2                     u13_20:
  1059  00D2                     i1l785:
  1060                           
  1061                           ;lab0.c: 74:                 PORTEbits.RE2 = 0;;lab0.c: 75:                 break;
  1062  00D2  0876               	movf	_J1,w
  1063  00D3  0087               	movwf	7	;volatile
  1064                           
  1065                           ;lab0.c: 76: 
  1066  00D4  1003               	clrc
  1067  00D5  0DF6               	rlf	_J1,f
  1068  00D6                     i1l787:
  1069                           
  1070                           ;lab0.c: 78:                 PORTEbits.RE0 = 0;
  1071  00D6  1906               	btfsc	6,2	;volatile
  1072  00D7  28D9               	goto	u14_21
  1073  00D8  28DA               	goto	u14_20
  1074  00D9                     u14_21:
  1075  00D9  28DE               	goto	i1l791
  1076  00DA                     u14_20:
  1077  00DA                     i1l789:
  1078                           
  1079                           ;lab0.c: 79:                 PORTEbits.RE1 = 1;;lab0.c: 80:                 PORTEbits.RE
      +                          2 = 0;
  1080  00DA  0875               	movf	_J2,w
  1081  00DB  0088               	movwf	8	;volatile
  1082                           
  1083                           ;lab0.c: 81:                 break;
  1084  00DC  1003               	clrc
  1085  00DD  0DF5               	rlf	_J2,f
  1086  00DE                     i1l791:
  1087                           
  1088                           ;lab0.c: 86:                 PORTEbits.RE2 = 1;
  1089  00DE  100B               	bcf	11,0	;volatile
  1090  00DF                     i1l74:
  1091  00DF  0873               	movf	??_isr+3,w
  1092  00E0  008A               	movwf	10
  1093  00E1  0E72               	swapf	??_isr+2,w
  1094  00E2  0083               	movwf	3
  1095  00E3  0EFE               	swapf	btemp,f
  1096  00E4  0E7E               	swapf	btemp,w
  1097  00E5  0009               	retfie
  1098  00E6                     __end_of_isr:
  1099  007E                     btemp	set	126	;btemp
  1100  007E                     wtemp0	set	126
  1101                           
  1102                           	psect	intentry
  1103  0004                     __pintentry:	
  1104                           ;incstack = 0
  1105                           ; Regs used in _isr: [wreg+status,2+status,0]
  1106                           
  1107  0004                     interrupt_function:
  1108  007E                     saved_w	set	btemp
  1109  0004  00FE               	movwf	btemp
  1110  0005  0E03               	swapf	3,w
  1111  0006  00F2               	movwf	??_isr+2
  1112  0007  080A               	movf	10,w
  1113  0008  00F3               	movwf	??_isr+3
  1114  0009  120A  118A  288E   	ljmp	_isr
  1115                           
  1116                           	psect	config
  1117                           
  1118                           ;Config register CONFIG1 @ 0x2007
  1119                           ;	Oscillator Selection bits
  1120                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1121                           ;	Watchdog Timer Enable bit
  1122                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1123                           ;	Power-up Timer Enable bit
  1124                           ;	PWRTE = OFF, PWRT disabled
  1125                           ;	RE3/MCLR pin function select bit
  1126                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1127                           ;	Code Protection bit
  1128                           ;	CP = OFF, Program memory code protection is disabled
  1129                           ;	Data Code Protection bit
  1130                           ;	CPD = OFF, Data memory code protection is disabled
  1131                           ;	Brown Out Reset Selection bits
  1132                           ;	BOREN = OFF, BOR disabled
  1133                           ;	Internal External Switchover bit
  1134                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1135                           ;	Fail-Safe Clock Monitor Enabled bit
  1136                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1137                           ;	Low Voltage Programming Enable bit
  1138                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1139                           ;	In-Circuit Debugger Mode bit
  1140                           ;	DEBUG = 0x1, unprogrammed default
  1141  2007                     	org	8199
  1142  2007  20D4               	dw	8404
  1143                           
  1144                           ;Config register CONFIG2 @ 0x2008
  1145                           ;	Brown-out Reset Selection bit
  1146                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1147                           ;	Flash Program Memory Self Write Enable bits
  1148                           ;	WRT = OFF, Write protection off
  1149  2008                     	org	8200
  1150  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         2
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     11      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _division->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_division
    _division->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     613
                                              9 BANK0      2     2      0
                           _division
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _division                                             3     3      0     613
                                              6 BANK0      3     3      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _division
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1A      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 13 00:14:35 2021

                     _J1 0076                       _J2 0075                       l81 00F9  
                     l82 011F                       l91 0133                       l83 00FD  
                     l84 0101                       l85 0105                       l94 015F  
                     l86 012E                       l79 00EB                       l97 0178  
                    l349 008D                      l901 015A                      l903 015B  
                    l905 015D                      l871 0141                      l961 0036  
                    l881 014F                      l873 0142                      l971 004A  
                    l963 003A                      l891 0155                      l883 0150  
                    l875 0143                      l981 0062                      l973 0050  
                    l965 003F                      l893 0156                      l885 0151  
                    l877 014B                      l869 0136                      l991 0084  
                    l983 006C                      l975 0053                      l967 0041  
                    l959 0033                      l895 0157                      l887 0152  
                    l879 014E                      l993 0089                      l985 0072  
                    l977 005A                      l969 0045                      l897 0158  
                    l889 0153                      l987 0079                      l979 005E  
                    l899 0159                      l989 007F                      l997 0160  
                    l999 00E6                      u300 0050                      u301 004F  
                    u320 0062                      u321 0061                      u330 006C  
                    u331 006B                      u315 0054                      u350 007F  
                    u351 007E                      u335 0068                      u360 0084  
                    u280 003A                      u361 0083                      u345 0073  
                    u281 0039                      u290 0045                      u370 0123  
                    u291 0044                      u371 0122                      u380 0132  
                    u381 0131                      u397 0129                      _isr 008E  
                    fsr0 0004                      indf 0000             ___awmod@sign 0025  
                   l1001 00F0                     l1005 0109                     l1007 0123  
                   l1049 0111                     ?_isr 0070                     _RBIF 0058  
                   i1l74 00DF                     _WPUB 0095                     _flag 0077  
                   _main 00E6                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070          __end_of___awmod 008E  
                  _ANSEL 0188                    i1l771 0098                    i1l773 00A1  
                  i1l781 00C6                    i1l783 00CC                    i1l791 00DE  
                  i1l775 00A6                    i1l767 008E                    i1l785 00D2  
                  i1l777 00B4                    i1l769 0092                    i1l787 00D6  
                  i1l779 00BD                    i1l789 00DA                    u10_20 0092  
                  u10_21 0091                    u11_20 0098                    u11_21 0097  
                  u12_20 00CC                    u12_21 00CB                    u13_20 00D2  
                  u13_21 00D1                    u14_20 00DA                    u14_21 00D9  
                  u40_27 009C                    u41_27 00AA                    u42_27 00B8  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 0136                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0136                   ??_main 0029                   ?_setup 0070  
                 _ANSELH 0189                   _SALIDA 0079                   _UNIDAD 002F  
       __end_of_division 0179                ??___awmod 0074          ___awmod@divisor 0020  
        ___awmod@counter 0024             __pdataCOMMON 0079                   saved_w 007E  
__end_of__initialization 002F           __pcstackCOMMON 0070             __pidataBANK0 0179  
          __end_of_setup 0160           _OPTION_REGbits 0081                  ??_setup 0074  
             __pnvCOMMON 0075               __pmaintext 00E6               __pintentry 0004  
                _DISPLAY 002B                ?_division 0070                  ___awmod 0033  
                __ptext1 0136                  __ptext2 0160                  __ptext3 0033  
                __ptext4 008E             __size_of_isr 0058         ___awmod@dividend 0022  
   end_of_initialization 002F               ??_division 0026                _PORTBbits 0006  
              _PORTCbits 0007                _PORTDbits 0008                _PORTEbits 0009  
              _TRISBbits 0086            __pidataCOMMON 017D      start_initialization 000F  
            __end_of_isr 00E6              __pdataBANK0 002B              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_division 0019  
              __pnvBANK0 002F                 ?___awmod 0020           __size_of_setup 002A  
      interrupt_function 0004                 _IOCBbits 0096         __size_of___awmod 005B  
               _division 0160            __size_of_main 0050               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F  
