

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 02 00:10:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	functab,global,class=ENTRY,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305                           
   306                           	psect	strings
   307  000C                     __pstrings:
   308  000C                     stringtab:
   309  000C                     __stringtab:
   310  000C                     stringcode:	
   311                           ;	String table - string pointers are 1 byte each
   312                           
   313  000C                     stringdir:
   314  000C  3000               	movlw	high stringdir
   315  000D  008A               	movwf	10
   316  000E  0804               	movf	4,w
   317  000F  0A84               	incf	4,f
   318  0010  0782               	addwf	2,f
   319  0011                     __stringbase:
   320  0011  3400               	retlw	0
   321  0012                     __end_of__stringtab:
   322  0012                     _dpowers:
   323  0012  3401               	retlw	1
   324  0013  3400               	retlw	0
   325  0014  340A               	retlw	10
   326  0015  3400               	retlw	0
   327  0016  3464               	retlw	100
   328  0017  3400               	retlw	0
   329  0018  34E8               	retlw	232
   330  0019  3403               	retlw	3
   331  001A  3410               	retlw	16
   332  001B  3427               	retlw	39
   333  001C                     __end_of_dpowers:
   334  0013                     _SSPBUF	set	19
   335  0014                     _SSPCON	set	20
   336  0018                     _RCSTAbits	set	24
   337  0008                     _PORTD	set	8
   338  0006                     _PORTB	set	6
   339  001A                     _RCREG	set	26
   340  0019                     _TXREG	set	25
   341  0007                     _PORTCbits	set	7
   342  0065                     _RCIF	set	101
   343  0064                     _TXIF	set	100
   344  0094                     _SSPSTATbits	set	148
   345  0094                     _SSPSTAT	set	148
   346  009A                     _SPBRGH	set	154
   347  0099                     _SPBRG	set	153
   348  0098                     _TXSTAbits	set	152
   349  008F                     _OSCCONbits	set	143
   350  0088                     _TRISD	set	136
   351  0086                     _TRISB	set	134
   352  043B                     _TRISC3	set	1083
   353  043D                     _TRISC5	set	1085
   354  043A                     _TRISC2	set	1082
   355  0187                     _BAUDCTLbits	set	391
   356  0189                     _ANSELH	set	393
   357  0188                     _ANSEL	set	392
   358  001C                     STR_3:
   359  001C  3450               	retlw	80	;'P'
   360  001D  346F               	retlw	111	;'o'
   361  001E  3472               	retlw	114	;'r'
   362  001F  3420               	retlw	32	;' '
   363  0020  3466               	retlw	102	;'f'
   364  0021  3461               	retlw	97	;'a'
   365  0022  3476               	retlw	118	;'v'
   366  0023  346F               	retlw	111	;'o'
   367  0024  3472               	retlw	114	;'r'
   368  0025  3420               	retlw	32	;' '
   369  0026  3469               	retlw	105	;'i'
   370  0027  346E               	retlw	110	;'n'
   371  0028  3467               	retlw	103	;'g'
   372  0029  3472               	retlw	114	;'r'
   373  002A  3465               	retlw	101	;'e'
   374  002B  3473               	retlw	115	;'s'
   375  002C  3465               	retlw	101	;'e'
   376  002D  3420               	retlw	32	;' '
   377  002E  346C               	retlw	108	;'l'
   378  002F  3461               	retlw	97	;'a'
   379  0030  3420               	retlw	32	;' '
   380  0031  3463               	retlw	99	;'c'
   381  0032  3465               	retlw	101	;'e'
   382  0033  346E               	retlw	110	;'n'
   383  0034  3474               	retlw	116	;'t'
   384  0035  3465               	retlw	101	;'e'
   385  0036  346E               	retlw	110	;'n'
   386  0037  3461               	retlw	97	;'a'
   387  0038  342C               	retlw	44	;','
   388  0039  3420               	retlw	32	;' '
   389  003A  3473               	retlw	115	;'s'
   390  003B  3469               	retlw	105	;'i'
   391  003C  3420               	retlw	32	;' '
   392  003D  3465               	retlw	101	;'e'
   393  003E  3473               	retlw	115	;'s'
   394  003F  3420               	retlw	32	;' '
   395  0040  343C               	retlw	60	;'<'
   396  0041  3431               	retlw	49	;'1'
   397  0042  3430               	retlw	48	;'0'
   398  0043  3430               	retlw	48	;'0'
   399  0044  3420               	retlw	32	;' '
   400  0045  3463               	retlw	99	;'c'
   401  0046  346F               	retlw	111	;'o'
   402  0047  346C               	retlw	108	;'l'
   403  0048  346F               	retlw	111	;'o'
   404  0049  3463               	retlw	99	;'c'
   405  004A  3461               	retlw	97	;'a'
   406  004B  3472               	retlw	114	;'r'
   407  004C  3420               	retlw	32	;' '
   408  004D  3430               	retlw	48	;'0'
   409  004E  340D               	retlw	13
   410  004F  3400               	retlw	0
   411  0050                     STR_10:
   412  0050  3449               	retlw	73	;'I'
   413  0051  346E               	retlw	110	;'n'
   414  0052  3474               	retlw	116	;'t'
   415  0053  3472               	retlw	114	;'r'
   416  0054  346F               	retlw	111	;'o'
   417  0055  3464               	retlw	100	;'d'
   418  0056  3475               	retlw	117	;'u'
   419  0057  347A               	retlw	122	;'z'
   420  0058  3463               	retlw	99	;'c'
   421  0059  3461               	retlw	97	;'a'
   422  005A  3420               	retlw	32	;' '
   423  005B  3475               	retlw	117	;'u'
   424  005C  346E               	retlw	110	;'n'
   425  005D  3420               	retlw	32	;' '
   426  005E  3476               	retlw	118	;'v'
   427  005F  3461               	retlw	97	;'a'
   428  0060  346C               	retlw	108	;'l'
   429  0061  346F               	retlw	111	;'o'
   430  0062  3472               	retlw	114	;'r'
   431  0063  3420               	retlw	32	;' '
   432  0064  346D               	retlw	109	;'m'
   433  0065  3465               	retlw	101	;'e'
   434  0066  346E               	retlw	110	;'n'
   435  0067  346F               	retlw	111	;'o'
   436  0068  3472               	retlw	114	;'r'
   437  0069  3420               	retlw	32	;' '
   438  006A  346F               	retlw	111	;'o'
   439  006B  3420               	retlw	32	;' '
   440  006C  3469               	retlw	105	;'i'
   441  006D  3467               	retlw	103	;'g'
   442  006E  3475               	retlw	117	;'u'
   443  006F  3461               	retlw	97	;'a'
   444  0070  346C               	retlw	108	;'l'
   445  0071  3420               	retlw	32	;' '
   446  0072  3461               	retlw	97	;'a'
   447  0073  3420               	retlw	32	;' '
   448  0074  3435               	retlw	53	;'5'
   449  0075  340D               	retlw	13
   450  0076  3400               	retlw	0
   451  0077                     STR_9:
   452  0077  3449               	retlw	73	;'I'
   453  0078  346E               	retlw	110	;'n'
   454  0079  3474               	retlw	116	;'t'
   455  007A  3472               	retlw	114	;'r'
   456  007B  346F               	retlw	111	;'o'
   457  007C  3464               	retlw	100	;'d'
   458  007D  3475               	retlw	117	;'u'
   459  007E  347A               	retlw	122	;'z'
   460  007F  3463               	retlw	99	;'c'
   461  0080  3461               	retlw	97	;'a'
   462  0081  3420               	retlw	32	;' '
   463  0082  3475               	retlw	117	;'u'
   464  0083  346E               	retlw	110	;'n'
   465  0084  3420               	retlw	32	;' '
   466  0085  3476               	retlw	118	;'v'
   467  0086  3461               	retlw	97	;'a'
   468  0087  346C               	retlw	108	;'l'
   469  0088  346F               	retlw	111	;'o'
   470  0089  3472               	retlw	114	;'r'
   471  008A  3420               	retlw	32	;' '
   472  008B  3476               	retlw	118	;'v'
   473  008C  3461               	retlw	97	;'a'
   474  008D  346C               	retlw	108	;'l'
   475  008E  3469               	retlw	105	;'i'
   476  008F  3464               	retlw	100	;'d'
   477  0090  346F               	retlw	111	;'o'
   478  0091  3420               	retlw	32	;' '
   479  0092  3464               	retlw	100	;'d'
   480  0093  3465               	retlw	101	;'e'
   481  0094  3420               	retlw	32	;' '
   482  0095  3430               	retlw	48	;'0'
   483  0096  3420               	retlw	32	;' '
   484  0097  3461               	retlw	97	;'a'
   485  0098  3420               	retlw	32	;' '
   486  0099  3432               	retlw	50	;'2'
   487  009A  340D               	retlw	13
   488  009B  3400               	retlw	0
   489  009C                     STR_4:
   490  009C  3450               	retlw	80	;'P'
   491  009D  346F               	retlw	111	;'o'
   492  009E  3472               	retlw	114	;'r'
   493  009F  3420               	retlw	32	;' '
   494  00A0  3466               	retlw	102	;'f'
   495  00A1  3461               	retlw	97	;'a'
   496  00A2  3476               	retlw	118	;'v'
   497  00A3  346F               	retlw	111	;'o'
   498  00A4  3472               	retlw	114	;'r'
   499  00A5  3420               	retlw	32	;' '
   500  00A6  3469               	retlw	105	;'i'
   501  00A7  346E               	retlw	110	;'n'
   502  00A8  3467               	retlw	103	;'g'
   503  00A9  3472               	retlw	114	;'r'
   504  00AA  3465               	retlw	101	;'e'
   505  00AB  3473               	retlw	115	;'s'
   506  00AC  3465               	retlw	101	;'e'
   507  00AD  3420               	retlw	32	;' '
   508  00AE  346C               	retlw	108	;'l'
   509  00AF  3461               	retlw	97	;'a'
   510  00B0  3420               	retlw	32	;' '
   511  00B1  3464               	retlw	100	;'d'
   512  00B2  3465               	retlw	101	;'e'
   513  00B3  3463               	retlw	99	;'c'
   514  00B4  3465               	retlw	101	;'e'
   515  00B5  346E               	retlw	110	;'n'
   516  00B6  3461               	retlw	97	;'a'
   517  00B7  340D               	retlw	13
   518  00B8  3400               	retlw	0
   519  00B9                     STR_5:
   520  00B9  3450               	retlw	80	;'P'
   521  00BA  346F               	retlw	111	;'o'
   522  00BB  3472               	retlw	114	;'r'
   523  00BC  3420               	retlw	32	;' '
   524  00BD  3466               	retlw	102	;'f'
   525  00BE  3461               	retlw	97	;'a'
   526  00BF  3476               	retlw	118	;'v'
   527  00C0  346F               	retlw	111	;'o'
   528  00C1  3472               	retlw	114	;'r'
   529  00C2  3420               	retlw	32	;' '
   530  00C3  3469               	retlw	105	;'i'
   531  00C4  346E               	retlw	110	;'n'
   532  00C5  3467               	retlw	103	;'g'
   533  00C6  3472               	retlw	114	;'r'
   534  00C7  3465               	retlw	101	;'e'
   535  00C8  3473               	retlw	115	;'s'
   536  00C9  3465               	retlw	101	;'e'
   537  00CA  3420               	retlw	32	;' '
   538  00CB  346C               	retlw	108	;'l'
   539  00CC  3461               	retlw	97	;'a'
   540  00CD  3420               	retlw	32	;' '
   541  00CE  3475               	retlw	117	;'u'
   542  00CF  346E               	retlw	110	;'n'
   543  00D0  3469               	retlw	105	;'i'
   544  00D1  3464               	retlw	100	;'d'
   545  00D2  3461               	retlw	97	;'a'
   546  00D3  3464               	retlw	100	;'d'
   547  00D4  340D               	retlw	13
   548  00D5  3400               	retlw	0
   549  00D6                     STR_1:
   550  00D6  3456               	retlw	86	;'V'
   551  00D7  3441               	retlw	65	;'A'
   552  00D8  344C               	retlw	76	;'L'
   553  00D9  344F               	retlw	79	;'O'
   554  00DA  3452               	retlw	82	;'R'
   555  00DB  3420               	retlw	32	;' '
   556  00DC  3444               	retlw	68	;'D'
   557  00DD  3445               	retlw	69	;'E'
   558  00DE  3420               	retlw	32	;' '
   559  00DF  3450               	retlw	80	;'P'
   560  00E0  344F               	retlw	79	;'O'
   561  00E1  3454               	retlw	84	;'T'
   562  00E2  3431               	retlw	49	;'1'
   563  00E3  343A               	retlw	58	;':'
   564  00E4  3420               	retlw	32	;' '
   565  00E5  340D               	retlw	13
   566  00E6  3400               	retlw	0
   567  00E7                     STR_2:
   568  00E7  3456               	retlw	86	;'V'
   569  00E8  3441               	retlw	65	;'A'
   570  00E9  344C               	retlw	76	;'L'
   571  00EA  344F               	retlw	79	;'O'
   572  00EB  3452               	retlw	82	;'R'
   573  00EC  3420               	retlw	32	;' '
   574  00ED  3444               	retlw	68	;'D'
   575  00EE  3445               	retlw	69	;'E'
   576  00EF  3420               	retlw	32	;' '
   577  00F0  3450               	retlw	80	;'P'
   578  00F1  344F               	retlw	79	;'O'
   579  00F2  3454               	retlw	84	;'T'
   580  00F3  3432               	retlw	50	;'2'
   581  00F4  343A               	retlw	58	;':'
   582  00F5  3420               	retlw	32	;' '
   583  00F6  340D               	retlw	13
   584  00F7  3400               	retlw	0
   585  00F8                     STR_6:
   586  00F8  3425               	retlw	37	;'%'
   587  00F9  3464               	retlw	100	;'d'
   588  00FA  3400               	retlw	0
   589  0050                     
   590                           	psect	cinit
   591  07EB                     start_initialization:	
   592                           ; #config settings
   593                           
   594  07EB                     __initialization:
   595                           
   596                           ; Clear objects allocated to BANK0
   597  07EB  1383               	bcf	3,7	;select IRP bank0
   598  07EC  3020               	movlw	low __pbssBANK0
   599  07ED  0084               	movwf	4
   600  07EE  3050               	movlw	low (__pbssBANK0+48)
   601  07EF  120A  118A  216B  120A  118A  	fcall	clear_ram0
   602                           
   603                           ; Clear objects allocated to BANK1
   604  07F4  30A0               	movlw	low __pbssBANK1
   605  07F5  0084               	movwf	4
   606  07F6  30B4               	movlw	low (__pbssBANK1+20)
   607  07F7  120A  118A  216B  120A  118A  	fcall	clear_ram0
   608  07FC                     end_of_initialization:	
   609                           ;End of C runtime variable initialization code
   610                           
   611  07FC                     __end_of__initialization:
   612  07FC  0183               	clrf	3
   613  07FD  120A  118A  2DC8   	ljmp	_main	;jump to C main() function
   614                           
   615                           	psect	bssBANK0
   616  0020                     __pbssBANK0:
   617  0020                     _UNIDAD:
   618  0020                     	ds	1
   619  0021                     _DECENA:
   620  0021                     	ds	1
   621  0022                     _CENTENA:
   622  0022                     	ds	1
   623  0023                     _unidades:
   624  0023                     	ds	1
   625  0024                     _decenas:
   626  0024                     	ds	1
   627  0025                     _centenas:
   628  0025                     	ds	1
   629  0026                     _VOLTAJE2:
   630  0026                     	ds	1
   631  0027                     _VOLTAJE1:
   632  0027                     	ds	1
   633  0028                     _v2:
   634  0028                     	ds	20
   635  003C                     _v1:
   636  003C                     	ds	20
   637                           
   638                           	psect	bssBANK1
   639  00A0                     __pbssBANK1:
   640  00A0                     _v3:
   641  00A0                     	ds	20
   642                           
   643                           	psect	clrtext
   644  016B                     clear_ram0:	
   645                           ;	Called with FSR containing the base address, and
   646                           ;	W with the last address+1
   647                           
   648  016B  0064               	clrwdt	;clear the watchdog before getting into this loop
   649  016C                     clrloop0:
   650  016C  0180               	clrf	0	;clear RAM location pointed to by FSR
   651  016D  0A84               	incf	4,f	;increment pointer
   652  016E  0604               	xorwf	4,w	;XOR with final address
   653  016F  1903               	btfsc	3,2	;have we reached the end yet?
   654  0170  3400               	retlw	0	;all done for this memory range, return
   655  0171  0604               	xorwf	4,w	;XOR again to restore value
   656  0172  296C               	goto	clrloop0	;do the next byte
   657                           
   658                           	psect	cstackCOMMON
   659  0070                     __pcstackCOMMON:
   660  0070                     ?_isdigit:
   661  0070                     ?_setup:	
   662                           ; 1 bit 
   663                           
   664  0070                     ?_spiWrite:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ??_spiWrite:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_spiRead:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ??_spiRead:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_division:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_def:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_def1:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_def2:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_strcat:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_spiInit:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ??_isdigit:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_main:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_putch:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_spiReceiveWait:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ??_spiReceiveWait:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?___bmul:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_printf:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?___wmul:	
   716                           ; 2 bytes @ 0x0
   717                           
   718  0070                     ?___awdiv:	
   719                           ; 2 bytes @ 0x0
   720                           
   721  0070                     ?___lwdiv:	
   722                           ; 2 bytes @ 0x0
   723                           
   724  0070                     putch@info:	
   725                           ; 2 bytes @ 0x0
   726                           
   727  0070                     spiInit@sDataSample:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     spiWrite@dat:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ___bmul@multiplicand:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     _isdigit$925:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     strcat@from:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ___wmul@multiplier:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ___awdiv@divisor:	
   746                           ; 2 bytes @ 0x0
   747                           
   748  0070                     ___lwdiv@divisor:	
   749                           ; 2 bytes @ 0x0
   750                           
   751                           
   752                           ; 2 bytes @ 0x0
   753  0070                     	ds	1
   754  0071                     ??_strcat:
   755  0071                     ??_putch:	
   756                           ; 1 bytes @ 0x1
   757                           
   758  0071                     ??___bmul:	
   759                           ; 1 bytes @ 0x1
   760                           
   761  0071                     spiInit@sClockIdle:	
   762                           ; 1 bytes @ 0x1
   763                           
   764  0071                     isdigit@c:	
   765                           ; 1 bytes @ 0x1
   766                           
   767                           
   768                           ; 1 bytes @ 0x1
   769  0071                     	ds	1
   770  0072                     spiInit@sTransmitEdge:
   771  0072                     ___bmul@product:	
   772                           ; 1 bytes @ 0x2
   773                           
   774  0072                     strcat@to:	
   775                           ; 1 bytes @ 0x2
   776                           
   777  0072                     ___wmul@multiplicand:	
   778                           ; 1 bytes @ 0x2
   779                           
   780  0072                     ___awdiv@dividend:	
   781                           ; 2 bytes @ 0x2
   782                           
   783  0072                     ___lwdiv@dividend:	
   784                           ; 2 bytes @ 0x2
   785                           
   786                           
   787                           ; 2 bytes @ 0x2
   788  0072                     	ds	1
   789  0073                     ??_spiInit:
   790  0073                     spiInit@sType:	
   791                           ; 1 bytes @ 0x3
   792                           
   793  0073                     ___bmul@multiplier:	
   794                           ; 1 bytes @ 0x3
   795                           
   796  0073                     strcat@cp:	
   797                           ; 1 bytes @ 0x3
   798                           
   799                           
   800                           ; 1 bytes @ 0x3
   801  0073                     	ds	1
   802  0074                     ??_setup:
   803  0074                     ??___wmul:	
   804                           ; 1 bytes @ 0x4
   805                           
   806  0074                     ??___awdiv:	
   807                           ; 1 bytes @ 0x4
   808                           
   809  0074                     ??___lwdiv:	
   810                           ; 1 bytes @ 0x4
   811                           
   812  0074                     ___wmul@product:	
   813                           ; 1 bytes @ 0x4
   814                           
   815                           
   816                           ; 2 bytes @ 0x4
   817  0074                     	ds	1
   818  0075                     ___awdiv@counter:
   819  0075                     ___lwdiv@quotient:	
   820                           ; 1 bytes @ 0x5
   821                           
   822                           
   823                           ; 2 bytes @ 0x5
   824  0075                     	ds	1
   825  0076                     ?_atoi:
   826  0076                     ___awdiv@sign:	
   827                           ; 2 bytes @ 0x6
   828                           
   829                           
   830                           ; 1 bytes @ 0x6
   831  0076                     	ds	1
   832  0077                     ___lwdiv@counter:
   833  0077                     ___awdiv@quotient:	
   834                           ; 1 bytes @ 0x7
   835                           
   836                           
   837                           ; 2 bytes @ 0x7
   838  0077                     	ds	1
   839  0078                     ??_atoi:
   840  0078                     ?___lwmod:	
   841                           ; 1 bytes @ 0x8
   842                           
   843  0078                     ___lwmod@divisor:	
   844                           ; 2 bytes @ 0x8
   845                           
   846                           
   847                           ; 2 bytes @ 0x8
   848  0078                     	ds	1
   849  0079                     ??_division:
   850                           
   851                           ; 1 bytes @ 0x9
   852  0079                     	ds	1
   853  007A                     atoi@sign:
   854  007A                     ___lwmod@dividend:	
   855                           ; 1 bytes @ 0xA
   856                           
   857                           
   858                           ; 2 bytes @ 0xA
   859  007A                     	ds	1
   860  007B                     atoi@a:
   861                           
   862                           ; 2 bytes @ 0xB
   863  007B                     	ds	1
   864  007C                     ??___lwmod:
   865  007C                     division@variable:	
   866                           ; 1 bytes @ 0xC
   867                           
   868                           
   869                           ; 1 bytes @ 0xC
   870  007C                     	ds	1
   871  007D                     division@val:
   872  007D                     ___lwmod@counter:	
   873                           ; 1 bytes @ 0xD
   874                           
   875  007D                     atoi@s:	
   876                           ; 1 bytes @ 0xD
   877                           
   878                           
   879                           ; 1 bytes @ 0xD
   880  007D                     	ds	1
   881                           
   882                           	psect	cstackBANK0
   883  0050                     __pcstackBANK0:
   884  0050                     ?__doprnt:
   885  0050                     __doprnt@f:	
   886                           ; 2 bytes @ 0x0
   887                           
   888                           
   889                           ; 1 bytes @ 0x0
   890  0050                     	ds	1
   891  0051                     __doprnt@ap:
   892                           
   893                           ; 1 bytes @ 0x1
   894  0051                     	ds	1
   895  0052                     ??__doprnt:
   896                           
   897                           ; 1 bytes @ 0x2
   898  0052                     	ds	3
   899  0055                     __doprnt@flag:
   900                           
   901                           ; 1 bytes @ 0x5
   902  0055                     	ds	1
   903  0056                     __doprnt@prec:
   904                           
   905                           ; 1 bytes @ 0x6
   906  0056                     	ds	1
   907  0057                     __doprnt@val:
   908                           
   909                           ; 2 bytes @ 0x7
   910  0057                     	ds	2
   911  0059                     __doprnt@c:
   912                           
   913                           ; 1 bytes @ 0x9
   914  0059                     	ds	1
   915  005A                     __doprnt@pb:
   916                           
   917                           ; 1 bytes @ 0xA
   918  005A                     	ds	1
   919  005B                     ??_printf:
   920  005B                     ?_sprintf:	
   921                           ; 1 bytes @ 0xB
   922                           
   923  005B                     sprintf@f:	
   924                           ; 2 bytes @ 0xB
   925                           
   926                           
   927                           ; 1 bytes @ 0xB
   928  005B                     	ds	2
   929  005D                     printf@ap:
   930                           
   931                           ; 1 bytes @ 0xD
   932  005D                     	ds	1
   933  005E                     ??_sprintf:
   934  005E                     printf@f:	
   935                           ; 1 bytes @ 0xE
   936                           
   937                           
   938                           ; 1 bytes @ 0xE
   939  005E                     	ds	1
   940  005F                     printf@pb:
   941                           
   942                           ; 2 bytes @ 0xF
   943  005F                     	ds	1
   944  0060                     sprintf@ap:
   945                           
   946                           ; 1 bytes @ 0x10
   947  0060                     	ds	1
   948  0061                     ??_def:
   949  0061                     ??_def1:	
   950                           ; 1 bytes @ 0x11
   951                           
   952  0061                     ??_def2:	
   953                           ; 1 bytes @ 0x11
   954                           
   955  0061                     sprintf@wh:	
   956                           ; 1 bytes @ 0x11
   957                           
   958                           
   959                           ; 1 bytes @ 0x11
   960  0061                     	ds	1
   961  0062                     sprintf@pb:
   962                           
   963                           ; 2 bytes @ 0x12
   964  0062                     	ds	2
   965  0064                     ??_main:
   966                           
   967                           ; 1 bytes @ 0x14
   968  0064                     	ds	3
   969  0067                     main@com:
   970                           
   971                           ; 2 bytes @ 0x17
   972  0067                     	ds	2
   973                           
   974                           	psect	maintext
   975  05C8                     __pmaintext:	
   976 ;;
   977 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   978 ;;
   979 ;; *************** function _main *****************
   980 ;; Defined at:
   981 ;;		line 71 in file "SPI_MAESTRO.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  com             2   23[BANK0 ] int 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : B00/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   995 ;;      Params:         0       0       0       0       0
   996 ;;      Locals:         0       2       0       0       0
   997 ;;      Temps:          0       3       0       0       0
   998 ;;      Totals:         0       5       0       0       0
   999 ;;Total ram usage:        5 bytes
  1000 ;; Hardware stack levels required when called:    4
  1001 ;; This function calls:
  1002 ;;		_atoi
  1003 ;;		_def
  1004 ;;		_def1
  1005 ;;		_def2
  1006 ;;		_division
  1007 ;;		_printf
  1008 ;;		_setup
  1009 ;;		_spiRead
  1010 ;;		_spiWrite
  1011 ;;		_sprintf
  1012 ;;		_strcat
  1013 ;; This function is called by:
  1014 ;;		Startup code after reset
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           
  1019                           ;psect for function _main
  1020  05C8                     _main:
  1021  05C8                     l1732:	
  1022                           ;incstack = 0
  1023                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1024                           
  1025                           
  1026                           ;SPI_MAESTRO.c: 72:     setup();
  1027  05C8  120A  118A  229A  120A  118A  	fcall	_setup
  1028  05CD                     l1734:
  1029                           
  1030                           ;SPI_MAESTRO.c: 77:        PORTCbits.RC2 = 0;
  1031  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  1032  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  1033  05CF  1107               	bcf	7,2	;volatile
  1034  05D0                     l1736:
  1035                           
  1036                           ;SPI_MAESTRO.c: 78:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1037  05D0  30C7               	movlw	199
  1038  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  1039  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  1040  05D3  00E4               	movwf	??_main
  1041  05D4                     u1597:
  1042  05D4  2DD5               	nop2
  1043  05D5  0BE4               	decfsz	??_main,f
  1044  05D6  2DD4               	goto	u1597
  1045  05D7  2DD8               	nop2
  1046  05D8                     l1738:
  1047                           
  1048                           ;SPI_MAESTRO.c: 80:        spiWrite(0X0A);
  1049  05D8  300A               	movlw	10
  1050  05D9  120A  118A  215E  120A  118A  	fcall	_spiWrite
  1051  05DE                     l1740:
  1052                           
  1053                           ;SPI_MAESTRO.c: 81:        VOLTAJE1 = spiRead();
  1054  05DE  120A  118A  217C  120A  118A  	fcall	_spiRead
  1055  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  1056  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  1057  05E5  00E4               	movwf	??_main
  1058  05E6  0864               	movf	??_main,w
  1059  05E7  00A7               	movwf	_VOLTAJE1
  1060  05E8                     l1742:
  1061                           
  1062                           ;SPI_MAESTRO.c: 82:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1063  05E8  30C7               	movlw	199
  1064  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1065  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1066  05EB  00E4               	movwf	??_main
  1067  05EC                     u1607:
  1068  05EC  2DED               	nop2
  1069  05ED  0BE4               	decfsz	??_main,f
  1070  05EE  2DEC               	goto	u1607
  1071  05EF  2DF0               	nop2
  1072                           
  1073                           ;SPI_MAESTRO.c: 83:        spiWrite(0X0A);
  1074  05F0  300A               	movlw	10
  1075  05F1  120A  118A  215E  120A  118A  	fcall	_spiWrite
  1076                           
  1077                           ;SPI_MAESTRO.c: 84:        VOLTAJE2 = spiRead();
  1078  05F6  120A  118A  217C  120A  118A  	fcall	_spiRead
  1079  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1080  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1081  05FD  00E4               	movwf	??_main
  1082  05FE  0864               	movf	??_main,w
  1083  05FF  00A6               	movwf	_VOLTAJE2
  1084  0600                     l1744:
  1085                           
  1086                           ;SPI_MAESTRO.c: 85:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1087  0600  30C7               	movlw	199
  1088  0601  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0602  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0603  00E4               	movwf	??_main
  1091  0604                     u1617:
  1092  0604  2E05               	nop2
  1093  0605  0BE4               	decfsz	??_main,f
  1094  0606  2E04               	goto	u1617
  1095  0607  2E08               	nop2
  1096  0608                     l1746:
  1097                           
  1098                           ;SPI_MAESTRO.c: 86:        PORTCbits.RC2 = 1;
  1099  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1101  060A  1507               	bsf	7,2	;volatile
  1102  060B                     l1748:
  1103                           
  1104                           ;SPI_MAESTRO.c: 88:     division((VOLTAJE1*(500/255)));
  1105  060B  0827               	movf	_VOLTAJE1,w
  1106  060C  120A  118A  234F  120A  118A  	fcall	_division
  1107  0611                     l1750:
  1108                           
  1109                           ;SPI_MAESTRO.c: 89:        if(TXIF == 1){
  1110  0611  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0612  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0613  1E0C               	btfss	12,4	;volatile
  1113  0614  2E16               	goto	u1381
  1114  0615  2E17               	goto	u1380
  1115  0616                     u1381:
  1116  0616  2E92               	goto	l1778
  1117  0617                     u1380:
  1118  0617                     l1752:
  1119                           
  1120                           ;SPI_MAESTRO.c: 90:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1121  0617  3041               	movlw	65
  1122  0618  1283               	bcf	3,5	;RP0=0, select bank0
  1123  0619  1303               	bcf	3,6	;RP1=0, select bank0
  1124  061A  00E5               	movwf	??_main+1
  1125  061B  30ED               	movlw	237
  1126  061C  00E4               	movwf	??_main
  1127  061D                     u1627:
  1128  061D  0BE4               	decfsz	??_main,f
  1129  061E  2E1D               	goto	u1627
  1130  061F  0BE5               	decfsz	??_main+1,f
  1131  0620  2E1D               	goto	u1627
  1132  0621  2E22               	nop2
  1133  0622                     l1754:
  1134                           
  1135                           ;SPI_MAESTRO.c: 91:      printf("VALOR DE POT1: \r");
  1136  0622  30C5               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1137  0623  120A  118A  2210  120A  118A  	fcall	_printf
  1138  0628                     l1756:
  1139                           
  1140                           ;SPI_MAESTRO.c: 92:      _delay((unsigned long)((50)*(4000000/4000.0)));
  1141  0628  3041               	movlw	65
  1142  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1143  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1144  062B  00E5               	movwf	??_main+1
  1145  062C  30ED               	movlw	237
  1146  062D  00E4               	movwf	??_main
  1147  062E                     u1637:
  1148  062E  0BE4               	decfsz	??_main,f
  1149  062F  2E2E               	goto	u1637
  1150  0630  0BE5               	decfsz	??_main+1,f
  1151  0631  2E2E               	goto	u1637
  1152  0632  2E33               	nop2
  1153  0633                     l1758:
  1154                           
  1155                           ;SPI_MAESTRO.c: 93:     if(TXIF == 1){
  1156  0633  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0634  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0635  1E0C               	btfss	12,4	;volatile
  1159  0636  2E38               	goto	u1391
  1160  0637  2E39               	goto	u1390
  1161  0638                     u1391:
  1162  0638  2E3B               	goto	l91
  1163  0639                     u1390:
  1164  0639                     l1760:
  1165                           
  1166                           ;SPI_MAESTRO.c: 94:         TXREG = centenas;
  1167  0639  0825               	movf	_centenas,w
  1168  063A  0099               	movwf	25	;volatile
  1169  063B                     l91:	
  1170                           ;SPI_MAESTRO.c: 95:        }
  1171                           
  1172                           
  1173                           ;SPI_MAESTRO.c: 96:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1174  063B  3041               	movlw	65
  1175  063C  1283               	bcf	3,5	;RP0=0, select bank0
  1176  063D  1303               	bcf	3,6	;RP1=0, select bank0
  1177  063E  00E5               	movwf	??_main+1
  1178  063F  30ED               	movlw	237
  1179  0640  00E4               	movwf	??_main
  1180  0641                     u1647:
  1181  0641  0BE4               	decfsz	??_main,f
  1182  0642  2E41               	goto	u1647
  1183  0643  0BE5               	decfsz	??_main+1,f
  1184  0644  2E41               	goto	u1647
  1185  0645  2E46               	nop2
  1186  0646                     l1762:
  1187                           
  1188                           ;SPI_MAESTRO.c: 97:     if(TXIF == 1){
  1189  0646  1283               	bcf	3,5	;RP0=0, select bank0
  1190  0647  1303               	bcf	3,6	;RP1=0, select bank0
  1191  0648  1E0C               	btfss	12,4	;volatile
  1192  0649  2E4B               	goto	u1401
  1193  064A  2E4C               	goto	u1400
  1194  064B                     u1401:
  1195  064B  2E4E               	goto	l92
  1196  064C                     u1400:
  1197  064C                     l1764:
  1198                           
  1199                           ;SPI_MAESTRO.c: 98:         TXREG = 46;
  1200  064C  302E               	movlw	46
  1201  064D  0099               	movwf	25	;volatile
  1202  064E                     l92:	
  1203                           ;SPI_MAESTRO.c: 99:        }
  1204                           
  1205                           
  1206                           ;SPI_MAESTRO.c: 100:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1207  064E  3041               	movlw	65
  1208  064F  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0650  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0651  00E5               	movwf	??_main+1
  1211  0652  30ED               	movlw	237
  1212  0653  00E4               	movwf	??_main
  1213  0654                     u1657:
  1214  0654  0BE4               	decfsz	??_main,f
  1215  0655  2E54               	goto	u1657
  1216  0656  0BE5               	decfsz	??_main+1,f
  1217  0657  2E54               	goto	u1657
  1218  0658  2E59               	nop2
  1219  0659                     l1766:
  1220                           
  1221                           ;SPI_MAESTRO.c: 101:     if(TXIF == 1){
  1222  0659  1283               	bcf	3,5	;RP0=0, select bank0
  1223  065A  1303               	bcf	3,6	;RP1=0, select bank0
  1224  065B  1E0C               	btfss	12,4	;volatile
  1225  065C  2E5E               	goto	u1411
  1226  065D  2E5F               	goto	u1410
  1227  065E                     u1411:
  1228  065E  2E61               	goto	l93
  1229  065F                     u1410:
  1230  065F                     l1768:
  1231                           
  1232                           ;SPI_MAESTRO.c: 102:         TXREG = decenas;
  1233  065F  0824               	movf	_decenas,w
  1234  0660  0099               	movwf	25	;volatile
  1235  0661                     l93:	
  1236                           ;SPI_MAESTRO.c: 103:        }
  1237                           
  1238                           
  1239                           ;SPI_MAESTRO.c: 104:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1240  0661  3041               	movlw	65
  1241  0662  1283               	bcf	3,5	;RP0=0, select bank0
  1242  0663  1303               	bcf	3,6	;RP1=0, select bank0
  1243  0664  00E5               	movwf	??_main+1
  1244  0665  30ED               	movlw	237
  1245  0666  00E4               	movwf	??_main
  1246  0667                     u1667:
  1247  0667  0BE4               	decfsz	??_main,f
  1248  0668  2E67               	goto	u1667
  1249  0669  0BE5               	decfsz	??_main+1,f
  1250  066A  2E67               	goto	u1667
  1251  066B  2E6C               	nop2
  1252  066C                     l1770:
  1253                           
  1254                           ;SPI_MAESTRO.c: 105:     if(TXIF == 1){
  1255  066C  1283               	bcf	3,5	;RP0=0, select bank0
  1256  066D  1303               	bcf	3,6	;RP1=0, select bank0
  1257  066E  1E0C               	btfss	12,4	;volatile
  1258  066F  2E71               	goto	u1421
  1259  0670  2E72               	goto	u1420
  1260  0671                     u1421:
  1261  0671  2E74               	goto	l94
  1262  0672                     u1420:
  1263  0672                     l1772:
  1264                           
  1265                           ;SPI_MAESTRO.c: 106:         TXREG = unidades;
  1266  0672  0823               	movf	_unidades,w
  1267  0673  0099               	movwf	25	;volatile
  1268  0674                     l94:	
  1269                           ;SPI_MAESTRO.c: 107:        }
  1270                           
  1271                           
  1272                           ;SPI_MAESTRO.c: 108:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1273  0674  3041               	movlw	65
  1274  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1275  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1276  0677  00E5               	movwf	??_main+1
  1277  0678  30ED               	movlw	237
  1278  0679  00E4               	movwf	??_main
  1279  067A                     u1677:
  1280  067A  0BE4               	decfsz	??_main,f
  1281  067B  2E7A               	goto	u1677
  1282  067C  0BE5               	decfsz	??_main+1,f
  1283  067D  2E7A               	goto	u1677
  1284  067E  2E7F               	nop2
  1285  067F                     l1774:
  1286                           
  1287                           ;SPI_MAESTRO.c: 110:     if(TXIF == 1){
  1288  067F  1283               	bcf	3,5	;RP0=0, select bank0
  1289  0680  1303               	bcf	3,6	;RP1=0, select bank0
  1290  0681  1E0C               	btfss	12,4	;volatile
  1291  0682  2E84               	goto	u1431
  1292  0683  2E85               	goto	u1430
  1293  0684                     u1431:
  1294  0684  2E87               	goto	l95
  1295  0685                     u1430:
  1296  0685                     l1776:
  1297                           
  1298                           ;SPI_MAESTRO.c: 111:         TXREG = 13;
  1299  0685  300D               	movlw	13
  1300  0686  0099               	movwf	25	;volatile
  1301  0687                     l95:	
  1302                           ;SPI_MAESTRO.c: 112:        }
  1303                           
  1304                           
  1305                           ;SPI_MAESTRO.c: 113:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1306  0687  3041               	movlw	65
  1307  0688  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0689  1303               	bcf	3,6	;RP1=0, select bank0
  1309  068A  00E5               	movwf	??_main+1
  1310  068B  30ED               	movlw	237
  1311  068C  00E4               	movwf	??_main
  1312  068D                     u1687:
  1313  068D  0BE4               	decfsz	??_main,f
  1314  068E  2E8D               	goto	u1687
  1315  068F  0BE5               	decfsz	??_main+1,f
  1316  0690  2E8D               	goto	u1687
  1317  0691  2E92               	nop2
  1318  0692                     l1778:
  1319                           
  1320                           ;SPI_MAESTRO.c: 116:     division((VOLTAJE2*(500/255)));
  1321  0692  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0693  1303               	bcf	3,6	;RP1=0, select bank0
  1323  0694  0826               	movf	_VOLTAJE2,w
  1324  0695  120A  118A  234F  120A  118A  	fcall	_division
  1325  069A                     l1780:
  1326                           
  1327                           ;SPI_MAESTRO.c: 117:     if(TXIF == 1){
  1328  069A  1283               	bcf	3,5	;RP0=0, select bank0
  1329  069B  1303               	bcf	3,6	;RP1=0, select bank0
  1330  069C  1E0C               	btfss	12,4	;volatile
  1331  069D  2E9F               	goto	u1441
  1332  069E  2EA0               	goto	u1440
  1333  069F                     u1441:
  1334  069F  2F1B               	goto	l1808
  1335  06A0                     u1440:
  1336  06A0                     l1782:
  1337                           
  1338                           ;SPI_MAESTRO.c: 118:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1339  06A0  3041               	movlw	65
  1340  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1341  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1342  06A3  00E5               	movwf	??_main+1
  1343  06A4  30ED               	movlw	237
  1344  06A5  00E4               	movwf	??_main
  1345  06A6                     u1697:
  1346  06A6  0BE4               	decfsz	??_main,f
  1347  06A7  2EA6               	goto	u1697
  1348  06A8  0BE5               	decfsz	??_main+1,f
  1349  06A9  2EA6               	goto	u1697
  1350  06AA  2EAB               	nop2
  1351  06AB                     l1784:
  1352                           
  1353                           ;SPI_MAESTRO.c: 119:      printf("VALOR DE POT2: \r");
  1354  06AB  30D6               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1355  06AC  120A  118A  2210  120A  118A  	fcall	_printf
  1356  06B1                     l1786:
  1357                           
  1358                           ;SPI_MAESTRO.c: 120:      _delay((unsigned long)((50)*(4000000/4000.0)));
  1359  06B1  3041               	movlw	65
  1360  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  1361  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1362  06B4  00E5               	movwf	??_main+1
  1363  06B5  30ED               	movlw	237
  1364  06B6  00E4               	movwf	??_main
  1365  06B7                     u1707:
  1366  06B7  0BE4               	decfsz	??_main,f
  1367  06B8  2EB7               	goto	u1707
  1368  06B9  0BE5               	decfsz	??_main+1,f
  1369  06BA  2EB7               	goto	u1707
  1370  06BB  2EBC               	nop2
  1371  06BC                     l1788:
  1372                           
  1373                           ;SPI_MAESTRO.c: 121:     if(TXIF == 1){
  1374  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1375  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1376  06BE  1E0C               	btfss	12,4	;volatile
  1377  06BF  2EC1               	goto	u1451
  1378  06C0  2EC2               	goto	u1450
  1379  06C1                     u1451:
  1380  06C1  2EC4               	goto	l97
  1381  06C2                     u1450:
  1382  06C2                     l1790:
  1383                           
  1384                           ;SPI_MAESTRO.c: 122:         TXREG = centenas;
  1385  06C2  0825               	movf	_centenas,w
  1386  06C3  0099               	movwf	25	;volatile
  1387  06C4                     l97:	
  1388                           ;SPI_MAESTRO.c: 123:        }
  1389                           
  1390                           
  1391                           ;SPI_MAESTRO.c: 124:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1392  06C4  3041               	movlw	65
  1393  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  1394  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  1395  06C7  00E5               	movwf	??_main+1
  1396  06C8  30ED               	movlw	237
  1397  06C9  00E4               	movwf	??_main
  1398  06CA                     u1717:
  1399  06CA  0BE4               	decfsz	??_main,f
  1400  06CB  2ECA               	goto	u1717
  1401  06CC  0BE5               	decfsz	??_main+1,f
  1402  06CD  2ECA               	goto	u1717
  1403  06CE  2ECF               	nop2
  1404  06CF                     l1792:
  1405                           
  1406                           ;SPI_MAESTRO.c: 125:     if(TXIF == 1){
  1407  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1408  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1409  06D1  1E0C               	btfss	12,4	;volatile
  1410  06D2  2ED4               	goto	u1461
  1411  06D3  2ED5               	goto	u1460
  1412  06D4                     u1461:
  1413  06D4  2ED7               	goto	l98
  1414  06D5                     u1460:
  1415  06D5                     l1794:
  1416                           
  1417                           ;SPI_MAESTRO.c: 126:         TXREG = 46;
  1418  06D5  302E               	movlw	46
  1419  06D6  0099               	movwf	25	;volatile
  1420  06D7                     l98:	
  1421                           ;SPI_MAESTRO.c: 127:        }
  1422                           
  1423                           
  1424                           ;SPI_MAESTRO.c: 128:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1425  06D7  3041               	movlw	65
  1426  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  1427  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  1428  06DA  00E5               	movwf	??_main+1
  1429  06DB  30ED               	movlw	237
  1430  06DC  00E4               	movwf	??_main
  1431  06DD                     u1727:
  1432  06DD  0BE4               	decfsz	??_main,f
  1433  06DE  2EDD               	goto	u1727
  1434  06DF  0BE5               	decfsz	??_main+1,f
  1435  06E0  2EDD               	goto	u1727
  1436  06E1  2EE2               	nop2
  1437  06E2                     l1796:
  1438                           
  1439                           ;SPI_MAESTRO.c: 129:     if(TXIF == 1){
  1440  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1441  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1442  06E4  1E0C               	btfss	12,4	;volatile
  1443  06E5  2EE7               	goto	u1471
  1444  06E6  2EE8               	goto	u1470
  1445  06E7                     u1471:
  1446  06E7  2EEA               	goto	l99
  1447  06E8                     u1470:
  1448  06E8                     l1798:
  1449                           
  1450                           ;SPI_MAESTRO.c: 130:         TXREG = decenas;
  1451  06E8  0824               	movf	_decenas,w
  1452  06E9  0099               	movwf	25	;volatile
  1453  06EA                     l99:	
  1454                           ;SPI_MAESTRO.c: 131:        }
  1455                           
  1456                           
  1457                           ;SPI_MAESTRO.c: 132:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1458  06EA  3041               	movlw	65
  1459  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1460  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1461  06ED  00E5               	movwf	??_main+1
  1462  06EE  30ED               	movlw	237
  1463  06EF  00E4               	movwf	??_main
  1464  06F0                     u1737:
  1465  06F0  0BE4               	decfsz	??_main,f
  1466  06F1  2EF0               	goto	u1737
  1467  06F2  0BE5               	decfsz	??_main+1,f
  1468  06F3  2EF0               	goto	u1737
  1469  06F4  2EF5               	nop2
  1470  06F5                     l1800:
  1471                           
  1472                           ;SPI_MAESTRO.c: 133:     if(TXIF == 1){
  1473  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1474  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1475  06F7  1E0C               	btfss	12,4	;volatile
  1476  06F8  2EFA               	goto	u1481
  1477  06F9  2EFB               	goto	u1480
  1478  06FA                     u1481:
  1479  06FA  2EFD               	goto	l100
  1480  06FB                     u1480:
  1481  06FB                     l1802:
  1482                           
  1483                           ;SPI_MAESTRO.c: 134:         TXREG = unidades;
  1484  06FB  0823               	movf	_unidades,w
  1485  06FC  0099               	movwf	25	;volatile
  1486  06FD                     l100:	
  1487                           ;SPI_MAESTRO.c: 135:        }
  1488                           
  1489                           
  1490                           ;SPI_MAESTRO.c: 136:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1491  06FD  3041               	movlw	65
  1492  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  1493  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  1494  0700  00E5               	movwf	??_main+1
  1495  0701  30ED               	movlw	237
  1496  0702  00E4               	movwf	??_main
  1497  0703                     u1747:
  1498  0703  0BE4               	decfsz	??_main,f
  1499  0704  2F03               	goto	u1747
  1500  0705  0BE5               	decfsz	??_main+1,f
  1501  0706  2F03               	goto	u1747
  1502  0707  2F08               	nop2
  1503  0708                     l1804:
  1504                           
  1505                           ;SPI_MAESTRO.c: 137:     if(TXIF == 1){
  1506  0708  1283               	bcf	3,5	;RP0=0, select bank0
  1507  0709  1303               	bcf	3,6	;RP1=0, select bank0
  1508  070A  1E0C               	btfss	12,4	;volatile
  1509  070B  2F0D               	goto	u1491
  1510  070C  2F0E               	goto	u1490
  1511  070D                     u1491:
  1512  070D  2F10               	goto	l101
  1513  070E                     u1490:
  1514  070E                     l1806:
  1515                           
  1516                           ;SPI_MAESTRO.c: 138:         TXREG = 13;
  1517  070E  300D               	movlw	13
  1518  070F  0099               	movwf	25	;volatile
  1519  0710                     l101:	
  1520                           ;SPI_MAESTRO.c: 139:     }
  1521                           
  1522                           
  1523                           ;SPI_MAESTRO.c: 140:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1524  0710  3041               	movlw	65
  1525  0711  1283               	bcf	3,5	;RP0=0, select bank0
  1526  0712  1303               	bcf	3,6	;RP1=0, select bank0
  1527  0713  00E5               	movwf	??_main+1
  1528  0714  30ED               	movlw	237
  1529  0715  00E4               	movwf	??_main
  1530  0716                     u1757:
  1531  0716  0BE4               	decfsz	??_main,f
  1532  0717  2F16               	goto	u1757
  1533  0718  0BE5               	decfsz	??_main+1,f
  1534  0719  2F16               	goto	u1757
  1535  071A  2F1B               	nop2
  1536  071B                     l1808:
  1537                           
  1538                           ;SPI_MAESTRO.c: 143:     printf("Por favor ingrese la centena, si es <100 colocar 0\r");
  1539  071B  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1540  071C  120A  118A  2210  120A  118A  	fcall	_printf
  1541  0721                     l102:	
  1542                           ;SPI_MAESTRO.c: 144:     while (RCIF == 0);
  1543                           
  1544  0721  1283               	bcf	3,5	;RP0=0, select bank0
  1545  0722  1303               	bcf	3,6	;RP1=0, select bank0
  1546  0723  1E8C               	btfss	12,5	;volatile
  1547  0724  2F26               	goto	u1501
  1548  0725  2F27               	goto	u1500
  1549  0726                     u1501:
  1550  0726  2F21               	goto	l102
  1551  0727                     u1500:
  1552  0727                     l1810:
  1553                           
  1554                           ;SPI_MAESTRO.c: 145:     CENTENA = RCREG - 48;
  1555  0727  081A               	movf	26,w	;volatile
  1556  0728  3ED0               	addlw	208
  1557  0729  00E4               	movwf	??_main
  1558  072A  0864               	movf	??_main,w
  1559  072B  00A2               	movwf	_CENTENA
  1560                           
  1561                           ;SPI_MAESTRO.c: 146:     while(RCREG > '2')
  1562  072C  2F32               	goto	l1814
  1563  072D                     l1812:
  1564                           
  1565                           ;SPI_MAESTRO.c: 147:     {;SPI_MAESTRO.c: 148:         def();
  1566  072D  120A  118A  21C2  120A  118A  	fcall	_def
  1567  0732                     l1814:
  1568                           
  1569                           ;SPI_MAESTRO.c: 146:     while(RCREG > '2')
  1570  0732  3033               	movlw	51
  1571  0733  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0734  1303               	bcf	3,6	;RP1=0, select bank0
  1573  0735  021A               	subwf	26,w	;volatile
  1574  0736  1803               	skipnc
  1575  0737  2F39               	goto	u1511
  1576  0738  2F3A               	goto	u1510
  1577  0739                     u1511:
  1578  0739  2F2D               	goto	l1812
  1579  073A                     u1510:
  1580  073A                     l1816:
  1581                           
  1582                           ;SPI_MAESTRO.c: 150:     printf("Por favor ingrese la decena\r");
  1583  073A  308B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1584  073B  120A  118A  2210  120A  118A  	fcall	_printf
  1585  0740                     l108:	
  1586                           ;SPI_MAESTRO.c: 151:     while (RCIF == 0);
  1587                           
  1588  0740  1283               	bcf	3,5	;RP0=0, select bank0
  1589  0741  1303               	bcf	3,6	;RP1=0, select bank0
  1590  0742  1E8C               	btfss	12,5	;volatile
  1591  0743  2F45               	goto	u1521
  1592  0744  2F46               	goto	u1520
  1593  0745                     u1521:
  1594  0745  2F40               	goto	l108
  1595  0746                     u1520:
  1596  0746                     l1818:
  1597                           
  1598                           ;SPI_MAESTRO.c: 152:     DECENA = RCREG - 48;
  1599  0746  081A               	movf	26,w	;volatile
  1600  0747  3ED0               	addlw	208
  1601  0748  00E4               	movwf	??_main
  1602  0749  0864               	movf	??_main,w
  1603  074A  00A1               	movwf	_DECENA
  1604                           
  1605                           ;SPI_MAESTRO.c: 153:     if(CENTENA == 2)
  1606  074B  3002               	movlw	2
  1607  074C  0622               	xorwf	_CENTENA,w
  1608  074D  1D03               	btfss	3,2
  1609  074E  2F50               	goto	u1531
  1610  074F  2F51               	goto	u1530
  1611  0750                     u1531:
  1612  0750  2F5F               	goto	l1826
  1613  0751                     u1530:
  1614  0751  2F57               	goto	l1824
  1615  0752                     l1822:
  1616                           
  1617                           ;SPI_MAESTRO.c: 156:            {;SPI_MAESTRO.c: 157:                def1();
  1618  0752  120A  118A  21DC  120A  118A  	fcall	_def1
  1619  0757                     l1824:
  1620                           
  1621                           ;SPI_MAESTRO.c: 155:            while(RCREG > '5')
  1622  0757  3036               	movlw	54
  1623  0758  1283               	bcf	3,5	;RP0=0, select bank0
  1624  0759  1303               	bcf	3,6	;RP1=0, select bank0
  1625  075A  021A               	subwf	26,w	;volatile
  1626  075B  1803               	skipnc
  1627  075C  2F5E               	goto	u1541
  1628  075D  2F5F               	goto	u1540
  1629  075E                     u1541:
  1630  075E  2F52               	goto	l1822
  1631  075F                     u1540:
  1632  075F                     l1826:
  1633                           
  1634                           ;SPI_MAESTRO.c: 160:     printf("Por favor ingrese la unidad\r");
  1635  075F  30A8               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1636  0760  120A  118A  2210  120A  118A  	fcall	_printf
  1637  0765                     l115:	
  1638                           ;SPI_MAESTRO.c: 161:     while (RCIF == 0);
  1639                           
  1640  0765  1283               	bcf	3,5	;RP0=0, select bank0
  1641  0766  1303               	bcf	3,6	;RP1=0, select bank0
  1642  0767  1E8C               	btfss	12,5	;volatile
  1643  0768  2F6A               	goto	u1551
  1644  0769  2F6B               	goto	u1550
  1645  076A                     u1551:
  1646  076A  2F65               	goto	l115
  1647  076B                     u1550:
  1648  076B                     l1828:
  1649                           
  1650                           ;SPI_MAESTRO.c: 162:     UNIDAD = RCREG - 48;
  1651  076B  081A               	movf	26,w	;volatile
  1652  076C  3ED0               	addlw	208
  1653  076D  00E4               	movwf	??_main
  1654  076E  0864               	movf	??_main,w
  1655  076F  00A0               	movwf	_UNIDAD
  1656                           
  1657                           ;SPI_MAESTRO.c: 164:     if(CENTENA == 2 && DECENA == 5)
  1658  0770  3002               	movlw	2
  1659  0771  0622               	xorwf	_CENTENA,w
  1660  0772  1D03               	btfss	3,2
  1661  0773  2F75               	goto	u1561
  1662  0774  2F76               	goto	u1560
  1663  0775                     u1561:
  1664  0775  2F8A               	goto	l1838
  1665  0776                     u1560:
  1666  0776                     l1830:
  1667  0776  3005               	movlw	5
  1668  0777  0621               	xorwf	_DECENA,w
  1669  0778  1D03               	btfss	3,2
  1670  0779  2F7B               	goto	u1571
  1671  077A  2F7C               	goto	u1570
  1672  077B                     u1571:
  1673  077B  2F8A               	goto	l1838
  1674  077C                     u1570:
  1675  077C  2F82               	goto	l1836
  1676  077D                     l1834:
  1677                           
  1678                           ;SPI_MAESTRO.c: 167:           {;SPI_MAESTRO.c: 168:               def2();
  1679  077D  120A  118A  21F6  120A  118A  	fcall	_def2
  1680  0782                     l1836:
  1681                           
  1682                           ;SPI_MAESTRO.c: 166:           while(RCREG > '5')
  1683  0782  3036               	movlw	54
  1684  0783  1283               	bcf	3,5	;RP0=0, select bank0
  1685  0784  1303               	bcf	3,6	;RP1=0, select bank0
  1686  0785  021A               	subwf	26,w	;volatile
  1687  0786  1803               	skipnc
  1688  0787  2F89               	goto	u1581
  1689  0788  2F8A               	goto	u1580
  1690  0789                     u1581:
  1691  0789  2F7D               	goto	l1834
  1692  078A                     u1580:
  1693  078A                     l1838:
  1694                           
  1695                           ;SPI_MAESTRO.c: 171:     sprintf(v1, "%d", CENTENA);
  1696  078A  30E7               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1697  078B  00E4               	movwf	??_main
  1698  078C  0864               	movf	??_main,w
  1699  078D  00DB               	movwf	sprintf@f
  1700  078E  0822               	movf	_CENTENA,w
  1701  078F  00E5               	movwf	??_main+1
  1702  0790  01E6               	clrf	??_main+2
  1703  0791  0865               	movf	??_main+1,w
  1704  0792  00DC               	movwf	?_sprintf+1
  1705  0793  0866               	movf	??_main+2,w
  1706  0794  00DD               	movwf	?_sprintf+2
  1707  0795  303C               	movlw	(low (_v1| 0))& (0+255)
  1708  0796  120A  118A  222B  120A  118A  	fcall	_sprintf
  1709                           
  1710                           ;SPI_MAESTRO.c: 172:     sprintf(v2, "%d", DECENA);
  1711  079B  30E7               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1712  079C  1283               	bcf	3,5	;RP0=0, select bank0
  1713  079D  1303               	bcf	3,6	;RP1=0, select bank0
  1714  079E  00E4               	movwf	??_main
  1715  079F  0864               	movf	??_main,w
  1716  07A0  00DB               	movwf	sprintf@f
  1717  07A1  0821               	movf	_DECENA,w
  1718  07A2  00E5               	movwf	??_main+1
  1719  07A3  01E6               	clrf	??_main+2
  1720  07A4  0865               	movf	??_main+1,w
  1721  07A5  00DC               	movwf	?_sprintf+1
  1722  07A6  0866               	movf	??_main+2,w
  1723  07A7  00DD               	movwf	?_sprintf+2
  1724  07A8  3028               	movlw	(low (_v2| 0))& (0+255)
  1725  07A9  120A  118A  222B  120A  118A  	fcall	_sprintf
  1726                           
  1727                           ;SPI_MAESTRO.c: 173:     sprintf(v3, "%d", UNIDAD);
  1728  07AE  30E7               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1729  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1730  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1731  07B1  00E4               	movwf	??_main
  1732  07B2  0864               	movf	??_main,w
  1733  07B3  00DB               	movwf	sprintf@f
  1734  07B4  0820               	movf	_UNIDAD,w
  1735  07B5  00E5               	movwf	??_main+1
  1736  07B6  01E6               	clrf	??_main+2
  1737  07B7  0865               	movf	??_main+1,w
  1738  07B8  00DC               	movwf	?_sprintf+1
  1739  07B9  0866               	movf	??_main+2,w
  1740  07BA  00DD               	movwf	?_sprintf+2
  1741  07BB  30A0               	movlw	(low (_v3| 0))& (0+255)
  1742  07BC  120A  118A  222B  120A  118A  	fcall	_sprintf
  1743  07C1                     l1840:
  1744                           
  1745                           ;SPI_MAESTRO.c: 174:     strcat(v1, v2);
  1746  07C1  3028               	movlw	(low (_v2| 0))& (0+255)
  1747  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1748  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1749  07C4  00E4               	movwf	??_main
  1750  07C5  0864               	movf	??_main,w
  1751  07C6  00F0               	movwf	strcat@from
  1752  07C7  303C               	movlw	(low (_v1| 0))& (0+255)
  1753  07C8  120A  118A  2271  120A  118A  	fcall	_strcat
  1754  07CD                     l1842:
  1755                           
  1756                           ;SPI_MAESTRO.c: 175:     strcat(v1, v3);
  1757  07CD  30A0               	movlw	(low (_v3| 0))& (0+255)
  1758  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  1759  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  1760  07D0  00E4               	movwf	??_main
  1761  07D1  0864               	movf	??_main,w
  1762  07D2  00F0               	movwf	strcat@from
  1763  07D3  303C               	movlw	(low (_v1| 0))& (0+255)
  1764  07D4  120A  118A  2271  120A  118A  	fcall	_strcat
  1765  07D9                     l1844:
  1766                           
  1767                           ;SPI_MAESTRO.c: 176:     int com = atoi(v1);
  1768  07D9  303C               	movlw	(low (_v1| 0))& (0+255)
  1769  07DA  120A  118A  2419  120A  118A  	fcall	_atoi
  1770  07DF  0877               	movf	?_atoi+1,w
  1771  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  1772  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  1773  07E2  00E8               	movwf	main@com+1
  1774  07E3  0876               	movf	?_atoi,w
  1775  07E4  00E7               	movwf	main@com
  1776  07E5                     l1846:
  1777                           
  1778                           ;SPI_MAESTRO.c: 177:     PORTB = com;
  1779  07E5  0867               	movf	main@com,w
  1780  07E6  0086               	movwf	6	;volatile
  1781  07E7  2DCD               	goto	l1734
  1782  07E8  120A  118A  2800   	ljmp	start
  1783  07EB                     __end_of_main:
  1784                           
  1785                           	psect	text1
  1786  0271                     __ptext1:	
  1787 ;; *************** function _strcat *****************
  1788 ;; Defined at:
  1789 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  to              1    wreg     PTR unsigned char 
  1792 ;;		 -> v1(20), 
  1793 ;;  from            1    0[COMMON] PTR const unsigned char 
  1794 ;;		 -> v3(20), v2(20), 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  to              1    2[COMMON] PTR unsigned char 
  1797 ;;		 -> v1(20), 
  1798 ;;  cp              1    3[COMMON] PTR unsigned char 
  1799 ;;		 -> v1(20), 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      PTR unsigned char 
  1802 ;; Registers used:
  1803 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1809 ;;      Params:         1       0       0       0       0
  1810 ;;      Locals:         2       0       0       0       0
  1811 ;;      Temps:          1       0       0       0       0
  1812 ;;      Totals:         4       0       0       0       0
  1813 ;;Total ram usage:        4 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; This function calls:
  1816 ;;		Nothing
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function _strcat
  1824  0271                     _strcat:
  1825                           
  1826                           ;incstack = 0
  1827                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  1828                           ;strcat@to stored from wreg
  1829  0271  00F2               	movwf	strcat@to
  1830  0272                     l1688:
  1831  0272  0872               	movf	strcat@to,w
  1832  0273  00F1               	movwf	??_strcat
  1833  0274  0871               	movf	??_strcat,w
  1834  0275  00F3               	movwf	strcat@cp
  1835  0276  2A7B               	goto	l1692
  1836  0277                     l1690:
  1837  0277  3001               	movlw	1
  1838  0278  00F1               	movwf	??_strcat
  1839  0279  0871               	movf	??_strcat,w
  1840  027A  07F3               	addwf	strcat@cp,f
  1841  027B                     l1692:
  1842  027B  0873               	movf	strcat@cp,w
  1843  027C  0084               	movwf	4
  1844  027D  1383               	bcf	3,7	;select IRP bank0
  1845  027E  0800               	movf	0,w
  1846  027F  1D03               	btfss	3,2
  1847  0280  2A82               	goto	u1301
  1848  0281  2A83               	goto	u1300
  1849  0282                     u1301:
  1850  0282  2A77               	goto	l1690
  1851  0283                     u1300:
  1852  0283  2A8C               	goto	l1696
  1853  0284                     l1694:
  1854  0284  3001               	movlw	1
  1855  0285  00F1               	movwf	??_strcat
  1856  0286  0871               	movf	??_strcat,w
  1857  0287  07F3               	addwf	strcat@cp,f
  1858  0288  3001               	movlw	1
  1859  0289  00F1               	movwf	??_strcat
  1860  028A  0871               	movf	??_strcat,w
  1861  028B  07F0               	addwf	strcat@from,f
  1862  028C                     l1696:
  1863  028C  0870               	movf	strcat@from,w
  1864  028D  0084               	movwf	4
  1865  028E  0800               	movf	0,w
  1866  028F  00F1               	movwf	??_strcat
  1867  0290  0873               	movf	strcat@cp,w
  1868  0291  0084               	movwf	4
  1869  0292  0871               	movf	??_strcat,w
  1870  0293  0080               	movwf	0
  1871  0294  0800               	movf	0,w
  1872  0295  1D03               	btfss	3,2
  1873  0296  2A98               	goto	u1311
  1874  0297  2A99               	goto	u1310
  1875  0298                     u1311:
  1876  0298  2A84               	goto	l1694
  1877  0299                     u1310:
  1878  0299                     l808:
  1879  0299  0008               	return
  1880  029A                     __end_of_strcat:
  1881                           
  1882                           	psect	text2
  1883  022B                     __ptext2:	
  1884 ;; *************** function _sprintf *****************
  1885 ;; Defined at:
  1886 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  wh              1    wreg     PTR unsigned char 
  1889 ;;		 -> v3(20), v2(20), v1(20), 
  1890 ;;  f               1   11[BANK0 ] PTR const unsigned char 
  1891 ;;		 -> STR_8(3), STR_7(3), STR_6(3), 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  wh              1   17[BANK0 ] PTR unsigned char 
  1894 ;;		 -> v3(20), v2(20), v1(20), 
  1895 ;;  pb              2   18[BANK0 ] struct __prbuf
  1896 ;;  ap              1   16[BANK0 ] PTR void [1]
  1897 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  2   11[BANK0 ] int 
  1900 ;; Registers used:
  1901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1907 ;;      Params:         0       3       0       0       0
  1908 ;;      Locals:         0       4       0       0       0
  1909 ;;      Temps:          0       2       0       0       0
  1910 ;;      Totals:         0       9       0       0       0
  1911 ;;Total ram usage:        9 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    2
  1914 ;; This function calls:
  1915 ;;		__doprnt
  1916 ;; This function is called by:
  1917 ;;		_main
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           
  1922                           ;psect for function _sprintf
  1923  022B                     _sprintf:
  1924                           
  1925                           ;incstack = 0
  1926                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1927                           ;sprintf@wh stored from wreg
  1928  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1929  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1930  022D  00E1               	movwf	sprintf@wh
  1931  022E                     l1676:
  1932  022E  0861               	movf	sprintf@wh,w
  1933  022F  00DE               	movwf	??_sprintf
  1934  0230  085E               	movf	??_sprintf,w
  1935  0231  00E2               	movwf	sprintf@pb
  1936  0232                     l1678:
  1937  0232  01E3               	clrf	low ((sprintf@pb| 0+1))
  1938  0233                     l1680:
  1939  0233  305C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1940  0234  00DE               	movwf	??_sprintf
  1941  0235  085E               	movf	??_sprintf,w
  1942  0236  00E0               	movwf	sprintf@ap
  1943  0237                     l1682:
  1944  0237  085B               	movf	sprintf@f,w
  1945  0238  00DE               	movwf	??_sprintf
  1946  0239  085E               	movf	??_sprintf,w
  1947  023A  00D0               	movwf	__doprnt@f
  1948  023B  3060               	movlw	(low (sprintf@ap| 0))& (0+255)
  1949  023C  00DF               	movwf	??_sprintf+1
  1950  023D  085F               	movf	??_sprintf+1,w
  1951  023E  00D1               	movwf	__doprnt@ap
  1952  023F  3062               	movlw	(low (sprintf@pb| 0))& (0+255)
  1953  0240  120A  118A  2494  120A  118A  	fcall	__doprnt
  1954  0245                     l1684:
  1955  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1956  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1957  0247  0862               	movf	sprintf@pb,w
  1958  0248  0084               	movwf	4
  1959  0249  1383               	bcf	3,7	;select IRP bank0
  1960  024A  0180               	clrf	0
  1961  024B                     l799:
  1962  024B  0008               	return
  1963  024C                     __end_of_sprintf:
  1964                           
  1965                           	psect	text3
  1966  015E                     __ptext3:	
  1967 ;; *************** function _spiWrite *****************
  1968 ;; Defined at:
  1969 ;;		line 34 in file "SPI.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  dat             1    wreg     unsigned char 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  dat             1    0[COMMON] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1983 ;;      Params:         0       0       0       0       0
  1984 ;;      Locals:         1       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0
  1986 ;;      Totals:         1       0       0       0       0
  1987 ;;Total ram usage:        1 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           
  1997                           ;psect for function _spiWrite
  1998  015E                     _spiWrite:
  1999                           
  2000                           ;incstack = 0
  2001                           ; Regs used in _spiWrite: [wreg]
  2002                           ;spiWrite@dat stored from wreg
  2003  015E  00F0               	movwf	spiWrite@dat
  2004  015F                     l1634:
  2005                           
  2006                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  2007  015F  0870               	movf	spiWrite@dat,w
  2008  0160  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0161  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0162  0093               	movwf	19	;volatile
  2011  0163                     l183:
  2012  0163  0008               	return
  2013  0164                     __end_of_spiWrite:
  2014                           
  2015                           	psect	text4
  2016  017C                     __ptext4:	
  2017 ;; *************** function _spiRead *****************
  2018 ;; Defined at:
  2019 ;;		line 47 in file "SPI.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;		None
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;		None
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      unsigned char 
  2026 ;; Registers used:
  2027 ;;		wreg, status,2, status,0, pclath, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2033 ;;      Params:         0       0       0       0       0
  2034 ;;      Locals:         0       0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0
  2036 ;;      Totals:         0       0       0       0       0
  2037 ;;Total ram usage:        0 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    1
  2040 ;; This function calls:
  2041 ;;		_spiReceiveWait
  2042 ;; This function is called by:
  2043 ;;		_main
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           
  2048                           ;psect for function _spiRead
  2049  017C                     _spiRead:
  2050  017C                     l1636:	
  2051                           ;incstack = 0
  2052                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2053                           
  2054                           
  2055                           ;SPI.c: 49:     spiReceiveWait();
  2056  017C  120A  118A  2164  120A  118A  	fcall	_spiReceiveWait
  2057  0181                     l1638:
  2058                           
  2059                           ;SPI.c: 50:     return(SSPBUF);
  2060  0181  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0182  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0183  0813               	movf	19,w	;volatile
  2063  0184                     l191:
  2064  0184  0008               	return
  2065  0185                     __end_of_spiRead:
  2066                           
  2067                           	psect	text5
  2068  0164                     __ptext5:	
  2069 ;; *************** function _spiReceiveWait *****************
  2070 ;; Defined at:
  2071 ;;		line 29 in file "SPI.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		None
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0
  2088 ;;      Totals:         0       0       0       0       0
  2089 ;;Total ram usage:        0 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_spiRead
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function _spiReceiveWait
  2100  0164                     _spiReceiveWait:
  2101  0164                     l1514:	
  2102                           ;incstack = 0
  2103                           ; Regs used in _spiReceiveWait: []
  2104                           
  2105  0164                     l177:	
  2106                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  2107                           
  2108  0164  1683               	bsf	3,5	;RP0=1, select bank1
  2109  0165  1303               	bcf	3,6	;RP1=0, select bank1
  2110  0166  1C14               	btfss	20,0	;volatile
  2111  0167  2969               	goto	u1051
  2112  0168  296A               	goto	u1050
  2113  0169                     u1051:
  2114  0169  2964               	goto	l177
  2115  016A                     u1050:
  2116  016A                     l180:
  2117  016A  0008               	return
  2118  016B                     __end_of_spiReceiveWait:
  2119                           
  2120                           	psect	text6
  2121  029A                     __ptext6:	
  2122 ;; *************** function _setup *****************
  2123 ;; Defined at:
  2124 ;;		line 184 in file "SPI_MAESTRO.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0, pclath, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2138 ;;      Params:         0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0
  2141 ;;      Totals:         0       0       0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    1
  2145 ;; This function calls:
  2146 ;;		_spiInit
  2147 ;; This function is called by:
  2148 ;;		_main
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           
  2153                           ;psect for function _setup
  2154  029A                     _setup:
  2155  029A                     l1600:	
  2156                           ;incstack = 0
  2157                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2158                           
  2159                           
  2160                           ;SPI_MAESTRO.c: 185:     ANSEL = 0;
  2161  029A  1683               	bsf	3,5	;RP0=1, select bank3
  2162  029B  1703               	bsf	3,6	;RP1=1, select bank3
  2163  029C  0188               	clrf	8	;volatile
  2164                           
  2165                           ;SPI_MAESTRO.c: 186:     ANSELH = 0;
  2166  029D  0189               	clrf	9	;volatile
  2167  029E                     l1602:
  2168                           
  2169                           ;SPI_MAESTRO.c: 187:     TRISC2 = 0;
  2170  029E  1683               	bsf	3,5	;RP0=1, select bank1
  2171  029F  1303               	bcf	3,6	;RP1=0, select bank1
  2172  02A0  1107               	bcf	7,2	;volatile
  2173                           
  2174                           ;SPI_MAESTRO.c: 188:     TRISB = 0;
  2175  02A1  0186               	clrf	6	;volatile
  2176                           
  2177                           ;SPI_MAESTRO.c: 189:     TRISD = 0;
  2178  02A2  0188               	clrf	8	;volatile
  2179                           
  2180                           ;SPI_MAESTRO.c: 190:     PORTB = 0;
  2181  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  2182  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  2183  02A5  0186               	clrf	6	;volatile
  2184                           
  2185                           ;SPI_MAESTRO.c: 191:     PORTD = 0;
  2186  02A6  0188               	clrf	8	;volatile
  2187  02A7                     l1604:
  2188                           
  2189                           ;SPI_MAESTRO.c: 194:     OSCCONbits.IRCF2 = 1;
  2190  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  2191  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  2192  02A9  170F               	bsf	15,6	;volatile
  2193  02AA                     l1606:
  2194                           
  2195                           ;SPI_MAESTRO.c: 195:     OSCCONbits.IRCF1 = 1;
  2196  02AA  168F               	bsf	15,5	;volatile
  2197  02AB                     l1608:
  2198                           
  2199                           ;SPI_MAESTRO.c: 196:     OSCCONbits.IRCF0 = 0;
  2200  02AB  120F               	bcf	15,4	;volatile
  2201  02AC                     l1610:
  2202                           
  2203                           ;SPI_MAESTRO.c: 197:     OSCCONbits.SCS = 1;
  2204  02AC  140F               	bsf	15,0	;volatile
  2205  02AD                     l1612:
  2206                           
  2207                           ;SPI_MAESTRO.c: 200:     TXSTAbits.BRGH = 1;
  2208  02AD  1518               	bsf	24,2	;volatile
  2209  02AE                     l1614:
  2210                           
  2211                           ;SPI_MAESTRO.c: 201:     BAUDCTLbits.BRG16 = 0;
  2212  02AE  1683               	bsf	3,5	;RP0=1, select bank3
  2213  02AF  1703               	bsf	3,6	;RP1=1, select bank3
  2214  02B0  1187               	bcf	7,3	;volatile
  2215  02B1                     l1616:
  2216                           
  2217                           ;SPI_MAESTRO.c: 203:     TXSTAbits.SYNC = 0;
  2218  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2219  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  2220  02B3  1218               	bcf	24,4	;volatile
  2221  02B4                     l1618:
  2222                           
  2223                           ;SPI_MAESTRO.c: 204:     RCSTAbits.SPEN = 1;
  2224  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2225  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2226  02B6  1798               	bsf	24,7	;volatile
  2227  02B7                     l1620:
  2228                           
  2229                           ;SPI_MAESTRO.c: 205:     RCSTAbits.CREN = 1;
  2230  02B7  1618               	bsf	24,4	;volatile
  2231  02B8                     l1622:
  2232                           
  2233                           ;SPI_MAESTRO.c: 207:     TXSTAbits.TXEN = 1;
  2234  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2235  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2236  02BA  1698               	bsf	24,5	;volatile
  2237  02BB                     l1624:
  2238                           
  2239                           ;SPI_MAESTRO.c: 209:     RCSTAbits.RX9 = 0;
  2240  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2241  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  2242  02BD  1318               	bcf	24,6	;volatile
  2243  02BE                     l1626:
  2244                           
  2245                           ;SPI_MAESTRO.c: 211:     SPBRG = 25;
  2246  02BE  3019               	movlw	25
  2247  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  2248  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  2249  02C1  0099               	movwf	25	;volatile
  2250  02C2                     l1628:
  2251                           
  2252                           ;SPI_MAESTRO.c: 212:     SPBRGH = 1;
  2253  02C2  3001               	movlw	1
  2254  02C3  009A               	movwf	26	;volatile
  2255  02C4                     l1630:
  2256                           
  2257                           ;SPI_MAESTRO.c: 214:     PORTCbits.RC2 = 1;
  2258  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2259  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2260  02C6  1507               	bsf	7,2	;volatile
  2261  02C7                     l1632:
  2262                           
  2263                           ;SPI_MAESTRO.c: 215:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_
      +                          IDLE_LOW, SPI_IDLE_2_ACTIVE);
  2264  02C7  01F0               	clrf	spiInit@sDataSample
  2265  02C8  01F1               	clrf	spiInit@sClockIdle
  2266  02C9  01F2               	clrf	spiInit@sTransmitEdge
  2267  02CA  3020               	movlw	32
  2268  02CB  120A  118A  21AC  120A  118A  	fcall	_spiInit
  2269  02D0                     l127:
  2270  02D0  0008               	return
  2271  02D1                     __end_of_setup:
  2272                           
  2273                           	psect	text7
  2274  01AC                     __ptext7:	
  2275 ;; *************** function _spiInit *****************
  2276 ;; Defined at:
  2277 ;;		line 12 in file "SPI.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  sType           1    wreg     enum E1264
  2280 ;;  sDataSample     1    0[COMMON] enum E1272
  2281 ;;  sClockIdle      1    1[COMMON] enum E1276
  2282 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  sType           1    3[COMMON] enum E1264
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, status,2, status,0
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2294 ;;      Params:         3       0       0       0       0
  2295 ;;      Locals:         1       0       0       0       0
  2296 ;;      Temps:          0       0       0       0       0
  2297 ;;      Totals:         4       0       0       0       0
  2298 ;;Total ram usage:        4 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_setup
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           
  2308                           ;psect for function _spiInit
  2309  01AC                     _spiInit:
  2310                           
  2311                           ;incstack = 0
  2312                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2313                           ;spiInit@sType stored from wreg
  2314  01AC  00F3               	movwf	spiInit@sType
  2315  01AD                     l1504:
  2316                           
  2317                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  2318  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  2319  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  2320  01AF  1287               	bcf	7,5	;volatile
  2321                           
  2322                           ;SPI.c: 15:     if(sType & 0b00000100)
  2323  01B0  1D73               	btfss	spiInit@sType,2
  2324  01B1  29B3               	goto	u1041
  2325  01B2  29B4               	goto	u1040
  2326  01B3                     u1041:
  2327  01B3  29B8               	goto	l1510
  2328  01B4                     u1040:
  2329  01B4                     l1506:
  2330                           
  2331                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  2332  01B4  0872               	movf	spiInit@sTransmitEdge,w
  2333  01B5  0094               	movwf	20	;volatile
  2334  01B6                     l1508:
  2335                           
  2336                           ;SPI.c: 18:         TRISC3 = 1;
  2337  01B6  1587               	bsf	7,3	;volatile
  2338                           
  2339                           ;SPI.c: 19:     }
  2340  01B7  29BC               	goto	l173
  2341  01B8                     l1510:
  2342                           
  2343                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2344  01B8  0870               	movf	spiInit@sDataSample,w
  2345  01B9  0472               	iorwf	spiInit@sTransmitEdge,w
  2346  01BA  0094               	movwf	20	;volatile
  2347  01BB                     l1512:
  2348                           
  2349                           ;SPI.c: 23:         TRISC3 = 0;
  2350  01BB  1187               	bcf	7,3	;volatile
  2351  01BC                     l173:	
  2352                           ;SPI.c: 24:     }
  2353                           
  2354                           
  2355                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  2356  01BC  0873               	movf	spiInit@sType,w
  2357  01BD  0471               	iorwf	spiInit@sClockIdle,w
  2358  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2359  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  2360  01C0  0094               	movwf	20	;volatile
  2361  01C1                     l174:
  2362  01C1  0008               	return
  2363  01C2                     __end_of_spiInit:
  2364                           
  2365                           	psect	text8
  2366  034F                     __ptext8:	
  2367 ;; *************** function _division *****************
  2368 ;; Defined at:
  2369 ;;		line 218 in file "SPI_MAESTRO.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  variable        1    wreg     unsigned char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  variable        1   12[COMMON] unsigned char 
  2374 ;;  val             1   13[COMMON] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0, pclath, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2384 ;;      Params:         0       0       0       0       0
  2385 ;;      Locals:         2       0       0       0       0
  2386 ;;      Temps:          3       0       0       0       0
  2387 ;;      Totals:         5       0       0       0       0
  2388 ;;Total ram usage:        5 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    1
  2391 ;; This function calls:
  2392 ;;		___awdiv
  2393 ;;		___bmul
  2394 ;; This function is called by:
  2395 ;;		_main
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           
  2400                           ;psect for function _division
  2401  034F                     _division:
  2402                           
  2403                           ;incstack = 0
  2404                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2405                           ;division@variable stored from wreg
  2406  034F  00FC               	movwf	division@variable
  2407  0350                     l1642:
  2408                           
  2409                           ;SPI_MAESTRO.c: 219:     uint8_t val;;SPI_MAESTRO.c: 220:     val = (variable);
  2410  0350  087C               	movf	division@variable,w
  2411  0351  00F9               	movwf	??_division
  2412  0352  0879               	movf	??_division,w
  2413  0353  00FD               	movwf	division@val
  2414  0354                     l1644:
  2415                           
  2416                           ;SPI_MAESTRO.c: 221:     centenas = (val/100);
  2417  0354  3064               	movlw	100
  2418  0355  00F0               	movwf	___awdiv@divisor
  2419  0356  3000               	movlw	0
  2420  0357  00F1               	movwf	___awdiv@divisor+1
  2421  0358  087D               	movf	division@val,w
  2422  0359  00F9               	movwf	??_division
  2423  035A  01FA               	clrf	??_division+1
  2424  035B  0879               	movf	??_division,w
  2425  035C  00F2               	movwf	___awdiv@dividend
  2426  035D  087A               	movf	??_division+1,w
  2427  035E  00F3               	movwf	___awdiv@dividend+1
  2428  035F  120A  118A  23B2  120A  118A  	fcall	___awdiv
  2429  0364  0870               	movf	?___awdiv,w
  2430  0365  00FB               	movwf	??_division+2
  2431  0366  087B               	movf	??_division+2,w
  2432  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2433  0368  1303               	bcf	3,6	;RP1=0, select bank0
  2434  0369  00A5               	movwf	_centenas
  2435  036A                     l1646:
  2436                           
  2437                           ;SPI_MAESTRO.c: 222:     val = (val - (centenas*100));
  2438  036A  309C               	movlw	156
  2439  036B  00F9               	movwf	??_division
  2440  036C  0879               	movf	??_division,w
  2441  036D  00F0               	movwf	___bmul@multiplicand
  2442  036E  0825               	movf	_centenas,w
  2443  036F  120A  118A  2197  120A  118A  	fcall	___bmul
  2444  0374  077D               	addwf	division@val,w
  2445  0375  00FA               	movwf	??_division+1
  2446  0376  087A               	movf	??_division+1,w
  2447  0377  00FD               	movwf	division@val
  2448  0378                     l1648:
  2449                           
  2450                           ;SPI_MAESTRO.c: 223:     decenas = (val/10);
  2451  0378  300A               	movlw	10
  2452  0379  00F0               	movwf	___awdiv@divisor
  2453  037A  3000               	movlw	0
  2454  037B  00F1               	movwf	___awdiv@divisor+1
  2455  037C  087D               	movf	division@val,w
  2456  037D  00F9               	movwf	??_division
  2457  037E  01FA               	clrf	??_division+1
  2458  037F  0879               	movf	??_division,w
  2459  0380  00F2               	movwf	___awdiv@dividend
  2460  0381  087A               	movf	??_division+1,w
  2461  0382  00F3               	movwf	___awdiv@dividend+1
  2462  0383  120A  118A  23B2  120A  118A  	fcall	___awdiv
  2463  0388  0870               	movf	?___awdiv,w
  2464  0389  00FB               	movwf	??_division+2
  2465  038A  087B               	movf	??_division+2,w
  2466  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2467  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2468  038D  00A4               	movwf	_decenas
  2469  038E                     l1650:
  2470                           
  2471                           ;SPI_MAESTRO.c: 224:     val = (val - (decenas*10));
  2472  038E  30F6               	movlw	246
  2473  038F  00F9               	movwf	??_division
  2474  0390  0879               	movf	??_division,w
  2475  0391  00F0               	movwf	___bmul@multiplicand
  2476  0392  0824               	movf	_decenas,w
  2477  0393  120A  118A  2197  120A  118A  	fcall	___bmul
  2478  0398  077D               	addwf	division@val,w
  2479  0399  00FA               	movwf	??_division+1
  2480  039A  087A               	movf	??_division+1,w
  2481  039B  00FD               	movwf	division@val
  2482                           
  2483                           ;SPI_MAESTRO.c: 225:     unidades = (val);
  2484  039C  087D               	movf	division@val,w
  2485  039D  00F9               	movwf	??_division
  2486  039E  0879               	movf	??_division,w
  2487  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2488  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2489  03A1  00A3               	movwf	_unidades
  2490  03A2                     l1652:
  2491                           
  2492                           ;SPI_MAESTRO.c: 227:     centenas = centenas + 48;
  2493  03A2  0825               	movf	_centenas,w
  2494  03A3  3E30               	addlw	48
  2495  03A4  00F9               	movwf	??_division
  2496  03A5  0879               	movf	??_division,w
  2497  03A6  00A5               	movwf	_centenas
  2498  03A7                     l1654:
  2499                           
  2500                           ;SPI_MAESTRO.c: 228:     decenas = decenas + 48;
  2501  03A7  0824               	movf	_decenas,w
  2502  03A8  3E30               	addlw	48
  2503  03A9  00F9               	movwf	??_division
  2504  03AA  0879               	movf	??_division,w
  2505  03AB  00A4               	movwf	_decenas
  2506  03AC                     l1656:
  2507                           
  2508                           ;SPI_MAESTRO.c: 229:     unidades = unidades + 48;
  2509  03AC  0823               	movf	_unidades,w
  2510  03AD  3E30               	addlw	48
  2511  03AE  00F9               	movwf	??_division
  2512  03AF  0879               	movf	??_division,w
  2513  03B0  00A3               	movwf	_unidades
  2514  03B1                     l130:
  2515  03B1  0008               	return
  2516  03B2                     __end_of_division:
  2517                           
  2518                           	psect	text9
  2519  0197                     __ptext9:	
  2520 ;; *************** function ___bmul *****************
  2521 ;; Defined at:
  2522 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  multiplier      1    wreg     unsigned char 
  2525 ;;  multiplicand    1    0[COMMON] unsigned char 
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;  multiplier      1    3[COMMON] unsigned char 
  2528 ;;  product         1    2[COMMON] unsigned char 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  1    wreg      unsigned char 
  2531 ;; Registers used:
  2532 ;;		wreg, status,2, status,0
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2538 ;;      Params:         1       0       0       0       0
  2539 ;;      Locals:         2       0       0       0       0
  2540 ;;      Temps:          1       0       0       0       0
  2541 ;;      Totals:         4       0       0       0       0
  2542 ;;Total ram usage:        4 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_division
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           
  2552                           ;psect for function ___bmul
  2553  0197                     ___bmul:
  2554                           
  2555                           ;incstack = 0
  2556                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2557                           ;___bmul@multiplier stored from wreg
  2558  0197  00F3               	movwf	___bmul@multiplier
  2559  0198                     l1530:
  2560  0198  01F2               	clrf	___bmul@product
  2561  0199                     l1532:
  2562  0199  1C73               	btfss	___bmul@multiplier,0
  2563  019A  299C               	goto	u1101
  2564  019B  299D               	goto	u1100
  2565  019C                     u1101:
  2566  019C  29A1               	goto	l1536
  2567  019D                     u1100:
  2568  019D                     l1534:
  2569  019D  0870               	movf	___bmul@multiplicand,w
  2570  019E  00F1               	movwf	??___bmul
  2571  019F  0871               	movf	??___bmul,w
  2572  01A0  07F2               	addwf	___bmul@product,f
  2573  01A1                     l1536:
  2574  01A1  1003               	clrc
  2575  01A2  0DF0               	rlf	___bmul@multiplicand,f
  2576  01A3                     l1538:
  2577  01A3  1003               	clrc
  2578  01A4  0CF3               	rrf	___bmul@multiplier,f
  2579  01A5  0873               	movf	___bmul@multiplier,w
  2580  01A6  1D03               	btfss	3,2
  2581  01A7  29A9               	goto	u1111
  2582  01A8  29AA               	goto	u1110
  2583  01A9                     u1111:
  2584  01A9  2999               	goto	l1532
  2585  01AA                     u1110:
  2586  01AA                     l1540:
  2587  01AA  0872               	movf	___bmul@product,w
  2588  01AB                     l303:
  2589  01AB  0008               	return
  2590  01AC                     __end_of___bmul:
  2591                           
  2592                           	psect	text10
  2593  03B2                     __ptext10:	
  2594 ;; *************** function ___awdiv *****************
  2595 ;; Defined at:
  2596 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  divisor         2    0[COMMON] int 
  2599 ;;  dividend        2    2[COMMON] int 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  quotient        2    7[COMMON] int 
  2602 ;;  sign            1    6[COMMON] unsigned char 
  2603 ;;  counter         1    5[COMMON] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  2    0[COMMON] int 
  2606 ;; Registers used:
  2607 ;;		wreg, status,2, status,0
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2613 ;;      Params:         4       0       0       0       0
  2614 ;;      Locals:         4       0       0       0       0
  2615 ;;      Temps:          1       0       0       0       0
  2616 ;;      Totals:         9       0       0       0       0
  2617 ;;Total ram usage:        9 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_division
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           
  2627                           ;psect for function ___awdiv
  2628  03B2                     ___awdiv:
  2629  03B2                     l1544:	
  2630                           ;incstack = 0
  2631                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2632                           
  2633  03B2  01F6               	clrf	___awdiv@sign
  2634  03B3                     l1546:
  2635  03B3  1FF1               	btfss	___awdiv@divisor+1,7
  2636  03B4  2BB6               	goto	u1121
  2637  03B5  2BB7               	goto	u1120
  2638  03B6                     u1121:
  2639  03B6  2BBE               	goto	l1552
  2640  03B7                     u1120:
  2641  03B7                     l1548:
  2642  03B7  09F0               	comf	___awdiv@divisor,f
  2643  03B8  09F1               	comf	___awdiv@divisor+1,f
  2644  03B9  0AF0               	incf	___awdiv@divisor,f
  2645  03BA  1903               	skipnz
  2646  03BB  0AF1               	incf	___awdiv@divisor+1,f
  2647  03BC                     l1550:
  2648  03BC  01F6               	clrf	___awdiv@sign
  2649  03BD  0AF6               	incf	___awdiv@sign,f
  2650  03BE                     l1552:
  2651  03BE  1FF3               	btfss	___awdiv@dividend+1,7
  2652  03BF  2BC1               	goto	u1131
  2653  03C0  2BC2               	goto	u1130
  2654  03C1                     u1131:
  2655  03C1  2BCB               	goto	l1558
  2656  03C2                     u1130:
  2657  03C2                     l1554:
  2658  03C2  09F2               	comf	___awdiv@dividend,f
  2659  03C3  09F3               	comf	___awdiv@dividend+1,f
  2660  03C4  0AF2               	incf	___awdiv@dividend,f
  2661  03C5  1903               	skipnz
  2662  03C6  0AF3               	incf	___awdiv@dividend+1,f
  2663  03C7                     l1556:
  2664  03C7  3001               	movlw	1
  2665  03C8  00F4               	movwf	??___awdiv
  2666  03C9  0874               	movf	??___awdiv,w
  2667  03CA  06F6               	xorwf	___awdiv@sign,f
  2668  03CB                     l1558:
  2669  03CB  01F7               	clrf	___awdiv@quotient
  2670  03CC  01F8               	clrf	___awdiv@quotient+1
  2671  03CD                     l1560:
  2672  03CD  0870               	movf	___awdiv@divisor,w
  2673  03CE  0471               	iorwf	___awdiv@divisor+1,w
  2674  03CF  1903               	btfsc	3,2
  2675  03D0  2BD2               	goto	u1141
  2676  03D1  2BD3               	goto	u1140
  2677  03D2                     u1141:
  2678  03D2  2C0A               	goto	l1580
  2679  03D3                     u1140:
  2680  03D3                     l1562:
  2681  03D3  01F5               	clrf	___awdiv@counter
  2682  03D4  0AF5               	incf	___awdiv@counter,f
  2683  03D5  2BE1               	goto	l1568
  2684  03D6                     l1564:
  2685  03D6  3001               	movlw	1
  2686  03D7                     u1155:
  2687  03D7  1003               	clrc
  2688  03D8  0DF0               	rlf	___awdiv@divisor,f
  2689  03D9  0DF1               	rlf	___awdiv@divisor+1,f
  2690  03DA  3EFF               	addlw	-1
  2691  03DB  1D03               	skipz
  2692  03DC  2BD7               	goto	u1155
  2693  03DD                     l1566:
  2694  03DD  3001               	movlw	1
  2695  03DE  00F4               	movwf	??___awdiv
  2696  03DF  0874               	movf	??___awdiv,w
  2697  03E0  07F5               	addwf	___awdiv@counter,f
  2698  03E1                     l1568:
  2699  03E1  1FF1               	btfss	___awdiv@divisor+1,7
  2700  03E2  2BE4               	goto	u1161
  2701  03E3  2BE5               	goto	u1160
  2702  03E4                     u1161:
  2703  03E4  2BD6               	goto	l1564
  2704  03E5                     u1160:
  2705  03E5                     l1570:
  2706  03E5  3001               	movlw	1
  2707  03E6                     u1175:
  2708  03E6  1003               	clrc
  2709  03E7  0DF7               	rlf	___awdiv@quotient,f
  2710  03E8  0DF8               	rlf	___awdiv@quotient+1,f
  2711  03E9  3EFF               	addlw	-1
  2712  03EA  1D03               	skipz
  2713  03EB  2BE6               	goto	u1175
  2714  03EC  0871               	movf	___awdiv@divisor+1,w
  2715  03ED  0273               	subwf	___awdiv@dividend+1,w
  2716  03EE  1D03               	skipz
  2717  03EF  2BF2               	goto	u1185
  2718  03F0  0870               	movf	___awdiv@divisor,w
  2719  03F1  0272               	subwf	___awdiv@dividend,w
  2720  03F2                     u1185:
  2721  03F2  1C03               	skipc
  2722  03F3  2BF5               	goto	u1181
  2723  03F4  2BF6               	goto	u1180
  2724  03F5                     u1181:
  2725  03F5  2BFD               	goto	l1576
  2726  03F6                     u1180:
  2727  03F6                     l1572:
  2728  03F6  0870               	movf	___awdiv@divisor,w
  2729  03F7  02F2               	subwf	___awdiv@dividend,f
  2730  03F8  0871               	movf	___awdiv@divisor+1,w
  2731  03F9  1C03               	skipc
  2732  03FA  03F3               	decf	___awdiv@dividend+1,f
  2733  03FB  02F3               	subwf	___awdiv@dividend+1,f
  2734  03FC                     l1574:
  2735  03FC  1477               	bsf	___awdiv@quotient,0
  2736  03FD                     l1576:
  2737  03FD  3001               	movlw	1
  2738  03FE                     u1195:
  2739  03FE  1003               	clrc
  2740  03FF  0CF1               	rrf	___awdiv@divisor+1,f
  2741  0400  0CF0               	rrf	___awdiv@divisor,f
  2742  0401  3EFF               	addlw	-1
  2743  0402  1D03               	skipz
  2744  0403  2BFE               	goto	u1195
  2745  0404                     l1578:
  2746  0404  3001               	movlw	1
  2747  0405  02F5               	subwf	___awdiv@counter,f
  2748  0406  1D03               	btfss	3,2
  2749  0407  2C09               	goto	u1201
  2750  0408  2C0A               	goto	u1200
  2751  0409                     u1201:
  2752  0409  2BE5               	goto	l1570
  2753  040A                     u1200:
  2754  040A                     l1580:
  2755  040A  0876               	movf	___awdiv@sign,w
  2756  040B  1903               	btfsc	3,2
  2757  040C  2C0E               	goto	u1211
  2758  040D  2C0F               	goto	u1210
  2759  040E                     u1211:
  2760  040E  2C14               	goto	l1584
  2761  040F                     u1210:
  2762  040F                     l1582:
  2763  040F  09F7               	comf	___awdiv@quotient,f
  2764  0410  09F8               	comf	___awdiv@quotient+1,f
  2765  0411  0AF7               	incf	___awdiv@quotient,f
  2766  0412  1903               	skipnz
  2767  0413  0AF8               	incf	___awdiv@quotient+1,f
  2768  0414                     l1584:
  2769  0414  0878               	movf	___awdiv@quotient+1,w
  2770  0415  00F1               	movwf	?___awdiv+1
  2771  0416  0877               	movf	___awdiv@quotient,w
  2772  0417  00F0               	movwf	?___awdiv
  2773  0418                     l430:
  2774  0418  0008               	return
  2775  0419                     __end_of___awdiv:
  2776                           
  2777                           	psect	text11
  2778  01F6                     __ptext11:	
  2779 ;; *************** function _def2 *****************
  2780 ;; Defined at:
  2781 ;;		line 253 in file "SPI_MAESTRO.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;		None
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2795 ;;      Params:         0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0
  2797 ;;      Temps:          0       1       0       0       0
  2798 ;;      Totals:         0       1       0       0       0
  2799 ;;Total ram usage:        1 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:    3
  2802 ;; This function calls:
  2803 ;;		_printf
  2804 ;; This function is called by:
  2805 ;;		_main
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           
  2810                           ;psect for function _def2
  2811  01F6                     _def2:
  2812  01F6                     l1670:	
  2813                           ;incstack = 0
  2814                           ; Regs used in _def2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2815                           
  2816                           
  2817                           ;SPI_MAESTRO.c: 255:     if(RCREG > 5)
  2818  01F6  3006               	movlw	6
  2819  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  2820  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  2821  01F9  021A               	subwf	26,w	;volatile
  2822  01FA  1C03               	skipc
  2823  01FB  29FD               	goto	u1281
  2824  01FC  29FE               	goto	u1280
  2825  01FD                     u1281:
  2826  01FD  2A04               	goto	l154
  2827  01FE                     u1280:
  2828  01FE                     l1672:
  2829                           
  2830                           ;SPI_MAESTRO.c: 256:        {;SPI_MAESTRO.c: 257:            printf("Introduzca un valor
      +                           menor o igual a 5\r");
  2831  01FE  303F               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2832  01FF  120A  118A  2210  120A  118A  	fcall	_printf
  2833  0204                     l154:
  2834  0204  1283               	bcf	3,5	;RP0=0, select bank0
  2835  0205  1303               	bcf	3,6	;RP1=0, select bank0
  2836  0206  1E8C               	btfss	12,5	;volatile
  2837  0207  2A09               	goto	u1291
  2838  0208  2A0A               	goto	u1290
  2839  0209                     u1291:
  2840  0209  2A04               	goto	l154
  2841  020A                     u1290:
  2842  020A                     l1674:
  2843                           
  2844                           ;SPI_MAESTRO.c: 260:        UNIDAD = RCREG -48;
  2845  020A  081A               	movf	26,w	;volatile
  2846  020B  3ED0               	addlw	208
  2847  020C  00E1               	movwf	??_def2
  2848  020D  0861               	movf	??_def2,w
  2849  020E  00A0               	movwf	_UNIDAD
  2850  020F                     l157:
  2851  020F  0008               	return
  2852  0210                     __end_of_def2:
  2853                           
  2854                           	psect	text12
  2855  01DC                     __ptext12:	
  2856 ;; *************** function _def1 *****************
  2857 ;; Defined at:
  2858 ;;		line 245 in file "SPI_MAESTRO.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2872 ;;      Params:         0       0       0       0       0
  2873 ;;      Locals:         0       0       0       0       0
  2874 ;;      Temps:          0       1       0       0       0
  2875 ;;      Totals:         0       1       0       0       0
  2876 ;;Total ram usage:        1 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    3
  2879 ;; This function calls:
  2880 ;;		_printf
  2881 ;; This function is called by:
  2882 ;;		_main
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           
  2887                           ;psect for function _def1
  2888  01DC                     _def1:
  2889  01DC                     l1664:	
  2890                           ;incstack = 0
  2891                           ; Regs used in _def1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2892                           
  2893                           
  2894                           ;SPI_MAESTRO.c: 246:     if(RCREG > 5){
  2895  01DC  3006               	movlw	6
  2896  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2897  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2898  01DF  021A               	subwf	26,w	;volatile
  2899  01E0  1C03               	skipc
  2900  01E1  29E3               	goto	u1261
  2901  01E2  29E4               	goto	u1260
  2902  01E3                     u1261:
  2903  01E3  29EA               	goto	l147
  2904  01E4                     u1260:
  2905  01E4                     l1666:
  2906                           
  2907                           ;SPI_MAESTRO.c: 247:            printf("Introduzca un valor menor o igual a 5\r");
  2908  01E4  303F               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2909  01E5  120A  118A  2210  120A  118A  	fcall	_printf
  2910  01EA                     l147:
  2911  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  2912  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  2913  01EC  1E8C               	btfss	12,5	;volatile
  2914  01ED  29EF               	goto	u1271
  2915  01EE  29F0               	goto	u1270
  2916  01EF                     u1271:
  2917  01EF  29EA               	goto	l147
  2918  01F0                     u1270:
  2919  01F0                     l1668:
  2920                           
  2921                           ;SPI_MAESTRO.c: 250:        DECENA = RCREG -48;
  2922  01F0  081A               	movf	26,w	;volatile
  2923  01F1  3ED0               	addlw	208
  2924  01F2  00E1               	movwf	??_def1
  2925  01F3  0861               	movf	??_def1,w
  2926  01F4  00A1               	movwf	_DECENA
  2927  01F5                     l150:
  2928  01F5  0008               	return
  2929  01F6                     __end_of_def1:
  2930                           
  2931                           	psect	text13
  2932  01C2                     __ptext13:	
  2933 ;; *************** function _def *****************
  2934 ;; Defined at:
  2935 ;;		line 237 in file "SPI_MAESTRO.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;		None
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2949 ;;      Params:         0       0       0       0       0
  2950 ;;      Locals:         0       0       0       0       0
  2951 ;;      Temps:          0       1       0       0       0
  2952 ;;      Totals:         0       1       0       0       0
  2953 ;;Total ram usage:        1 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    3
  2956 ;; This function calls:
  2957 ;;		_printf
  2958 ;; This function is called by:
  2959 ;;		_main
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           
  2964                           ;psect for function _def
  2965  01C2                     _def:
  2966  01C2                     l1658:	
  2967                           ;incstack = 0
  2968                           ; Regs used in _def: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2969                           
  2970                           
  2971                           ;SPI_MAESTRO.c: 238:     if(RCREG > 2){
  2972  01C2  3003               	movlw	3
  2973  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2974  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2975  01C5  021A               	subwf	26,w	;volatile
  2976  01C6  1C03               	skipc
  2977  01C7  29C9               	goto	u1241
  2978  01C8  29CA               	goto	u1240
  2979  01C9                     u1241:
  2980  01C9  29D0               	goto	l140
  2981  01CA                     u1240:
  2982  01CA                     l1660:
  2983                           
  2984                           ;SPI_MAESTRO.c: 239:            printf("Introduzca un valor valido de 0 a 2\r");
  2985  01CA  3066               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2986  01CB  120A  118A  2210  120A  118A  	fcall	_printf
  2987  01D0                     l140:
  2988  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2989  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2990  01D2  1E8C               	btfss	12,5	;volatile
  2991  01D3  29D5               	goto	u1251
  2992  01D4  29D6               	goto	u1250
  2993  01D5                     u1251:
  2994  01D5  29D0               	goto	l140
  2995  01D6                     u1250:
  2996  01D6                     l1662:
  2997                           
  2998                           ;SPI_MAESTRO.c: 242:        CENTENA = RCREG -48;
  2999  01D6  081A               	movf	26,w	;volatile
  3000  01D7  3ED0               	addlw	208
  3001  01D8  00E1               	movwf	??_def
  3002  01D9  0861               	movf	??_def,w
  3003  01DA  00A2               	movwf	_CENTENA
  3004  01DB                     l143:
  3005  01DB  0008               	return
  3006  01DC                     __end_of_def:
  3007                           
  3008                           	psect	text14
  3009  0210                     __ptext14:	
  3010 ;; *************** function _printf *****************
  3011 ;; Defined at:
  3012 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;  f               1    wreg     PTR const unsigned char 
  3015 ;;		 -> STR_11(39), STR_10(39), STR_9(37), STR_5(29), 
  3016 ;;		 -> STR_4(29), STR_3(52), STR_2(17), STR_1(17), 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  3019 ;;		 -> STR_11(39), STR_10(39), STR_9(37), STR_5(29), 
  3020 ;;		 -> STR_4(29), STR_3(52), STR_2(17), STR_1(17), 
  3021 ;;  pb              2   15[BANK0 ] struct __prbuf
  3022 ;;  ap              1   13[BANK0 ] PTR void [1]
  3023 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  2   16[None  ] int 
  3026 ;; Registers used:
  3027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3033 ;;      Params:         0       0       0       0       0
  3034 ;;      Locals:         0       4       0       0       0
  3035 ;;      Temps:          0       2       0       0       0
  3036 ;;      Totals:         0       6       0       0       0
  3037 ;;Total ram usage:        6 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    2
  3040 ;; This function calls:
  3041 ;;		__doprnt
  3042 ;; This function is called by:
  3043 ;;		_main
  3044 ;;		_def
  3045 ;;		_def1
  3046 ;;		_def2
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           
  3051                           ;psect for function _printf
  3052  0210                     _printf:
  3053                           
  3054                           ;incstack = 0
  3055                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3056                           ;printf@f stored from wreg
  3057  0210  1283               	bcf	3,5	;RP0=0, select bank0
  3058  0211  1303               	bcf	3,6	;RP1=0, select bank0
  3059  0212  00DE               	movwf	printf@f
  3060  0213                     l1494:
  3061  0213  01DF               	clrf	printf@pb
  3062  0214                     l1496:
  3063  0214  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  3064  0215  00DB               	movwf	??_printf
  3065  0216  085B               	movf	??_printf,w
  3066  0217  00E0               	movwf	low ((printf@pb| 0+1))
  3067  0218                     l1498:
  3068  0218  3070               	movlw	(low (?_printf| 0))& (0+255)
  3069  0219  00DB               	movwf	??_printf
  3070  021A  085B               	movf	??_printf,w
  3071  021B  00DD               	movwf	printf@ap
  3072  021C                     l1500:
  3073                           
  3074                           ;	Return value of _printf is never used
  3075  021C  085E               	movf	printf@f,w
  3076  021D  00DB               	movwf	??_printf
  3077  021E  085B               	movf	??_printf,w
  3078  021F  00D0               	movwf	__doprnt@f
  3079  0220  305D               	movlw	(low (printf@ap| 0))& (0+255)
  3080  0221  00DC               	movwf	??_printf+1
  3081  0222  085C               	movf	??_printf+1,w
  3082  0223  00D1               	movwf	__doprnt@ap
  3083  0224  305F               	movlw	(low (printf@pb| 0))& (0+255)
  3084  0225  120A  118A  2494  120A  118A  	fcall	__doprnt
  3085  022A                     l754:
  3086  022A  0008               	return
  3087  022B                     __end_of_printf:
  3088                           
  3089                           	psect	text15
  3090  0494                     __ptext15:	
  3091 ;; *************** function __doprnt *****************
  3092 ;; Defined at:
  3093 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  pb              1    wreg     PTR struct __prbuf
  3096 ;;		 -> sprintf@pb(2), printf@pb(2), 
  3097 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  3098 ;;		 -> STR_11(39), STR_10(39), STR_9(37), STR_8(3), 
  3099 ;;		 -> STR_7(3), STR_6(3), STR_5(29), STR_4(29), 
  3100 ;;		 -> STR_3(52), STR_2(17), STR_1(17), 
  3101 ;;  ap              1    1[BANK0 ] PTR PTR void 
  3102 ;;		 -> sprintf@ap(1), printf@ap(1), 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  pb              1   10[BANK0 ] PTR struct __prbuf
  3105 ;;		 -> sprintf@pb(2), printf@pb(2), 
  3106 ;;  tmpval          4    0        struct .
  3107 ;;  val             2    7[BANK0 ] unsigned int 
  3108 ;;  cp              2    0        PTR const unsigned char 
  3109 ;;  len             2    0        unsigned int 
  3110 ;;  c               1    9[BANK0 ] unsigned char 
  3111 ;;  prec            1    6[BANK0 ] char 
  3112 ;;  flag            1    5[BANK0 ] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  2    0[BANK0 ] int 
  3115 ;; Registers used:
  3116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       2       0       0       0
  3123 ;;      Locals:         0       6       0       0       0
  3124 ;;      Temps:          0       3       0       0       0
  3125 ;;      Totals:         0      11       0       0       0
  3126 ;;Total ram usage:       11 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    1
  3129 ;; This function calls:
  3130 ;;		Absolute function
  3131 ;;		___lwdiv
  3132 ;;		___lwmod
  3133 ;;		_putch
  3134 ;; This function is called by:
  3135 ;;		_printf
  3136 ;;		_sprintf
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           
  3141                           ;psect for function __doprnt
  3142  0494                     __doprnt:
  3143                           
  3144                           ;incstack = 0
  3145                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3146                           ;__doprnt@pb stored from wreg
  3147  0494  1283               	bcf	3,5	;RP0=0, select bank0
  3148  0495  1303               	bcf	3,6	;RP1=0, select bank0
  3149  0496  00DA               	movwf	__doprnt@pb
  3150  0497                     l1422:
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  3153  0497  2DB1               	goto	l1484
  3154  0498                     l1424:
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3157  0498  3025               	movlw	37
  3158  0499  0659               	xorwf	__doprnt@c,w
  3159  049A  1903               	btfsc	3,2
  3160  049B  2C9D               	goto	u941
  3161  049C  2C9E               	goto	u940
  3162  049D                     u941:
  3163  049D  2CC4               	goto	l1434
  3164  049E                     u940:
  3165  049E                     l1426:
  3166  049E  0A5A               	incf	__doprnt@pb,w
  3167  049F  0084               	movwf	4
  3168  04A0  1383               	bcf	3,7	;select IRP bank0
  3169  04A1  0800               	movf	0,w
  3170  04A2  1903               	btfsc	3,2
  3171  04A3  2CA5               	goto	u951
  3172  04A4  2CA6               	goto	u950
  3173  04A5                     u951:
  3174  04A5  2CB5               	goto	l1430
  3175  04A6                     u950:
  3176  04A6                     l1428:
  3177  04A6  0859               	movf	__doprnt@c,w
  3178  04A7  00D2               	movwf	??__doprnt
  3179  04A8  0852               	movf	??__doprnt,w
  3180  04A9  00F0               	movwf	putch@info
  3181  04AA  0A5A               	incf	__doprnt@pb,w
  3182  04AB  0084               	movwf	4
  3183  04AC  0800               	movf	0,w
  3184  04AD  120A  118A  2003  120A  118A  	fcall	fptable
  3185  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  3186  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  3187  04B4  2C97               	goto	l1422
  3188  04B5                     l1430:
  3189  04B5  0859               	movf	__doprnt@c,w
  3190  04B6  00D2               	movwf	??__doprnt
  3191  04B7  085A               	movf	__doprnt@pb,w
  3192  04B8  0084               	movwf	4
  3193  04B9  0800               	movf	0,w
  3194  04BA  0084               	movwf	4
  3195  04BB  0852               	movf	??__doprnt,w
  3196  04BC  0080               	movwf	0
  3197  04BD                     l1432:
  3198  04BD  3001               	movlw	1
  3199  04BE  00D2               	movwf	??__doprnt
  3200  04BF  085A               	movf	__doprnt@pb,w
  3201  04C0  0084               	movwf	4
  3202  04C1  0852               	movf	??__doprnt,w
  3203  04C2  0780               	addwf	0,f
  3204  04C3  2C97               	goto	l1422
  3205  04C4                     l1434:
  3206                           
  3207                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3208  04C4  01D5               	clrf	__doprnt@flag
  3209  04C5                     l1438:	
  3210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3211                           
  3212  04C5  3001               	movlw	1
  3213  04C6  07D0               	addwf	__doprnt@f,f
  3214  04C7  30FF               	movlw	-1
  3215  04C8  0750               	addwf	__doprnt@f,w
  3216  04C9  0084               	movwf	4
  3217  04CA  120A  118A  200C  120A  118A  	fcall	stringdir
  3218  04CF  00D9               	movwf	__doprnt@c
  3219  04D0  00D2               	movwf	??__doprnt
  3220  04D1  01D3               	clrf	??__doprnt+1
  3221                           
  3222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3223                           ; Switch size 1, requested type "simple"
  3224                           ; Number of cases is 1, Range of values is 0 to 0
  3225                           ; switch strategies available:
  3226                           ; Name         Instructions Cycles
  3227                           ; simple_byte            4     3 (average)
  3228                           ; direct_byte           11     8 (fixed)
  3229                           ; jumptable            260     6 (fixed)
  3230                           ;	Chosen strategy is simple_byte
  3231  04D2  0853               	movf	??__doprnt+1,w
  3232  04D3  3A00               	xorlw	0	; case 0
  3233  04D4  1903               	skipnz
  3234  04D5  2CD7               	goto	l1868
  3235  04D6  2DB1               	goto	l1484
  3236  04D7                     l1868:
  3237                           
  3238                           ; Switch size 1, requested type "simple"
  3239                           ; Number of cases is 3, Range of values is 0 to 105
  3240                           ; switch strategies available:
  3241                           ; Name         Instructions Cycles
  3242                           ; simple_byte           10     6 (average)
  3243                           ; jumptable            260     6 (fixed)
  3244                           ;	Chosen strategy is simple_byte
  3245  04D7  0852               	movf	??__doprnt,w
  3246  04D8  3A00               	xorlw	0	; case 0
  3247  04D9  1903               	skipnz
  3248  04DA  2DC5               	goto	l1486
  3249  04DB  3A64               	xorlw	100	; case 100
  3250  04DC  1903               	skipnz
  3251  04DD  2CE2               	goto	l1440
  3252  04DE  3A0D               	xorlw	13	; case 105
  3253  04DF  1903               	skipnz
  3254  04E0  2CE2               	goto	l1440
  3255  04E1  2DB1               	goto	l1484
  3256  04E2                     l1440:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3259  04E2  0851               	movf	__doprnt@ap,w
  3260  04E3  0084               	movwf	4
  3261  04E4  1383               	bcf	3,7	;select IRP bank0
  3262  04E5  0800               	movf	0,w
  3263  04E6  00D2               	movwf	??__doprnt
  3264  04E7  3002               	movlw	2
  3265  04E8  0780               	addwf	0,f
  3266  04E9  0852               	movf	??__doprnt,w
  3267  04EA  0084               	movwf	4
  3268  04EB  0800               	movf	0,w
  3269  04EC  00D7               	movwf	__doprnt@val
  3270  04ED  0A84               	incf	4,f
  3271  04EE  0800               	movf	0,w
  3272  04EF  00D8               	movwf	__doprnt@val+1
  3273  04F0                     l1442:
  3274                           
  3275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3276  04F0  1FD8               	btfss	__doprnt@val+1,7
  3277  04F1  2CF3               	goto	u961
  3278  04F2  2CF4               	goto	u960
  3279  04F3                     u961:
  3280  04F3  2CFD               	goto	l1448
  3281  04F4                     u960:
  3282  04F4                     l1444:
  3283                           
  3284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3285  04F4  3003               	movlw	3
  3286  04F5  00D2               	movwf	??__doprnt
  3287  04F6  0852               	movf	??__doprnt,w
  3288  04F7  04D5               	iorwf	__doprnt@flag,f
  3289  04F8                     l1446:
  3290                           
  3291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3292  04F8  09D7               	comf	__doprnt@val,f
  3293  04F9  09D8               	comf	__doprnt@val+1,f
  3294  04FA  0AD7               	incf	__doprnt@val,f
  3295  04FB  1903               	skipnz
  3296  04FC  0AD8               	incf	__doprnt@val+1,f
  3297  04FD                     l1448:
  3298                           
  3299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3300  04FD  01D9               	clrf	__doprnt@c
  3301  04FE  0AD9               	incf	__doprnt@c,f
  3302  04FF                     l1454:
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3305  04FF  0859               	movf	__doprnt@c,w
  3306  0500  00D2               	movwf	??__doprnt
  3307  0501  0752               	addwf	??__doprnt,w
  3308  0502  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3309  0503  0084               	movwf	4
  3310  0504  120A  118A  200C  120A  118A  	fcall	stringdir
  3311  0509  00D3               	movwf	??__doprnt+1
  3312  050A  120A  118A  200C  120A  118A  	fcall	stringdir
  3313  050F  00D4               	movwf	??__doprnt+2
  3314  0510  0854               	movf	??__doprnt+2,w
  3315  0511  0258               	subwf	__doprnt@val+1,w
  3316  0512  1D03               	skipz
  3317  0513  2D16               	goto	u975
  3318  0514  0853               	movf	??__doprnt+1,w
  3319  0515  0257               	subwf	__doprnt@val,w
  3320  0516                     u975:
  3321  0516  1803               	skipnc
  3322  0517  2D19               	goto	u971
  3323  0518  2D1A               	goto	u970
  3324  0519                     u971:
  3325  0519  2D1B               	goto	l1458
  3326  051A                     u970:
  3327  051A  2D25               	goto	l1460
  3328  051B                     l1458:
  3329  051B  3001               	movlw	1
  3330  051C  00D2               	movwf	??__doprnt
  3331  051D  0852               	movf	??__doprnt,w
  3332  051E  07D9               	addwf	__doprnt@c,f
  3333  051F  3005               	movlw	5
  3334  0520  0659               	xorwf	__doprnt@c,w
  3335  0521  1D03               	btfss	3,2
  3336  0522  2D24               	goto	u981
  3337  0523  2D25               	goto	u980
  3338  0524                     u981:
  3339  0524  2CFF               	goto	l1454
  3340  0525                     u980:
  3341  0525                     l1460:
  3342                           
  3343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3344  0525  0855               	movf	__doprnt@flag,w
  3345  0526  3903               	andlw	3
  3346  0527  1903               	btfsc	3,2
  3347  0528  2D2A               	goto	u991
  3348  0529  2D2B               	goto	u990
  3349  052A                     u991:
  3350  052A  2D4E               	goto	l1470
  3351  052B                     u990:
  3352  052B                     l1462:
  3353  052B  0A5A               	incf	__doprnt@pb,w
  3354  052C  0084               	movwf	4
  3355  052D  1383               	bcf	3,7	;select IRP bank0
  3356  052E  0800               	movf	0,w
  3357  052F  1903               	btfsc	3,2
  3358  0530  2D32               	goto	u1001
  3359  0531  2D33               	goto	u1000
  3360  0532                     u1001:
  3361  0532  2D40               	goto	l1466
  3362  0533                     u1000:
  3363  0533                     l1464:
  3364  0533  302D               	movlw	45
  3365  0534  00D2               	movwf	??__doprnt
  3366  0535  0852               	movf	??__doprnt,w
  3367  0536  00F0               	movwf	putch@info
  3368  0537  0A5A               	incf	__doprnt@pb,w
  3369  0538  0084               	movwf	4
  3370  0539  0800               	movf	0,w
  3371  053A  120A  118A  2003  120A  118A  	fcall	fptable
  3372  053F  2D4E               	goto	l1470
  3373  0540                     l1466:
  3374  0540  302D               	movlw	45
  3375  0541  00D2               	movwf	??__doprnt
  3376  0542  085A               	movf	__doprnt@pb,w
  3377  0543  0084               	movwf	4
  3378  0544  0800               	movf	0,w
  3379  0545  0084               	movwf	4
  3380  0546  0852               	movf	??__doprnt,w
  3381  0547  0080               	movwf	0
  3382  0548                     l1468:
  3383  0548  3001               	movlw	1
  3384  0549  00D2               	movwf	??__doprnt
  3385  054A  085A               	movf	__doprnt@pb,w
  3386  054B  0084               	movwf	4
  3387  054C  0852               	movf	??__doprnt,w
  3388  054D  0780               	addwf	0,f
  3389  054E                     l1470:
  3390                           
  3391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3392  054E  1283               	bcf	3,5	;RP0=0, select bank0
  3393  054F  1303               	bcf	3,6	;RP1=0, select bank0
  3394  0550  0859               	movf	__doprnt@c,w
  3395  0551  00D2               	movwf	??__doprnt
  3396  0552  0852               	movf	??__doprnt,w
  3397  0553  00D6               	movwf	__doprnt@prec
  3398                           
  3399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3400  0554  2DA6               	goto	l1482
  3401  0555                     l1472:
  3402                           
  3403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3404  0555  300A               	movlw	10
  3405  0556  00F8               	movwf	___lwmod@divisor
  3406  0557  3000               	movlw	0
  3407  0558  00F9               	movwf	___lwmod@divisor+1
  3408  0559  0856               	movf	__doprnt@prec,w
  3409  055A  00D2               	movwf	??__doprnt
  3410  055B  0752               	addwf	??__doprnt,w
  3411  055C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3412  055D  0084               	movwf	4
  3413  055E  120A  118A  200C  120A  118A  	fcall	stringdir
  3414  0563  00F0               	movwf	___lwdiv@divisor
  3415  0564  120A  118A  200C  120A  118A  	fcall	stringdir
  3416  0569  00F1               	movwf	___lwdiv@divisor+1
  3417  056A  0858               	movf	__doprnt@val+1,w
  3418  056B  00F3               	movwf	___lwdiv@dividend+1
  3419  056C  0857               	movf	__doprnt@val,w
  3420  056D  00F2               	movwf	___lwdiv@dividend
  3421  056E  120A  118A  230B  120A  118A  	fcall	___lwdiv
  3422  0573  0871               	movf	?___lwdiv+1,w
  3423  0574  00FB               	movwf	___lwmod@dividend+1
  3424  0575  0870               	movf	?___lwdiv,w
  3425  0576  00FA               	movwf	___lwmod@dividend
  3426  0577  120A  118A  22D1  120A  118A  	fcall	___lwmod
  3427  057C  0878               	movf	?___lwmod,w
  3428  057D  3E30               	addlw	48
  3429  057E  1283               	bcf	3,5	;RP0=0, select bank0
  3430  057F  1303               	bcf	3,6	;RP1=0, select bank0
  3431  0580  00D3               	movwf	??__doprnt+1
  3432  0581  0853               	movf	??__doprnt+1,w
  3433  0582  00D9               	movwf	__doprnt@c
  3434  0583                     l1474:
  3435  0583  0A5A               	incf	__doprnt@pb,w
  3436  0584  0084               	movwf	4
  3437  0585  1383               	bcf	3,7	;select IRP bank0
  3438  0586  0800               	movf	0,w
  3439  0587  1903               	btfsc	3,2
  3440  0588  2D8A               	goto	u1011
  3441  0589  2D8B               	goto	u1010
  3442  058A                     u1011:
  3443  058A  2D98               	goto	l1478
  3444  058B                     u1010:
  3445  058B                     l1476:
  3446  058B  0859               	movf	__doprnt@c,w
  3447  058C  00D2               	movwf	??__doprnt
  3448  058D  0852               	movf	??__doprnt,w
  3449  058E  00F0               	movwf	putch@info
  3450  058F  0A5A               	incf	__doprnt@pb,w
  3451  0590  0084               	movwf	4
  3452  0591  0800               	movf	0,w
  3453  0592  120A  118A  2003  120A  118A  	fcall	fptable
  3454  0597  2DA6               	goto	l1482
  3455  0598                     l1478:
  3456  0598  0859               	movf	__doprnt@c,w
  3457  0599  00D2               	movwf	??__doprnt
  3458  059A  085A               	movf	__doprnt@pb,w
  3459  059B  0084               	movwf	4
  3460  059C  0800               	movf	0,w
  3461  059D  0084               	movwf	4
  3462  059E  0852               	movf	??__doprnt,w
  3463  059F  0080               	movwf	0
  3464  05A0                     l1480:
  3465  05A0  3001               	movlw	1
  3466  05A1  00D2               	movwf	??__doprnt
  3467  05A2  085A               	movf	__doprnt@pb,w
  3468  05A3  0084               	movwf	4
  3469  05A4  0852               	movf	??__doprnt,w
  3470  05A5  0780               	addwf	0,f
  3471  05A6                     l1482:
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3474  05A6  30FF               	movlw	255
  3475  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  3476  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  3477  05A9  00D2               	movwf	??__doprnt
  3478  05AA  0852               	movf	??__doprnt,w
  3479  05AB  07D6               	addwf	__doprnt@prec,f
  3480  05AC  0A56               	incf	__doprnt@prec,w
  3481  05AD  1D03               	btfss	3,2
  3482  05AE  2DB0               	goto	u1021
  3483  05AF  2DB1               	goto	u1020
  3484  05B0                     u1021:
  3485  05B0  2D55               	goto	l1472
  3486  05B1                     u1020:
  3487  05B1                     l1484:
  3488                           
  3489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3490  05B1  3001               	movlw	1
  3491  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  3492  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  3493  05B4  07D0               	addwf	__doprnt@f,f
  3494  05B5  30FF               	movlw	-1
  3495  05B6  0750               	addwf	__doprnt@f,w
  3496  05B7  0084               	movwf	4
  3497  05B8  120A  118A  200C  120A  118A  	fcall	stringdir
  3498  05BD  00D2               	movwf	??__doprnt
  3499  05BE  0852               	movf	??__doprnt,w
  3500  05BF  00D9               	movwf	__doprnt@c
  3501  05C0  0859               	movf	__doprnt@c,w
  3502  05C1  1D03               	btfss	3,2
  3503  05C2  2DC4               	goto	u1031
  3504  05C3  2DC5               	goto	u1030
  3505  05C4                     u1031:
  3506  05C4  2C98               	goto	l1424
  3507  05C5                     u1030:
  3508  05C5                     l1486:
  3509                           
  3510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  3511  05C5  01D0               	clrf	?__doprnt
  3512  05C6  01D1               	clrf	?__doprnt+1
  3513  05C7                     l792:
  3514  05C7  0008               	return
  3515  05C8                     __end_of__doprnt:
  3516                           
  3517                           	psect	text16
  3518  0173                     __ptext16:	
  3519 ;; *************** function _putch *****************
  3520 ;; Defined at:
  3521 ;;		line 231 in file "SPI_MAESTRO.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  info            1    0[COMMON] unsigned char 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3535 ;;      Params:         1       0       0       0       0
  3536 ;;      Locals:         0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0
  3538 ;;      Totals:         1       0       0       0       0
  3539 ;;Total ram usage:        1 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_printf
  3545 ;;		__doprnt
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           
  3550                           ;psect for function _putch
  3551  0173                     _putch:
  3552  0173                     l1370:	
  3553                           ;incstack = 0
  3554                           ; Regs used in _putch: [wreg]
  3555                           
  3556  0173                     l133:	
  3557                           ;SPI_MAESTRO.c: 233:     while (TXIF == 0);
  3558                           
  3559  0173  1283               	bcf	3,5	;RP0=0, select bank0
  3560  0174  1303               	bcf	3,6	;RP1=0, select bank0
  3561  0175  1E0C               	btfss	12,4	;volatile
  3562  0176  2978               	goto	u801
  3563  0177  2979               	goto	u800
  3564  0178                     u801:
  3565  0178  2973               	goto	l133
  3566  0179                     u800:
  3567  0179                     l1372:
  3568                           
  3569                           ;SPI_MAESTRO.c: 234:     TXREG = info;
  3570  0179  0870               	movf	putch@info,w
  3571  017A  0099               	movwf	25	;volatile
  3572  017B                     l136:
  3573  017B  0008               	return
  3574  017C                     __end_of_putch:
  3575                           
  3576                           	psect	text17
  3577  02D1                     __ptext17:	
  3578 ;; *************** function ___lwmod *****************
  3579 ;; Defined at:
  3580 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  divisor         2    8[COMMON] unsigned int 
  3583 ;;  dividend        2   10[COMMON] unsigned int 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  counter         1   13[COMMON] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  2    8[COMMON] unsigned int 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2, status,0
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3595 ;;      Params:         4       0       0       0       0
  3596 ;;      Locals:         1       0       0       0       0
  3597 ;;      Temps:          1       0       0       0       0
  3598 ;;      Totals:         6       0       0       0       0
  3599 ;;Total ram usage:        6 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		__doprnt
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           
  3609                           ;psect for function ___lwmod
  3610  02D1                     ___lwmod:
  3611  02D1                     l1400:	
  3612                           ;incstack = 0
  3613                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3614                           
  3615  02D1  0878               	movf	___lwmod@divisor,w
  3616  02D2  0479               	iorwf	___lwmod@divisor+1,w
  3617  02D3  1903               	btfsc	3,2
  3618  02D4  2AD6               	goto	u881
  3619  02D5  2AD7               	goto	u880
  3620  02D6                     u881:
  3621  02D6  2B06               	goto	l1418
  3622  02D7                     u880:
  3623  02D7                     l1402:
  3624  02D7  01FD               	clrf	___lwmod@counter
  3625  02D8  0AFD               	incf	___lwmod@counter,f
  3626  02D9  2AE5               	goto	l1408
  3627  02DA                     l1404:
  3628  02DA  3001               	movlw	1
  3629  02DB                     u895:
  3630  02DB  1003               	clrc
  3631  02DC  0DF8               	rlf	___lwmod@divisor,f
  3632  02DD  0DF9               	rlf	___lwmod@divisor+1,f
  3633  02DE  3EFF               	addlw	-1
  3634  02DF  1D03               	skipz
  3635  02E0  2ADB               	goto	u895
  3636  02E1                     l1406:
  3637  02E1  3001               	movlw	1
  3638  02E2  00FC               	movwf	??___lwmod
  3639  02E3  087C               	movf	??___lwmod,w
  3640  02E4  07FD               	addwf	___lwmod@counter,f
  3641  02E5                     l1408:
  3642  02E5  1FF9               	btfss	___lwmod@divisor+1,7
  3643  02E6  2AE8               	goto	u901
  3644  02E7  2AE9               	goto	u900
  3645  02E8                     u901:
  3646  02E8  2ADA               	goto	l1404
  3647  02E9                     u900:
  3648  02E9                     l1410:
  3649  02E9  0879               	movf	___lwmod@divisor+1,w
  3650  02EA  027B               	subwf	___lwmod@dividend+1,w
  3651  02EB  1D03               	skipz
  3652  02EC  2AEF               	goto	u915
  3653  02ED  0878               	movf	___lwmod@divisor,w
  3654  02EE  027A               	subwf	___lwmod@dividend,w
  3655  02EF                     u915:
  3656  02EF  1C03               	skipc
  3657  02F0  2AF2               	goto	u911
  3658  02F1  2AF3               	goto	u910
  3659  02F2                     u911:
  3660  02F2  2AF9               	goto	l1414
  3661  02F3                     u910:
  3662  02F3                     l1412:
  3663  02F3  0878               	movf	___lwmod@divisor,w
  3664  02F4  02FA               	subwf	___lwmod@dividend,f
  3665  02F5  0879               	movf	___lwmod@divisor+1,w
  3666  02F6  1C03               	skipc
  3667  02F7  03FB               	decf	___lwmod@dividend+1,f
  3668  02F8  02FB               	subwf	___lwmod@dividend+1,f
  3669  02F9                     l1414:
  3670  02F9  3001               	movlw	1
  3671  02FA                     u925:
  3672  02FA  1003               	clrc
  3673  02FB  0CF9               	rrf	___lwmod@divisor+1,f
  3674  02FC  0CF8               	rrf	___lwmod@divisor,f
  3675  02FD  3EFF               	addlw	-1
  3676  02FE  1D03               	skipz
  3677  02FF  2AFA               	goto	u925
  3678  0300                     l1416:
  3679  0300  3001               	movlw	1
  3680  0301  02FD               	subwf	___lwmod@counter,f
  3681  0302  1D03               	btfss	3,2
  3682  0303  2B05               	goto	u931
  3683  0304  2B06               	goto	u930
  3684  0305                     u931:
  3685  0305  2AE9               	goto	l1410
  3686  0306                     u930:
  3687  0306                     l1418:
  3688  0306  087B               	movf	___lwmod@dividend+1,w
  3689  0307  00F9               	movwf	?___lwmod+1
  3690  0308  087A               	movf	___lwmod@dividend,w
  3691  0309  00F8               	movwf	?___lwmod
  3692  030A                     l559:
  3693  030A  0008               	return
  3694  030B                     __end_of___lwmod:
  3695                           
  3696                           	psect	text18
  3697  030B                     __ptext18:	
  3698 ;; *************** function ___lwdiv *****************
  3699 ;; Defined at:
  3700 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  divisor         2    0[COMMON] unsigned int 
  3703 ;;  dividend        2    2[COMMON] unsigned int 
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  quotient        2    5[COMMON] unsigned int 
  3706 ;;  counter         1    7[COMMON] unsigned char 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  2    0[COMMON] unsigned int 
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, status,0
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3716 ;;      Params:         4       0       0       0       0
  3717 ;;      Locals:         3       0       0       0       0
  3718 ;;      Temps:          1       0       0       0       0
  3719 ;;      Totals:         8       0       0       0       0
  3720 ;;Total ram usage:        8 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		__doprnt
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           
  3730                           ;psect for function ___lwdiv
  3731  030B                     ___lwdiv:
  3732  030B                     l1374:	
  3733                           ;incstack = 0
  3734                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3735                           
  3736  030B  01F5               	clrf	___lwdiv@quotient
  3737  030C  01F6               	clrf	___lwdiv@quotient+1
  3738  030D                     l1376:
  3739  030D  0870               	movf	___lwdiv@divisor,w
  3740  030E  0471               	iorwf	___lwdiv@divisor+1,w
  3741  030F  1903               	btfsc	3,2
  3742  0310  2B12               	goto	u811
  3743  0311  2B13               	goto	u810
  3744  0312                     u811:
  3745  0312  2B4A               	goto	l1396
  3746  0313                     u810:
  3747  0313                     l1378:
  3748  0313  01F7               	clrf	___lwdiv@counter
  3749  0314  0AF7               	incf	___lwdiv@counter,f
  3750  0315  2B21               	goto	l1384
  3751  0316                     l1380:
  3752  0316  3001               	movlw	1
  3753  0317                     u825:
  3754  0317  1003               	clrc
  3755  0318  0DF0               	rlf	___lwdiv@divisor,f
  3756  0319  0DF1               	rlf	___lwdiv@divisor+1,f
  3757  031A  3EFF               	addlw	-1
  3758  031B  1D03               	skipz
  3759  031C  2B17               	goto	u825
  3760  031D                     l1382:
  3761  031D  3001               	movlw	1
  3762  031E  00F4               	movwf	??___lwdiv
  3763  031F  0874               	movf	??___lwdiv,w
  3764  0320  07F7               	addwf	___lwdiv@counter,f
  3765  0321                     l1384:
  3766  0321  1FF1               	btfss	___lwdiv@divisor+1,7
  3767  0322  2B24               	goto	u831
  3768  0323  2B25               	goto	u830
  3769  0324                     u831:
  3770  0324  2B16               	goto	l1380
  3771  0325                     u830:
  3772  0325                     l1386:
  3773  0325  3001               	movlw	1
  3774  0326                     u845:
  3775  0326  1003               	clrc
  3776  0327  0DF5               	rlf	___lwdiv@quotient,f
  3777  0328  0DF6               	rlf	___lwdiv@quotient+1,f
  3778  0329  3EFF               	addlw	-1
  3779  032A  1D03               	skipz
  3780  032B  2B26               	goto	u845
  3781  032C  0871               	movf	___lwdiv@divisor+1,w
  3782  032D  0273               	subwf	___lwdiv@dividend+1,w
  3783  032E  1D03               	skipz
  3784  032F  2B32               	goto	u855
  3785  0330  0870               	movf	___lwdiv@divisor,w
  3786  0331  0272               	subwf	___lwdiv@dividend,w
  3787  0332                     u855:
  3788  0332  1C03               	skipc
  3789  0333  2B35               	goto	u851
  3790  0334  2B36               	goto	u850
  3791  0335                     u851:
  3792  0335  2B3D               	goto	l1392
  3793  0336                     u850:
  3794  0336                     l1388:
  3795  0336  0870               	movf	___lwdiv@divisor,w
  3796  0337  02F2               	subwf	___lwdiv@dividend,f
  3797  0338  0871               	movf	___lwdiv@divisor+1,w
  3798  0339  1C03               	skipc
  3799  033A  03F3               	decf	___lwdiv@dividend+1,f
  3800  033B  02F3               	subwf	___lwdiv@dividend+1,f
  3801  033C                     l1390:
  3802  033C  1475               	bsf	___lwdiv@quotient,0
  3803  033D                     l1392:
  3804  033D  3001               	movlw	1
  3805  033E                     u865:
  3806  033E  1003               	clrc
  3807  033F  0CF1               	rrf	___lwdiv@divisor+1,f
  3808  0340  0CF0               	rrf	___lwdiv@divisor,f
  3809  0341  3EFF               	addlw	-1
  3810  0342  1D03               	skipz
  3811  0343  2B3E               	goto	u865
  3812  0344                     l1394:
  3813  0344  3001               	movlw	1
  3814  0345  02F7               	subwf	___lwdiv@counter,f
  3815  0346  1D03               	btfss	3,2
  3816  0347  2B49               	goto	u871
  3817  0348  2B4A               	goto	u870
  3818  0349                     u871:
  3819  0349  2B25               	goto	l1386
  3820  034A                     u870:
  3821  034A                     l1396:
  3822  034A  0876               	movf	___lwdiv@quotient+1,w
  3823  034B  00F1               	movwf	?___lwdiv+1
  3824  034C  0875               	movf	___lwdiv@quotient,w
  3825  034D  00F0               	movwf	?___lwdiv
  3826  034E                     l549:
  3827  034E  0008               	return
  3828  034F                     __end_of___lwdiv:
  3829                           
  3830                           	psect	text19
  3831  0419                     __ptext19:	
  3832 ;; *************** function _atoi *****************
  3833 ;; Defined at:
  3834 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  s               1    wreg     PTR const unsigned char 
  3837 ;;		 -> v1(20), 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  s               1   13[COMMON] PTR const unsigned char 
  3840 ;;		 -> v1(20), 
  3841 ;;  a               2   11[COMMON] int 
  3842 ;;  sign            1   10[COMMON] unsigned char 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  2    6[COMMON] int 
  3845 ;; Registers used:
  3846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3852 ;;      Params:         2       0       0       0       0
  3853 ;;      Locals:         4       0       0       0       0
  3854 ;;      Temps:          2       0       0       0       0
  3855 ;;      Totals:         8       0       0       0       0
  3856 ;;Total ram usage:        8 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:    1
  3859 ;; This function calls:
  3860 ;;		___wmul
  3861 ;;		_isdigit
  3862 ;; This function is called by:
  3863 ;;		_main
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           
  3868                           ;psect for function _atoi
  3869  0419                     _atoi:
  3870                           
  3871                           ;incstack = 0
  3872                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3873                           ;atoi@s stored from wreg
  3874  0419  00FD               	movwf	atoi@s
  3875  041A                     l1698:
  3876  041A  2C1F               	goto	l1702
  3877  041B                     l1700:
  3878  041B  3001               	movlw	1
  3879  041C  00F8               	movwf	??_atoi
  3880  041D  0878               	movf	??_atoi,w
  3881  041E  07FD               	addwf	atoi@s,f
  3882  041F                     l1702:
  3883  041F  087D               	movf	atoi@s,w
  3884  0420  0084               	movwf	4
  3885  0421  3020               	movlw	32
  3886  0422  1383               	bcf	3,7	;select IRP bank0
  3887  0423  0600               	xorwf	0,w
  3888  0424  1903               	btfsc	3,2
  3889  0425  2C27               	goto	u1321
  3890  0426  2C28               	goto	u1320
  3891  0427                     u1321:
  3892  0427  2C1B               	goto	l1700
  3893  0428                     u1320:
  3894  0428                     l1704:
  3895  0428  087D               	movf	atoi@s,w
  3896  0429  0084               	movwf	4
  3897  042A  3009               	movlw	9
  3898  042B  0600               	xorwf	0,w
  3899  042C  1903               	btfsc	3,2
  3900  042D  2C2F               	goto	u1331
  3901  042E  2C30               	goto	u1330
  3902  042F                     u1331:
  3903  042F  2C1B               	goto	l1700
  3904  0430                     u1330:
  3905  0430                     l1706:
  3906  0430  01FB               	clrf	atoi@a
  3907  0431  01FC               	clrf	atoi@a+1
  3908  0432  01FA               	clrf	atoi@sign
  3909  0433                     l1708:
  3910  0433  087D               	movf	atoi@s,w
  3911  0434  0084               	movwf	4
  3912  0435  302D               	movlw	45
  3913  0436  0600               	xorwf	0,w
  3914  0437  1D03               	btfss	3,2
  3915  0438  2C3A               	goto	u1341
  3916  0439  2C3B               	goto	u1340
  3917  043A                     u1341:
  3918  043A  2C44               	goto	l1712
  3919  043B                     u1340:
  3920  043B                     l1710:
  3921  043B  3001               	movlw	1
  3922  043C  00F8               	movwf	??_atoi
  3923  043D  0878               	movf	??_atoi,w
  3924  043E  07FA               	addwf	atoi@sign,f
  3925  043F  3001               	movlw	1
  3926  0440  00F8               	movwf	??_atoi
  3927  0441  0878               	movf	??_atoi,w
  3928  0442  07FD               	addwf	atoi@s,f
  3929  0443  2C72               	goto	l1720
  3930  0444                     l1712:
  3931  0444  087D               	movf	atoi@s,w
  3932  0445  0084               	movwf	4
  3933  0446  302B               	movlw	43
  3934  0447  0600               	xorwf	0,w
  3935  0448  1D03               	btfss	3,2
  3936  0449  2C4B               	goto	u1351
  3937  044A  2C4C               	goto	u1350
  3938  044B                     u1351:
  3939  044B  2C72               	goto	l1720
  3940  044C                     u1350:
  3941  044C                     l1714:
  3942  044C  3001               	movlw	1
  3943  044D  00F8               	movwf	??_atoi
  3944  044E  0878               	movf	??_atoi,w
  3945  044F  07FD               	addwf	atoi@s,f
  3946  0450  2C72               	goto	l1720
  3947  0451                     l1716:
  3948  0451  087D               	movf	atoi@s,w
  3949  0452  0084               	movwf	4
  3950  0453  087C               	movf	atoi@a+1,w
  3951  0454  00F1               	movwf	___wmul@multiplier+1
  3952  0455  087B               	movf	atoi@a,w
  3953  0456  00F0               	movwf	___wmul@multiplier
  3954  0457  300A               	movlw	10
  3955  0458  00F2               	movwf	___wmul@multiplicand
  3956  0459  3000               	movlw	0
  3957  045A  00F3               	movwf	___wmul@multiplicand+1
  3958  045B  120A  118A  224C  120A  118A  	fcall	___wmul
  3959  0460  1383               	bcf	3,7	;select IRP bank0
  3960  0461  0800               	movf	0,w
  3961  0462  0770               	addwf	?___wmul,w
  3962  0463  00F8               	movwf	??_atoi
  3963  0464  3000               	movlw	0
  3964  0465  1803               	skipnc
  3965  0466  3001               	movlw	1
  3966  0467  0771               	addwf	?___wmul+1,w
  3967  0468  00F9               	movwf	??_atoi+1
  3968  0469  0878               	movf	??_atoi,w
  3969  046A  3ED0               	addlw	208
  3970  046B  00FB               	movwf	atoi@a
  3971  046C  0879               	movf	??_atoi+1,w
  3972  046D  1803               	skipnc
  3973  046E  3E01               	addlw	1
  3974  046F  3EFF               	addlw	255
  3975  0470  00FC               	movwf	atoi@a+1
  3976  0471  2C4C               	goto	l1714
  3977  0472                     l1720:
  3978  0472  087D               	movf	atoi@s,w
  3979  0473  0084               	movwf	4
  3980  0474  0800               	movf	0,w
  3981  0475  120A  118A  2185  120A  118A  	fcall	_isdigit
  3982  047A  1803               	btfsc	3,0
  3983  047B  2C7D               	goto	u1361
  3984  047C  2C7E               	goto	u1360
  3985  047D                     u1361:
  3986  047D  2C51               	goto	l1716
  3987  047E                     u1360:
  3988  047E                     l1722:
  3989  047E  087A               	movf	atoi@sign,w
  3990  047F  1903               	btfsc	3,2
  3991  0480  2C82               	goto	u1371
  3992  0481  2C83               	goto	u1370
  3993  0482                     u1371:
  3994  0482  2C8F               	goto	l1728
  3995  0483                     u1370:
  3996  0483                     l1724:
  3997  0483  097B               	comf	atoi@a,w
  3998  0484  00F8               	movwf	??_atoi
  3999  0485  097C               	comf	atoi@a+1,w
  4000  0486  00F9               	movwf	??_atoi+1
  4001  0487  0AF8               	incf	??_atoi,f
  4002  0488  1903               	skipnz
  4003  0489  0AF9               	incf	??_atoi+1,f
  4004  048A  0878               	movf	??_atoi,w
  4005  048B  00F6               	movwf	?_atoi
  4006  048C  0879               	movf	??_atoi+1,w
  4007  048D  00F7               	movwf	?_atoi+1
  4008  048E  2C93               	goto	l740
  4009  048F                     l1728:
  4010  048F  087C               	movf	atoi@a+1,w
  4011  0490  00F7               	movwf	?_atoi+1
  4012  0491  087B               	movf	atoi@a,w
  4013  0492  00F6               	movwf	?_atoi
  4014  0493                     l740:
  4015  0493  0008               	return
  4016  0494                     __end_of_atoi:
  4017                           
  4018                           	psect	text20
  4019  0185                     __ptext20:	
  4020 ;; *************** function _isdigit *****************
  4021 ;; Defined at:
  4022 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  c               1    wreg     unsigned char 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  c               1    1[COMMON] unsigned char 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;		None               void
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4036 ;;      Params:         0       0       0       0       0
  4037 ;;      Locals:         2       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0
  4039 ;;      Totals:         2       0       0       0       0
  4040 ;;Total ram usage:        2 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_atoi
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           
  4050                           ;psect for function _isdigit
  4051  0185                     _isdigit:
  4052                           
  4053                           ;incstack = 0
  4054                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4055                           ;isdigit@c stored from wreg
  4056  0185  00F1               	movwf	isdigit@c
  4057  0186                     l1588:
  4058  0186  01F0               	clrf	_isdigit$925
  4059  0187                     l1590:
  4060  0187  303A               	movlw	58
  4061  0188  0271               	subwf	isdigit@c,w
  4062  0189  1803               	skipnc
  4063  018A  298C               	goto	u1221
  4064  018B  298D               	goto	u1220
  4065  018C                     u1221:
  4066  018C  2995               	goto	l1596
  4067  018D                     u1220:
  4068  018D                     l1592:
  4069  018D  3030               	movlw	48
  4070  018E  0271               	subwf	isdigit@c,w
  4071  018F  1C03               	skipc
  4072  0190  2992               	goto	u1231
  4073  0191  2993               	goto	u1230
  4074  0192                     u1231:
  4075  0192  2995               	goto	l1596
  4076  0193                     u1230:
  4077  0193                     l1594:
  4078  0193  01F0               	clrf	_isdigit$925
  4079  0194  0AF0               	incf	_isdigit$925,f
  4080  0195                     l1596:
  4081  0195  0C70               	rrf	_isdigit$925,w
  4082  0196                     l745:
  4083  0196  0008               	return
  4084  0197                     __end_of_isdigit:
  4085                           
  4086                           	psect	text21
  4087  024C                     __ptext21:	
  4088 ;; *************** function ___wmul *****************
  4089 ;; Defined at:
  4090 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  multiplier      2    0[COMMON] unsigned int 
  4093 ;;  multiplicand    2    2[COMMON] unsigned int 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  product         2    4[COMMON] unsigned int 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  2    0[COMMON] unsigned int 
  4098 ;; Registers used:
  4099 ;;		wreg, status,2, status,0
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4105 ;;      Params:         4       0       0       0       0
  4106 ;;      Locals:         2       0       0       0       0
  4107 ;;      Temps:          0       0       0       0       0
  4108 ;;      Totals:         6       0       0       0       0
  4109 ;;Total ram usage:        6 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_atoi
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           
  4119                           ;psect for function ___wmul
  4120  024C                     ___wmul:
  4121  024C                     l1516:	
  4122                           ;incstack = 0
  4123                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4124                           
  4125  024C  01F4               	clrf	___wmul@product
  4126  024D  01F5               	clrf	___wmul@product+1
  4127  024E                     l1518:
  4128  024E  1C70               	btfss	___wmul@multiplier,0
  4129  024F  2A51               	goto	u1061
  4130  0250  2A52               	goto	u1060
  4131  0251                     u1061:
  4132  0251  2A58               	goto	l277
  4133  0252                     u1060:
  4134  0252                     l1520:
  4135  0252  0872               	movf	___wmul@multiplicand,w
  4136  0253  07F4               	addwf	___wmul@product,f
  4137  0254  1803               	skipnc
  4138  0255  0AF5               	incf	___wmul@product+1,f
  4139  0256  0873               	movf	___wmul@multiplicand+1,w
  4140  0257  07F5               	addwf	___wmul@product+1,f
  4141  0258                     l277:
  4142  0258  3001               	movlw	1
  4143  0259                     u1075:
  4144  0259  1003               	clrc
  4145  025A  0DF2               	rlf	___wmul@multiplicand,f
  4146  025B  0DF3               	rlf	___wmul@multiplicand+1,f
  4147  025C  3EFF               	addlw	-1
  4148  025D  1D03               	skipz
  4149  025E  2A59               	goto	u1075
  4150  025F                     l1522:
  4151  025F  3001               	movlw	1
  4152  0260                     u1085:
  4153  0260  1003               	clrc
  4154  0261  0CF1               	rrf	___wmul@multiplier+1,f
  4155  0262  0CF0               	rrf	___wmul@multiplier,f
  4156  0263  3EFF               	addlw	-1
  4157  0264  1D03               	skipz
  4158  0265  2A60               	goto	u1085
  4159  0266                     l1524:
  4160  0266  0870               	movf	___wmul@multiplier,w
  4161  0267  0471               	iorwf	___wmul@multiplier+1,w
  4162  0268  1D03               	btfss	3,2
  4163  0269  2A6B               	goto	u1091
  4164  026A  2A6C               	goto	u1090
  4165  026B                     u1091:
  4166  026B  2A4E               	goto	l1518
  4167  026C                     u1090:
  4168  026C                     l1526:
  4169  026C  0875               	movf	___wmul@product+1,w
  4170  026D  00F1               	movwf	?___wmul+1
  4171  026E  0874               	movf	___wmul@product,w
  4172  026F  00F0               	movwf	?___wmul
  4173  0270                     l279:
  4174  0270  0008               	return
  4175  0271                     __end_of___wmul:
  4176  0002                     
  4177                           	psect	functab
  4178  0003                     __pfunctab:
  4179  0003                     __fptable:
  4180  0003                     fptable:
  4181  0003  00FF               	movwf	(btemp+1)& (0+127)
  4182  0004  3000               	movlw	high fptable
  4183  0005  008A               	movwf	10
  4184  0006  087F               	movf	(btemp+1)& (0+127),w
  4185  0007  0782               	addwf	2,f
  4186  0008                     fpbase:
  4187  0008  2808               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  4188  0009                     fp__putch:
  4189  0009  120A  118A  2973   	ljmp	_putch
  4190  000C                     __end_of__fptable:
  4191  007E                     btemp	set	126	;btemp
  4192  007E                     wtemp0	set	126
  4193                           
  4194                           	psect	config
  4195                           
  4196                           ;Config register CONFIG1 @ 0x2007
  4197                           ;	Oscillator Selection bits
  4198                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4199                           ;	Watchdog Timer Enable bit
  4200                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4201                           ;	Power-up Timer Enable bit
  4202                           ;	PWRTE = OFF, PWRT disabled
  4203                           ;	RE3/MCLR pin function select bit
  4204                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4205                           ;	Code Protection bit
  4206                           ;	CP = OFF, Program memory code protection is disabled
  4207                           ;	Data Code Protection bit
  4208                           ;	CPD = OFF, Data memory code protection is disabled
  4209                           ;	Brown Out Reset Selection bits
  4210                           ;	BOREN = OFF, BOR disabled
  4211                           ;	Internal External Switchover bit
  4212                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4213                           ;	Fail-Safe Clock Monitor Enabled bit
  4214                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4215                           ;	Low Voltage Programming Enable bit
  4216                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4217                           ;	In-Circuit Debugger Mode bit
  4218                           ;	DEBUG = 0x1, unprogrammed default
  4219  2007                     	org	8199
  4220  2007  20D4               	dw	8404
  4221                           
  4222                           ;Config register CONFIG2 @ 0x2008
  4223                           ;	Brown-out Reset Selection bit
  4224                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4225                           ;	Flash Program Memory Self Write Enable bits
  4226                           ;	WRT = OFF, Write protection off
  4227  2008                     	org	8200
  4228  2008  3FFF               	dw	16383

Data Sizes:
    Strings     223
    Constant    10
    Data        0
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      73
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 20
		 -> v3(BANK1[20]), v2(BANK0[20]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 20
		 -> v1(BANK0[20]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 20
		 -> v1(BANK0[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(COMMON[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> v3(BANK1[20]), v2(BANK0[20]), v1(BANK0[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), v3(BANK1[20]), v2(BANK0[20]), v1(BANK0[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 52
		 -> STR_11(CODE[39]), STR_10(CODE[39]), STR_9(CODE[37]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[29]), STR_4(CODE[29]), 
		 -> STR_3(CODE[52]), STR_2(CODE[17]), STR_1(CODE[17]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), v3(BANK1[20]), v2(BANK0[20]), v1(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 52
		 -> STR_11(CODE[39]), STR_10(CODE[39]), STR_9(CODE[37]), STR_5(CODE[29]), 
		 -> STR_4(CODE[29]), STR_3(CODE[52]), STR_2(CODE[17]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(COMMON[2]), 

    S927__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S927__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), v3(BANK1[20]), v2(BANK0[20]), v1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), v3(BANK1[20]), v2(BANK0[20]), v1(BANK0[20]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> v1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> v1(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_atoi
    _main->_division
    _setup->_spiInit
    _division->___awdiv
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->__doprnt
    _def2->_printf
    _def1->_printf
    _def->_printf
    _printf->__doprnt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   13601
                                             20 BANK0      5     5      0
                               _atoi
                                _def
                               _def1
                               _def2
                           _division
                             _printf
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     3      1     316
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                              9     6      3    2360
                                             11 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _division                                             5     5      0     983
                                              9 COMMON     5     5      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     244
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _def2                                                 1     1      0    2241
                                             17 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _def1                                                 1     1      0    2241
                                             17 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _def                                                  1     1      0    2241
                                             17 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     6      0    2241
                                             11 BANK0      6     6      0
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             19    17      2    1868
                                              0 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     181
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2     573
                                              6 COMMON     8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atoi
     ___wmul
     _isdigit
   _def
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _def1
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _def2
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _division
     ___awdiv
     ___bmul
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _strcat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      6B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      49       5       91.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      14       7       25.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      6B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 02 00:10:30 2021

                      pc 0002           ___bmul@product 0072              _SSPSTATbits 0094  
                     l91 063B                       l92 064E                       l93 0661  
                     l94 0674                       l95 0687                       l97 06C4  
                     l98 06D7                       l99 06EA             ___awdiv@sign 0076  
                     _v1 003C                       _v2 0028                       _v3 00A0  
                     fsr 0004      ___wmul@multiplicand 0072                      l100 06FD  
                    l101 0710                      l102 0721                      l130 03B1  
                    l115 0765                      l140 01D0                      l108 0740  
                    l133 0173                      l150 01F5                      l143 01DB  
                    l303 01AB                      l127 02D0                      l136 017B  
                    l154 0204                      l147 01EA                      l180 016A  
                    l157 020F                      l173 01BC                      l430 0418  
                    l174 01C1                      l191 0184                      l183 0163  
                    l177 0164                      l277 0258                      l279 0270  
                    l740 0493                      l549 034E                      l559 030A  
                    l808 0299                      l745 0196                      l754 022A  
                    l792 05C7                      l799 024B                      u800 0179  
                    u801 0178                      u810 0313                      u811 0312  
                    u900 02E9                      u901 02E8                      u830 0325  
                    u910 02F3                      u831 0324                      u911 02F2  
                    u825 0317                      u850 0336                      u930 0306  
                    u851 0335                      u931 0305                      u915 02EF  
                    u940 049E                      u845 0326                      u925 02FA  
                    u941 049D                      u870 034A                      u950 04A6  
                    u871 0349                      u855 0332                      u951 04A5  
                    u880 02D7                      u960 04F4                      u865 033E  
                    u881 02D6                      u961 04F3                      u970 051A  
                    u971 0519                      u980 0525                      u981 0524  
                    u990 052B                      u895 02DB                      u991 052A  
                    u975 0516                      _def 01C2                      fsr0 0004  
                    indf 0000                     l1400 02D1                     ?_def 0070  
                   l1410 02E9                     l1402 02D7                     l1412 02F3  
                   l1404 02DA                     l1500 021C                     l1414 02F9  
                   l1406 02E1                     l1430 04B5                     l1422 0497  
                   l1510 01B8                     l1520 0252                     l1416 0300  
                   l1408 02E5                     l1440 04E2                     l1432 04BD  
                   l1424 0498                     l1512 01BB                     l1504 01AD  
                   l1600 029A                     l1522 025F                     l1418 0306  
                   l1370 0173                     l1442 04F0                     l1426 049E  
                   l1434 04C4                     l1530 0198                     l1506 01B4  
                   l1610 02AC                     l1602 029E                     l1514 0164  
                   l1524 0266                     l1516 024C                     l1700 041B  
                   l1380 0316                     l1372 0179                     l1460 0525  
                   l1444 04F4                     l1428 04A6                     l1540 01AA  
                   l1532 0199                     l1508 01B6                     l1620 02B7  
                   l1612 02AD                     l1604 02A7                     l1526 026C  
                   l1518 024E                     l1710 043B                     l1702 041F  
                   l1390 033C                     l1382 031D                     l1374 030B  
                   l1462 052B                     l1470 054E                     l1454 04FF  
                   l1446 04F8                     l1438 04C5                     l1550 03BC  
                   l1534 019D                     l1630 02C4                     l1622 02B8  
                   l1614 02AE                     l1606 02AA                     l1720 0472  
                   l1712 0444                     l1704 0428                     l1392 033D  
                   l1384 0321                     l1376 030D                     l1480 05A0  
                   l1472 0555                     l1464 0533                     l1448 04FD  
                   l1560 03CD                     l1552 03BE                     l1544 03B2  
                   l1536 01A1                     l1632 02C7                     l1624 02BB  
                   l1616 02B1                     l1608 02AB                     l1800 06F5  
                   l1722 047E                     l1714 044C                     l1706 0430  
                   l1394 0344                     l1386 0325                     l1378 0313  
                   l1474 0583                     l1482 05A6                     l1466 0540  
                   l1458 051B                     l1570 03E5                     l1562 03D3  
                   l1554 03C2                     l1546 03B3                     l1538 01A3  
                   l1650 038E                     l1642 0350                     l1626 02BE  
                   l1618 02B4                     l1634 015F                     l1810 0727  
                   l1802 06FB                     l1724 0483                     l1716 0451  
                   l1708 0433                     l1388 0336                     l1396 034A  
                   l1476 058B                     l1468 0548                     l1484 05B1  
                   l1660 01CA                     l1572 03F6                     l1564 03D6  
                   l1580 040A                     l1556 03C7                     l1548 03B7  
                   l1652 03A2                     l1644 0354                     l1628 02C2  
                   l1636 017C                     l1812 072D                     l1804 0708  
                   l1740 05DE                     l1732 05C8                     l1590 0187  
                   l1478 0598                     l1486 05C5                     l1494 0213  
                   l1662 01D6                     l1670 01F6                     l1582 040F  
                   l1574 03FC                     l1566 03DD                     l1558 03CB  
                   l1654 03A7                     l1646 036A                     l1638 0181  
                   l1830 0776                     l1822 0752                     l1814 0732  
                   l1806 070E                     l1750 0611                     l1742 05E8  
                   l1734 05CD                     l1592 018D                     l1728 048F  
                   l1496 0214                     l1664 01DC                     l1672 01FE  
                   l1584 0414                     l1576 03FD                     l1568 03E1  
                   l1656 03AC                     l1648 0378                     l1680 0233  
                   l1840 07C1                     l1824 0757                     l1816 073A  
                   l1808 071B                     l1760 0639                     l1752 0617  
                   l1744 0600                     l1736 05D0                     l1594 0193  
                   l1498 0218                     l1658 01C2                     l1666 01E4  
                   l1674 020A                     l1578 0404                     l1682 0237  
                   l1690 0277                     l1842 07CD                     l1834 077D  
                   l1826 075F                     l1818 0746                     l1770 066C  
                   l1762 0646                     l1754 0622                     l1746 0608  
                   l1738 05D8                     l1596 0195                     l1588 0186  
                   l1668 01F0                     l1684 0245                     l1676 022E  
                   l1692 027B                     l1844 07D9                     l1836 0782  
                   l1828 076B                     l1780 069A                     l1772 0672  
                   l1764 064C                     l1756 0628                     l1748 060B  
                   l1678 0232                     l1694 0284                     l1846 07E5  
                   l1838 078A                     l1790 06C2                     l1782 06A0  
                   l1774 067F                     l1766 0659                     l1758 0633  
                   l1696 028C                     l1688 0272                     l1792 06CF  
                   l1784 06AB                     l1776 0685                     l1768 065F  
                   l1698 041A                     l1794 06D5                     l1786 06B1  
                   l1778 0692                     l1868 04D7                     l1796 06E2  
                   l1788 06BC                     l1798 06E8                     STR_1 00D6  
                   STR_2 00E7                     STR_3 001C                     STR_4 009C  
                   STR_5 00B9                     STR_6 00F8                     STR_7 00F8  
                   STR_8 00F8                     STR_9 0077                     u1000 0533  
                   u1001 0532                     u1010 058B                     u1011 058A  
                   u1020 05B1                     u1100 019D                     u1021 05B0  
                   u1101 019C                     u1030 05C5                     u1110 01AA  
                   u1031 05C4                     u1111 01A9                     u1200 040A  
                   u1120 03B7                     u1040 01B4                     u1201 0409  
                   u1121 03B6                     u1041 01B3                     u1210 040F  
                   u1130 03C2                     u1050 016A                     u1211 040E  
                   u1131 03C1                     u1051 0169                     u1060 0252  
                   u1220 018D                     u1140 03D3                     u1300 0283  
                   u1061 0251                     u1221 018C                     u1141 03D2  
                   u1301 0282                     u1230 0193                     u1310 0299  
                   u1231 0192                     u1311 0298                     u1320 0428  
                   u1240 01CA                     u1160 03E5                     u1400 064C  
                   u1321 0427                     u1241 01C9                     u1161 03E4  
                   u1401 064B                     u1090 026C                     u1330 0430  
                   u1250 01D6                     u1410 065F                     u1091 026B  
                   u1075 0259                     u1331 042F                     u1251 01D5  
                   u1155 03D7                     u1411 065E                     u1340 043B  
                   u1260 01E4                     u1180 03F6                     u1500 0727  
                   u1420 0672                     u1085 0260                     u1341 043A  
                   u1261 01E3                     u1181 03F5                     u1501 0726  
                   u1421 0671                     u1350 044C                     u1270 01F0  
                   u1510 073A                     u1430 0685                     u1351 044B  
                   u1271 01EF                     u1175 03E6                     u1511 0739  
                   u1431 0684                     u1360 047E                     u1280 01FE  
                   u1520 0746                     u1440 06A0                     u1361 047D  
                   u1281 01FD                     u1185 03F2                     u1521 0745  
                   u1441 069F                     u1370 0483                     u1290 020A  
                   u1530 0751                     u1450 06C2                     u1371 0482  
                   u1291 0209                     u1195 03FE                     u1531 0750  
                   u1451 06C1                     u1540 075F                     u1460 06D5  
                   u1380 0617                     u1541 075E                     u1461 06D4  
                   u1381 0616                     u1550 076B                     u1470 06E8  
                   u1390 0639                     u1551 076A                     u1471 06E7  
                   u1391 0638                     u1607 05EC                     u1560 0776  
                   u1480 06FB                     u1561 0775                     u1481 06FA  
                   u1617 0604                     u1570 077C                     u1490 070E  
                   u1571 077B                     u1491 070D                     u1707 06B7  
                   u1627 061D                     u1580 078A                     u1581 0789  
                   u1717 06CA                     u1637 062E                     u1727 06DD  
                   u1647 0641                     u1737 06F0                     u1657 0654  
                   u1747 0703                     u1667 0667                     u1757 0716  
                   u1677 067A                     u1597 05D4                     u1687 068D  
                   u1697 06A6                     _RCIF 0065                     _TXIF 0064  
                   _def1 01DC                     _def2 01F6                     _atoi 0419  
                   _main 05C8                     btemp 007E                     start 0000  
      ___bmul@multiplier 0073              division@val 007D                    ??_def 0061  
                  ?_def1 0070                    ?_def2 0070                    ?_atoi 0076  
                  ?_main 0070          __end_of___awdiv 0419                    STR_10 0050  
                  STR_11 0050                    _ANSEL 0188          ___awdiv@divisor 0070  
        __end_of___lwdiv 034F          __end_of___lwmod 030B          ___awdiv@counter 0075  
                  _RCREG 001A                    _SPBRG 0099                    _PORTB 0006  
                  _PORTD 0008          __end_of__doprnt 05C8                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019          __end_of_dpowers 001C  
        __end_of_isdigit 0197                    atoi@a 007B                    _setup 029A  
                  atoi@s 007D                    _putch 0173                    fpbase 0008  
                  pclath 000A          __end_of_spiInit 01C2          __end_of_spiRead 0185  
                  status 0003                    wtemp0 007E          __end_of_sprintf 024C  
        __initialization 07EB             __end_of_def1 01F6             __end_of_def2 0210  
           __end_of_atoi 0494             __end_of_main 07EB                   ??_def1 0061  
                 ??_def2 0061                   ??_atoi 0078                   ??_main 0064  
                 _DECENA 0021         ___awdiv@dividend 0072                   ?_setup 0070  
                 ?_putch 0070                   _ANSELH 0189                   _SPBRGH 009A  
                 _UNIDAD 0020                   _TRISC2 043A                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
       __end_of__fptable 000C                   ___bmul 0197         __end_of_division 03B2  
                 ___wmul 024C                ??___awdiv 0074                ??___lwdiv 0074  
              ??___lwmod 007C                ??__doprnt 0052         ___awdiv@quotient 0077  
           __doprnt@flag 0055                   _printf 0210             __doprnt@prec 0056  
                 _strcat 0271                   fptable 0003                   fptotal 0002  
              ??_isdigit 0070         __end_of_spiWrite 0164                ??_spiInit 0073  
              ??_spiRead 0070                ??_sprintf 005E  __end_of__initialization 07FC  
    ___bmul@multiplicand 0070           __pcstackCOMMON 0070            __end_of_setup 02D1  
          __end_of_putch 017C         division@variable 007C               __doprnt@ap 0051  
             __doprnt@pb 005A                  ??_setup 0074                  ??_putch 0071  
             __pbssBANK0 0020               __pbssBANK1 00A0               __pmaintext 05C8  
                ?___bmul 0070                  ?___wmul 0070  __size_of_spiReceiveWait 0007  
                _CENTENA 0022                  ?_printf 0070                  ?_strcat 0070  
                _SSPSTAT 0094               __stringtab 000C                ?_division 0070  
              ?_spiWrite 0070          __size_of___bmul 0015                  ___awdiv 03B2  
        __size_of___wmul 0025                  ___lwdiv 030B                  ___lwmod 02D1  
                __doprnt 0494                  _decenas 0024                  __ptext1 0271  
                __ptext2 022B                  __ptext3 015E                  __ptext4 017C  
                __ptext5 0164                  __ptext6 029A                  __ptext7 01AC  
                __ptext8 034F                  __ptext9 0197          __size_of_printf 001B  
        __size_of_strcat 0029                  _dpowers 0012             __size_of_def 001A  
                _isdigit 0185                  _spiInit 01AC                  _spiRead 017C  
                main@com 0067                  _sprintf 022B                  clrloop0 016C  
   end_of_initialization 07FC               ??_division 0079                _RCSTAbits 0018  
                printf@f 005E               ??_spiWrite 0070                _PORTCbits 0007  
            spiWrite@dat 0070                _TXSTAbits 0098           _spiReceiveWait 0164  
         __end_of___bmul 01AC           __end_of___wmul 0271              _BAUDCTLbits 0187  
         __end_of_printf 022B           __end_of_strcat 029A      start_initialization 07EB  
            __end_of_def 01DC   __end_of_spiReceiveWait 016B                 ??___bmul 0071  
               ??___wmul 0074              __doprnt@val 0057                 ??_printf 005B  
               ??_strcat 0071                ___latbits 0002            __pcstackBANK0 0050  
      __size_of__fptable 0009                __doprnt@c 0059                __doprnt@f 0050  
      __size_of_division 0063         ___lwdiv@dividend 0072          ?_spiReceiveWait 0070  
              __pfunctab 0003                 ?___awdiv 0070                 ?___lwdiv 0070  
               ?___lwmod 0078                 ?__doprnt 0050        __size_of_spiWrite 0006  
              __pstrings 000C                 ?_isdigit 0070                 ?_spiInit 0070  
               ?_spiRead 0070         ___lwdiv@quotient 0075                 ?_sprintf 005B  
         __size_of_setup 0037           __size_of_putch 0009     spiInit@sTransmitEdge 0072  
         ___wmul@product 0074                clear_ram0 016B       spiInit@sDataSample 0070  
               _VOLTAJE1 0027                 _VOLTAJE2 0026              __stringbase 0011  
      ___wmul@multiplier 0070         __size_of___awdiv 0067         __size_of___lwdiv 0044  
       __size_of___lwmod 003A         __size_of__doprnt 0134       __end_of__stringtab 0012  
            _isdigit$925 0070                 __fptable 0003               strcat@from 0070  
       __size_of_isdigit 0012          ___lwdiv@divisor 0070                 _centenas 0025  
        ___lwdiv@counter 0077                 __ptext10 03B2                 __ptext11 01F6  
               __ptext20 0185                 __ptext12 01DC                 __ptext21 024C  
               __ptext13 01C2                 __ptext14 0210                 __ptext15 0494  
               __ptext16 0173                 __ptext17 02D1                 __ptext18 030B  
               __ptext19 0419         __size_of_spiInit 0016         __size_of_spiRead 0009  
               _division 034F         __size_of_sprintf 0021            __size_of_def1 001A  
          __size_of_def2 001A            __size_of_atoi 007B            __size_of_main 0223  
               _spiWrite 015E                 _unidades 0023             spiInit@sType 0073  
               atoi@sign 007A                 fp__putch 0009        spiInit@sClockIdle 0071  
              putch@info 0070                 isdigit@c 0071                sprintf@ap 0060  
              sprintf@pb 0062                sprintf@wh 0061         ___lwmod@dividend 007A  
       ??_spiReceiveWait 0070                stringcode 000C               _OSCCONbits 008F  
               printf@ap 005D                 printf@pb 005F                 sprintf@f 005B  
               strcat@cp 0073                 strcat@to 0072          ___lwmod@divisor 0078  
        ___lwmod@counter 007D                 stringdir 000C                 stringtab 000C  
