

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 01 01:58:19 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  000B                     _INTCONbits	set	11
   290  0005                     _PORTA	set	5
   291  001E                     _ADRESH	set	30
   292  001F                     _ADCON0bits	set	31
   293  000C                     _PIR1bits	set	12
   294  0063                     _SSPIF	set	99
   295  0094                     _SSPSTATbits	set	148
   296  0094                     _SSPSTAT	set	148
   297  008C                     _PIE1bits	set	140
   298  009F                     _ADCON1bits	set	159
   299  008F                     _OSCCONbits	set	143
   300  0085                     _TRISAbits	set	133
   301  043B                     _TRISC3	set	1083
   302  043D                     _TRISC5	set	1085
   303  0189                     _ANSELH	set	393
   304  0188                     _ANSEL	set	392
   305                           
   306                           	psect	cinit
   307  000F                     start_initialization:	
   308                           ; #config settings
   309                           
   310  000F                     __initialization:
   311                           
   312                           ; Clear objects allocated to COMMON
   313  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   314  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   315  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   316  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   317  0013                     end_of_initialization:	
   318                           ;End of C runtime variable initialization code
   319                           
   320  0013                     __end_of__initialization:
   321  0013  0183               	clrf	3
   322  0014  120A  118A  28BE   	ljmp	_main	;jump to C main() function
   323                           
   324                           	psect	bssCOMMON
   325  0075                     __pbssCOMMON:
   326  0075                     _GUARDADO2:
   327  0075                     	ds	1
   328  0076                     _GUARDADO:
   329  0076                     	ds	1
   330  0077                     _var2:
   331  0077                     	ds	1
   332  0078                     _var1:
   333  0078                     	ds	1
   334                           
   335                           	psect	cstackCOMMON
   336  0070                     __pcstackCOMMON:
   337  0070                     ?_spiRead:
   338  0070                     ??_spiRead:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_spiWrite:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ??_spiWrite:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_setup:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_isr:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_main:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_spiReceiveWait:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ??_spiReceiveWait:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     spiWrite@dat:	
   363                           ; 1 bytes @ 0x0
   364                           
   365                           
   366                           ; 1 bytes @ 0x0
   367  0070                     	ds	1
   368  0071                     ??_isr:
   369                           
   370                           ; 1 bytes @ 0x1
   371  0071                     	ds	3
   372  0074                     ??_spiInit:
   373  0074                     spiInit@sType:	
   374                           ; 1 bytes @ 0x4
   375                           
   376                           
   377                           ; 1 bytes @ 0x4
   378  0074                     	ds	1
   379  0075                     ??_setup:
   380                           
   381                           	psect	cstackBANK0
   382  0020                     __pcstackBANK0:	
   383                           ; 1 bytes @ 0x5
   384                           
   385  0020                     ?_spiInit:
   386  0020                     spiInit@sDataSample:	
   387                           ; 1 bytes @ 0x0
   388                           
   389                           
   390                           ; 1 bytes @ 0x0
   391  0020                     	ds	1
   392  0021                     spiInit@sClockIdle:
   393                           
   394                           ; 1 bytes @ 0x1
   395  0021                     	ds	1
   396  0022                     spiInit@sTransmitEdge:
   397                           
   398                           ; 1 bytes @ 0x2
   399  0022                     	ds	1
   400  0023                     ??_main:
   401                           
   402                           ; 1 bytes @ 0x3
   403  0023                     	ds	2
   404                           
   405                           	psect	maintext
   406  00BE                     __pmaintext:	
   407 ;;
   408 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   409 ;;
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 79 in file "SPI_ESCLAVO.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : B00/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          0       2       0       0       0
   429 ;;      Totals:         0       2       0       0       0
   430 ;;Total ram usage:        2 bytes
   431 ;; Hardware stack levels required when called:    5
   432 ;; This function calls:
   433 ;;		_setup
   434 ;; This function is called by:
   435 ;;		Startup code after reset
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           
   440                           ;psect for function _main
   441  00BE                     _main:
   442  00BE                     l912:	
   443                           ;incstack = 0
   444                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   445                           
   446                           
   447                           ;SPI_ESCLAVO.c: 80:     setup();
   448  00BE  120A  118A  2067  120A  118A  	fcall	_setup
   449  00C3                     l914:
   450                           
   451                           ;SPI_ESCLAVO.c: 85:         ADCON0bits.GO = 1;
   452  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   453  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   454  00C5  149F               	bsf	31,1	;volatile
   455  00C6                     l916:
   456                           
   457                           ;SPI_ESCLAVO.c: 86:         _delay((unsigned long)((100)*(4000000/4000.0)));
   458  00C6  3082               	movlw	130
   459  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   460  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   461  00C9  00A4               	movwf	??_main+1
   462  00CA  30DD               	movlw	221
   463  00CB  00A3               	movwf	??_main
   464  00CC                     u87:
   465  00CC  0BA3               	decfsz	??_main,f
   466  00CD  28CC               	goto	u87
   467  00CE  0BA4               	decfsz	??_main+1,f
   468  00CF  28CC               	goto	u87
   469  00D0  28C3               	goto	l914
   470  00D1  120A  118A  280C   	ljmp	start
   471  00D4                     __end_of_main:
   472                           
   473                           	psect	text1
   474  0067                     __ptext1:	
   475 ;; *************** function _setup *****************
   476 ;; Defined at:
   477 ;;		line 93 in file "SPI_ESCLAVO.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, pclath, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   491 ;;      Params:         0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used:    1
   497 ;; Hardware stack levels required when called:    4
   498 ;; This function calls:
   499 ;;		_spiInit
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           
   506                           ;psect for function _setup
   507  0067                     _setup:
   508  0067                     l864:	
   509                           ;incstack = 0
   510                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   511                           
   512                           
   513                           ;SPI_ESCLAVO.c: 94:     ANSEL = 0b00000011;
   514  0067  3003               	movlw	3
   515  0068  1683               	bsf	3,5	;RP0=1, select bank3
   516  0069  1703               	bsf	3,6	;RP1=1, select bank3
   517  006A  0088               	movwf	8	;volatile
   518  006B                     l866:
   519                           
   520                           ;SPI_ESCLAVO.c: 95:     ANSELH = 0X00;
   521  006B  0189               	clrf	9	;volatile
   522  006C                     l868:
   523                           
   524                           ;SPI_ESCLAVO.c: 96:     TRISAbits.TRISA0 = 1;
   525  006C  1683               	bsf	3,5	;RP0=1, select bank1
   526  006D  1303               	bcf	3,6	;RP1=0, select bank1
   527  006E  1405               	bsf	5,0	;volatile
   528  006F                     l870:
   529                           
   530                           ;SPI_ESCLAVO.c: 97:     TRISAbits.TRISA1 = 1;
   531  006F  1485               	bsf	5,1	;volatile
   532  0070                     l872:
   533                           
   534                           ;SPI_ESCLAVO.c: 99:     PORTA = 0X00;
   535  0070  1283               	bcf	3,5	;RP0=0, select bank0
   536  0071  1303               	bcf	3,6	;RP1=0, select bank0
   537  0072  0185               	clrf	5	;volatile
   538  0073                     l874:
   539                           
   540                           ;SPI_ESCLAVO.c: 102:     OSCCONbits.IRCF2 = 1;
   541  0073  1683               	bsf	3,5	;RP0=1, select bank1
   542  0074  1303               	bcf	3,6	;RP1=0, select bank1
   543  0075  170F               	bsf	15,6	;volatile
   544  0076                     l876:
   545                           
   546                           ;SPI_ESCLAVO.c: 103:     OSCCONbits.IRCF1 = 1;
   547  0076  168F               	bsf	15,5	;volatile
   548  0077                     l878:
   549                           
   550                           ;SPI_ESCLAVO.c: 104:     OSCCONbits.IRCF0 = 0;
   551  0077  120F               	bcf	15,4	;volatile
   552  0078                     l880:
   553                           
   554                           ;SPI_ESCLAVO.c: 105:     OSCCONbits.SCS = 1;
   555  0078  140F               	bsf	15,0	;volatile
   556  0079                     l882:
   557                           
   558                           ;SPI_ESCLAVO.c: 108:     ADCON0bits.CHS = 0;
   559  0079  30C3               	movlw	-61
   560  007A  1283               	bcf	3,5	;RP0=0, select bank0
   561  007B  1303               	bcf	3,6	;RP1=0, select bank0
   562  007C  059F               	andwf	31,f	;volatile
   563  007D                     l884:
   564                           
   565                           ;SPI_ESCLAVO.c: 110:     ADCON0bits.ADCS1 = 1;
   566  007D  179F               	bsf	31,7	;volatile
   567  007E                     l886:
   568                           
   569                           ;SPI_ESCLAVO.c: 111:     ADCON0bits.ADCS0 = 1;
   570  007E  171F               	bsf	31,6	;volatile
   571  007F                     l888:
   572                           
   573                           ;SPI_ESCLAVO.c: 113:     ADCON0bits.ADON = 1;
   574  007F  141F               	bsf	31,0	;volatile
   575  0080                     l890:
   576                           
   577                           ;SPI_ESCLAVO.c: 115:     ADCON1bits.ADFM = 0;
   578  0080  1683               	bsf	3,5	;RP0=1, select bank1
   579  0081  1303               	bcf	3,6	;RP1=0, select bank1
   580  0082  139F               	bcf	31,7	;volatile
   581  0083                     l892:
   582                           
   583                           ;SPI_ESCLAVO.c: 116:     ADCON1bits.VCFG0 = 0;
   584  0083  121F               	bcf	31,4	;volatile
   585  0084                     l894:
   586                           
   587                           ;SPI_ESCLAVO.c: 117:     ADCON1bits.VCFG1 = 0;
   588  0084  129F               	bcf	31,5	;volatile
   589  0085                     l896:
   590                           
   591                           ;SPI_ESCLAVO.c: 120:     INTCONbits.GIE = 1;
   592  0085  178B               	bsf	11,7	;volatile
   593  0086                     l898:
   594                           
   595                           ;SPI_ESCLAVO.c: 121:     PIR1bits.ADIF = 0;
   596  0086  1283               	bcf	3,5	;RP0=0, select bank0
   597  0087  1303               	bcf	3,6	;RP1=0, select bank0
   598  0088  130C               	bcf	12,6	;volatile
   599  0089                     l900:
   600                           
   601                           ;SPI_ESCLAVO.c: 122:     PIE1bits.ADIE = 1;
   602  0089  1683               	bsf	3,5	;RP0=1, select bank1
   603  008A  1303               	bcf	3,6	;RP1=0, select bank1
   604  008B  170C               	bsf	12,6	;volatile
   605  008C                     l902:
   606                           
   607                           ;SPI_ESCLAVO.c: 123:     INTCONbits.PEIE = 1;
   608  008C  170B               	bsf	11,6	;volatile
   609  008D                     l904:
   610                           
   611                           ;SPI_ESCLAVO.c: 124:     PIR1bits.SSPIF = 0;
   612  008D  1283               	bcf	3,5	;RP0=0, select bank0
   613  008E  1303               	bcf	3,6	;RP1=0, select bank0
   614  008F  118C               	bcf	12,3	;volatile
   615  0090                     l906:
   616                           
   617                           ;SPI_ESCLAVO.c: 125:     PIE1bits.SSPIE = 1;
   618  0090  1683               	bsf	3,5	;RP0=1, select bank1
   619  0091  1303               	bcf	3,6	;RP1=0, select bank1
   620  0092  158C               	bsf	12,3	;volatile
   621  0093                     l908:
   622                           
   623                           ;SPI_ESCLAVO.c: 126:     TRISAbits.TRISA5 = 1;
   624  0093  1685               	bsf	5,5	;volatile
   625  0094                     l910:
   626                           
   627                           ;SPI_ESCLAVO.c: 127:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
      +                          _LOW,
   628  0094  1283               	bcf	3,5	;RP0=0, select bank0
   629  0095  1303               	bcf	3,6	;RP1=0, select bank0
   630  0096  01A0               	clrf	spiInit@sDataSample
   631  0097  01A1               	clrf	spiInit@sClockIdle
   632  0098  01A2               	clrf	spiInit@sTransmitEdge
   633  0099  3024               	movlw	36
   634  009A  120A  118A  20A0  120A  118A  	fcall	_spiInit
   635  009F                     l62:
   636  009F  0008               	return
   637  00A0                     __end_of_setup:
   638                           
   639                           	psect	text2
   640  00A0                     __ptext2:	
   641 ;; *************** function _spiInit *****************
   642 ;; Defined at:
   643 ;;		line 12 in file "S_I_P.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;  sType           1    wreg     enum E1264
   646 ;;  sDataSample     1    0[BANK0 ] enum E1272
   647 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   648 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  sType           1    4[COMMON] enum E1264
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   660 ;;      Params:         0       3       0       0       0
   661 ;;      Locals:         1       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0
   663 ;;      Totals:         1       3       0       0       0
   664 ;;Total ram usage:        4 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; Hardware stack levels required when called:    3
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_setup
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           
   675                           ;psect for function _spiInit
   676  00A0                     _spiInit:
   677                           
   678                           ;incstack = 0
   679                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   680                           ;spiInit@sType stored from wreg
   681  00A0  00F4               	movwf	spiInit@sType
   682  00A1                     l854:
   683                           
   684                           ;S_I_P.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle s
      +                          ClockIdle, Spi_Transmit_Edge sTransmitEdge);S_I_P.c: 13: {;S_I_P.c: 14:     TRISC5 = 0;
   685  00A1  1683               	bsf	3,5	;RP0=1, select bank1
   686  00A2  1303               	bcf	3,6	;RP1=0, select bank1
   687  00A3  1287               	bcf	7,5	;volatile
   688                           
   689                           ;S_I_P.c: 15:     if(sType & 0b00000100)
   690  00A4  1D74               	btfss	spiInit@sType,2
   691  00A5  28A7               	goto	u71
   692  00A6  28A8               	goto	u70
   693  00A7                     u71:
   694  00A7  28B0               	goto	l860
   695  00A8                     u70:
   696  00A8                     l856:
   697                           
   698                           ;S_I_P.c: 16:     {;S_I_P.c: 17:         SSPSTAT = sTransmitEdge;
   699  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   700  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   701  00AA  0822               	movf	spiInit@sTransmitEdge,w
   702  00AB  1683               	bsf	3,5	;RP0=1, select bank1
   703  00AC  1303               	bcf	3,6	;RP1=0, select bank1
   704  00AD  0094               	movwf	20	;volatile
   705  00AE                     l858:
   706                           
   707                           ;S_I_P.c: 18:         TRISC3 = 1;
   708  00AE  1587               	bsf	7,3	;volatile
   709                           
   710                           ;S_I_P.c: 19:     }
   711  00AF  28B8               	goto	l78
   712  00B0                     l860:
   713                           
   714                           ;S_I_P.c: 21:     {;S_I_P.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   715  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   716  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   717  00B2  0820               	movf	spiInit@sDataSample,w
   718  00B3  0422               	iorwf	spiInit@sTransmitEdge,w
   719  00B4  1683               	bsf	3,5	;RP0=1, select bank1
   720  00B5  1303               	bcf	3,6	;RP1=0, select bank1
   721  00B6  0094               	movwf	20	;volatile
   722  00B7                     l862:
   723                           
   724                           ;S_I_P.c: 23:         TRISC3 = 0;
   725  00B7  1187               	bcf	7,3	;volatile
   726  00B8                     l78:	
   727                           ;S_I_P.c: 24:     }
   728                           
   729                           
   730                           ;S_I_P.c: 26:     SSPCON = sType | sClockIdle;
   731  00B8  0874               	movf	spiInit@sType,w
   732  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   733  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   734  00BB  0421               	iorwf	spiInit@sClockIdle,w
   735  00BC  0094               	movwf	20	;volatile
   736  00BD                     l79:
   737  00BD  0008               	return
   738  00BE                     __end_of_spiInit:
   739                           
   740                           	psect	text3
   741  0017                     __ptext3:	
   742 ;; *************** function _isr *****************
   743 ;; Defined at:
   744 ;;		line 53 in file "SPI_ESCLAVO.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0, pclath, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       0       0       0       0
   759 ;;      Locals:         0       0       0       0       0
   760 ;;      Temps:          3       0       0       0       0
   761 ;;      Totals:         3       0       0       0       0
   762 ;;Total ram usage:        3 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    2
   765 ;; This function calls:
   766 ;;		_spiRead
   767 ;;		_spiWrite
   768 ;; This function is called by:
   769 ;;		Interrupt level 1
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           
   774                           ;psect for function _isr
   775  0017                     _isr:
   776  0017                     i1l756:
   777                           
   778                           ;SPI_ESCLAVO.c: 54:    if(SSPIF == 1){
   779  0017  1283               	bcf	3,5	;RP0=0, select bank0
   780  0018  1303               	bcf	3,6	;RP1=0, select bank0
   781  0019  1D8C               	btfss	12,3	;volatile
   782  001A  281C               	goto	u3_21
   783  001B  281D               	goto	u3_20
   784  001C                     u3_21:
   785  001C  283C               	goto	i1l762
   786  001D                     u3_20:
   787  001D                     i1l758:
   788                           
   789                           ;SPI_ESCLAVO.c: 55:         var1 = spiRead();
   790  001D  120A  118A  20D4  120A  118A  	fcall	_spiRead
   791  0022  00F1               	movwf	??_isr
   792  0023  0871               	movf	??_isr,w
   793  0024  00F8               	movwf	_var1
   794                           
   795                           ;SPI_ESCLAVO.c: 56:         spiWrite(GUARDADO);
   796  0025  0876               	movf	_GUARDADO,w
   797  0026  120A  118A  20E4  120A  118A  	fcall	_spiWrite
   798                           
   799                           ;SPI_ESCLAVO.c: 57:         var2 = spiRead();
   800  002B  120A  118A  20D4  120A  118A  	fcall	_spiRead
   801  0030  00F1               	movwf	??_isr
   802  0031  0871               	movf	??_isr,w
   803  0032  00F7               	movwf	_var2
   804                           
   805                           ;SPI_ESCLAVO.c: 58:         spiWrite(GUARDADO2);
   806  0033  0875               	movf	_GUARDADO2,w
   807  0034  120A  118A  20E4  120A  118A  	fcall	_spiWrite
   808  0039                     i1l760:
   809                           
   810                           ;SPI_ESCLAVO.c: 59:         SSPIF = 0;
   811  0039  1283               	bcf	3,5	;RP0=0, select bank0
   812  003A  1303               	bcf	3,6	;RP1=0, select bank0
   813  003B  118C               	bcf	12,3	;volatile
   814  003C                     i1l762:
   815                           
   816                           ;SPI_ESCLAVO.c: 61:    if (PIR1bits.ADIF == 1)
   817  003C  1F0C               	btfss	12,6	;volatile
   818  003D  283F               	goto	u4_21
   819  003E  2840               	goto	u4_20
   820  003F                     u4_21:
   821  003F  2860               	goto	i1l51
   822  0040                     u4_20:
   823  0040                     i1l764:
   824                           
   825                           ;SPI_ESCLAVO.c: 62:     {;SPI_ESCLAVO.c: 63:         if (ADCON0bits.CHS == 1)
   826  0040  0C1F               	rrf	31,w	;volatile
   827  0041  00F1               	movwf	??_isr
   828  0042  0C71               	rrf	??_isr,w
   829  0043  390F               	andlw	15
   830  0044  3A01               	xorlw	1
   831  0045  1D03               	skipz
   832  0046  2848               	goto	u5_21
   833  0047  2849               	goto	u5_20
   834  0048                     u5_21:
   835  0048  2850               	goto	i1l770
   836  0049                     u5_20:
   837  0049                     i1l766:
   838                           
   839                           ;SPI_ESCLAVO.c: 64:         {;SPI_ESCLAVO.c: 65:             ADCON0bits.CHS = 0;
   840  0049  30C3               	movlw	-61
   841  004A  059F               	andwf	31,f	;volatile
   842  004B                     i1l768:
   843                           
   844                           ;SPI_ESCLAVO.c: 66:             GUARDADO = ADRESH;
   845  004B  081E               	movf	30,w	;volatile
   846  004C  00F1               	movwf	??_isr
   847  004D  0871               	movf	??_isr,w
   848  004E  00F6               	movwf	_GUARDADO
   849                           
   850                           ;SPI_ESCLAVO.c: 67:         }
   851  004F  2858               	goto	i1l774
   852  0050                     i1l770:
   853                           
   854                           ;SPI_ESCLAVO.c: 69:             ADCON0bits.CHS = 1;
   855  0050  081F               	movf	31,w	;volatile
   856  0051  39C3               	andlw	-61
   857  0052  3804               	iorlw	4
   858  0053  009F               	movwf	31	;volatile
   859  0054                     i1l772:
   860                           
   861                           ;SPI_ESCLAVO.c: 70:             GUARDADO2 = ADRESH;}
   862  0054  081E               	movf	30,w	;volatile
   863  0055  00F1               	movwf	??_isr
   864  0056  0871               	movf	??_isr,w
   865  0057  00F5               	movwf	_GUARDADO2
   866  0058                     i1l774:
   867                           
   868                           ;SPI_ESCLAVO.c: 72:         _delay((unsigned long)((50)*(4000000/4000000.0)));
   869  0058  3010               	movlw	16
   870  0059  00F1               	movwf	??_isr
   871  005A                     u9_27:
   872  005A  0BF1               	decfsz	??_isr,f
   873  005B  285A               	goto	u9_27
   874  005C  0000               	nop
   875  005D                     i1l776:
   876                           
   877                           ;SPI_ESCLAVO.c: 73:         PIR1bits.ADIF = 0;
   878  005D  1283               	bcf	3,5	;RP0=0, select bank0
   879  005E  1303               	bcf	3,6	;RP1=0, select bank0
   880  005F  130C               	bcf	12,6	;volatile
   881  0060                     i1l51:
   882  0060  0873               	movf	??_isr+2,w
   883  0061  008A               	movwf	10
   884  0062  0E72               	swapf	??_isr+1,w
   885  0063  0083               	movwf	3
   886  0064  0EFE               	swapf	btemp,f
   887  0065  0E7E               	swapf	btemp,w
   888  0066  0009               	retfie
   889  0067                     __end_of_isr:
   890                           
   891                           	psect	intentry
   892  0004                     __pintentry:	
   893                           ;incstack = 0
   894                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   895                           
   896  0004                     interrupt_function:
   897  007E                     saved_w	set	btemp
   898  0004  00FE               	movwf	btemp
   899  0005  0E03               	swapf	3,w
   900  0006  00F2               	movwf	??_isr+1
   901  0007  080A               	movf	10,w
   902  0008  00F3               	movwf	??_isr+2
   903  0009  120A  118A  2817   	ljmp	_isr
   904                           
   905                           	psect	text4
   906  00E4                     __ptext4:	
   907 ;; *************** function _spiWrite *****************
   908 ;; Defined at:
   909 ;;		line 34 in file "S_I_P.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;  dat             1    wreg     unsigned char 
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  dat             1    0[COMMON] unsigned char 
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   923 ;;      Params:         0       0       0       0       0
   924 ;;      Locals:         1       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0
   926 ;;      Totals:         1       0       0       0       0
   927 ;;Total ram usage:        1 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_isr
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _spiWrite
   938  00E4                     _spiWrite:
   939                           
   940                           ;incstack = 0
   941                           ; Regs used in _spiWrite: [wreg]
   942                           ;spiWrite@dat stored from wreg
   943  00E4  00F0               	movwf	spiWrite@dat
   944  00E5                     i1l706:
   945                           
   946                           ;S_I_P.c: 34: void spiWrite(char dat);S_I_P.c: 35: {;S_I_P.c: 36:     SSPBUF = dat;
   947  00E5  0870               	movf	spiWrite@dat,w
   948  00E6  1283               	bcf	3,5	;RP0=0, select bank0
   949  00E7  1303               	bcf	3,6	;RP1=0, select bank0
   950  00E8  0093               	movwf	19	;volatile
   951  00E9                     i1l88:
   952  00E9  0008               	return
   953  00EA                     __end_of_spiWrite:
   954                           
   955                           	psect	text5
   956  00D4                     __ptext5:	
   957 ;; *************** function _spiRead *****************
   958 ;; Defined at:
   959 ;;		line 47 in file "S_I_P.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      unsigned char 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0
   976 ;;      Totals:         0       0       0       0       0
   977 ;;Total ram usage:        0 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    1
   980 ;; This function calls:
   981 ;;		_spiReceiveWait
   982 ;; This function is called by:
   983 ;;		_isr
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function _spiRead
   989  00D4                     _spiRead:
   990  00D4                     i1l700:	
   991                           ;incstack = 0
   992                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   993                           
   994                           
   995                           ;S_I_P.c: 49:     spiReceiveWait();
   996  00D4  120A  118A  20DD  120A  118A  	fcall	_spiReceiveWait
   997  00D9                     i1l702:
   998                           
   999                           ;S_I_P.c: 50:     return(SSPBUF);
  1000  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1001  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1002  00DB  0813               	movf	19,w	;volatile
  1003  00DC                     i1l96:
  1004  00DC  0008               	return
  1005  00DD                     __end_of_spiRead:
  1006                           
  1007                           	psect	text6
  1008  00DD                     __ptext6:	
  1009 ;; *************** function _spiReceiveWait *****************
  1010 ;; Defined at:
  1011 ;;		line 29 in file "S_I_P.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;		None
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;		None
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      void 
  1018 ;; Registers used:
  1019 ;;		None
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1025 ;;      Params:         0       0       0       0       0
  1026 ;;      Locals:         0       0       0       0       0
  1027 ;;      Temps:          0       0       0       0       0
  1028 ;;      Totals:         0       0       0       0       0
  1029 ;;Total ram usage:        0 bytes
  1030 ;; Hardware stack levels used:    1
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		_spiRead
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           
  1039                           ;psect for function _spiReceiveWait
  1040  00DD                     _spiReceiveWait:
  1041  00DD                     i1l698:	
  1042                           ;incstack = 0
  1043                           ; Regs used in _spiReceiveWait: []
  1044                           
  1045  00DD                     i1l82:	
  1046                           ;S_I_P.c: 31:     while ( !SSPSTATbits.BF );
  1047                           
  1048  00DD  1683               	bsf	3,5	;RP0=1, select bank1
  1049  00DE  1303               	bcf	3,6	;RP1=0, select bank1
  1050  00DF  1C14               	btfss	20,0	;volatile
  1051  00E0  28E2               	goto	u2_21
  1052  00E1  28E3               	goto	u2_20
  1053  00E2                     u2_21:
  1054  00E2  28DD               	goto	i1l82
  1055  00E3                     u2_20:
  1056  00E3                     i1l85:
  1057  00E3  0008               	return
  1058  00E4                     __end_of_spiReceiveWait:
  1059  007E                     btemp	set	126	;btemp
  1060  007E                     wtemp0	set	126
  1061                           
  1062                           	psect	config
  1063                           
  1064                           ;Config register CONFIG1 @ 0x2007
  1065                           ;	Oscillator Selection bits
  1066                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1067                           ;	Watchdog Timer Enable bit
  1068                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1069                           ;	Power-up Timer Enable bit
  1070                           ;	PWRTE = OFF, PWRT disabled
  1071                           ;	RE3/MCLR pin function select bit
  1072                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1073                           ;	Code Protection bit
  1074                           ;	CP = OFF, Program memory code protection is disabled
  1075                           ;	Data Code Protection bit
  1076                           ;	CPD = OFF, Data memory code protection is disabled
  1077                           ;	Brown Out Reset Selection bits
  1078                           ;	BOREN = OFF, BOR disabled
  1079                           ;	Internal External Switchover bit
  1080                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1081                           ;	Fail-Safe Clock Monitor Enabled bit
  1082                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1083                           ;	Low Voltage Programming Enable bit
  1084                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1085                           ;	In-Circuit Debugger Mode bit
  1086                           ;	DEBUG = 0x1, unprogrammed default
  1087  2007                     	org	8199
  1088  2007  20D4               	dw	8404
  1089                           
  1090                           ;Config register CONFIG2 @ 0x2008
  1091                           ;	Brown-out Reset Selection bit
  1092                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1093                           ;	Flash Program Memory Self Write Enable bits
  1094                           ;	WRT = OFF, Write protection off
  1095  2008                     	org	8200
  1096  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      5       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     456
                                              3 BANK0      2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       5       5        6.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 01 01:58:19 2021

            _SSPSTATbits 0094                       l62 009F                       l78 00B8  
                     l79 00BD                       u70 00A8                       u71 00A7  
                     u87 00CC                      l900 0089                      l910 0094  
                    l902 008C                      l904 008D                      l912 00BE  
                    l906 0090                      l914 00C3                      l860 00B0  
                    l908 0093                      l916 00C6                      l862 00B7  
                    l854 00A1                      l870 006F                      l856 00A8  
                    l880 0078                      l872 0070                      l864 0067  
                    l858 00AE                      l890 0080                      l882 0079  
                    l874 0073                      l866 006B                      l892 0083  
                    l884 007D                      l876 0076                      l868 006C  
                    l894 0084                      l886 007E                      l878 0077  
                    l896 0085                      l888 007F                      l898 0086  
                    _isr 0017                     ?_isr 0070                     i1l51 0060  
                   i1l82 00DD                     i1l85 00E3                     i1l96 00DC  
                   i1l88 00E9                     u2_20 00E3                     u2_21 00E2  
                   u3_20 001D                     u3_21 001C                     u4_20 0040  
                   u4_21 003F                     u5_20 0049                     u5_21 0048  
                   u9_27 005A                     _main 00BE                     _var1 0078  
                   _var2 0077                     btemp 007E                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l700 00D4                    i1l702 00D9                    i1l706 00E5  
                  i1l760 0039                    i1l770 0050                    i1l762 003C  
                  i1l772 0054                    i1l764 0040                    i1l756 0017  
                  i1l774 0058                    i1l766 0049                    i1l758 001D  
                  i1l776 005D                    i1l768 004B                    i1l698 00DD  
                  _PORTA 0005                    _SSPIF 0063                    _setup 0067  
                  pclath 000A          __end_of_spiInit 00BE          __end_of_spiRead 00DD  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00D4                   ??_main 0023                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 saved_w 007E         __end_of_spiWrite 00EA                ??_spiInit 0074  
              ??_spiRead 0070  __end_of__initialization 0013           __pcstackCOMMON 0070  
          __end_of_setup 00A0                  ??_setup 0075               __pmaintext 00BE  
             __pintentry 0004  __size_of_spiReceiveWait 0007                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 0067                  __ptext2 00A0  
                __ptext3 0017                  __ptext4 00E4                  __ptext5 00D4  
                __ptext6 00DD             __size_of_isr 0050                _GUARDADO2 0075  
                _spiInit 00A0                  _spiRead 00D4     end_of_initialization 0013  
             ??_spiWrite 0070                _TRISAbits 0085              spiWrite@dat 0070  
         _spiReceiveWait 00DD      start_initialization 000F              __end_of_isr 0067  
 __end_of_spiReceiveWait 00E4              __pbssCOMMON 0075                ___latbits 0002  
          __pcstackBANK0 0020          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
               ?_spiInit 0020                 ?_spiRead 0070           __size_of_setup 0039  
   spiInit@sTransmitEdge 0022                 _GUARDADO 0076        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0020                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F         __size_of_spiInit 001E  
       __size_of_spiRead 0009            __size_of_main 0016                 _spiWrite 00E4  
           spiInit@sType 0074        spiInit@sClockIdle 0021               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0070               _OSCCONbits 008F  
